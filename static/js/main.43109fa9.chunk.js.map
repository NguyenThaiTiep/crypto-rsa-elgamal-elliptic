{"version":3,"sources":["containers/admin/topbar/index.tsx","containers/admin/navbar/navbarItem.tsx","components/common/Tab/index.tsx","components/common/icon/index.tsx","components/form-input/inputContainer/index.tsx","containers/markdown/index.tsx","components/ElGamal/buildCrypto/decode/index.tsx","components/ElGamal/buildCrypto/encode/index.tsx","components/ElGamal/buildCrypto/genarateKey/index.tsx","components/ElGamal/buildCrypto/index.tsx","components/ElGamal/crypto/index.tsx","components/ElGamal/sign/index.tsx","components/ElGamal/checkSign/index.tsx","containers/admin/outlets/ElGamal/index.tsx","components/RSA/buildCrypto/decode/index.tsx","components/RSA/buildCrypto/encode/index.tsx","components/RSA/buildCrypto/genarateKey/index.tsx","utils/gcd.ts","components/RSA/buildCrypto/index.tsx","components/RSA/signRSA/index.tsx","components/RSA/checkSignRSA/index.tsx","containers/admin/outlets/RSA/index.tsx","utils/elliptic.ts","components/Elliptic/chartElliptic/index.tsx","components/Elliptic/dotList/index.tsx","components/Elliptic/index.tsx","containers/admin/outlets/Elliptic/index.tsx","containers/admin/router.tsx","containers/admin/navbar/index.tsx","containers/admin/index.tsx","app/router/index.tsx","app/pages/admin/index.tsx","service/history/index.ts","app/index.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","root","backgroundColor","title","color","fontSize","avatar","width","height","dropdown","borderRadius","border","boxShadow","hexToRgb","top","margin","textAlign","WebkitBackgroundClip","backgroundClip","dropdownItem","padding","WebkitTransition","MozTransition","OTransition","MsTransition","transition","display","clear","lineHeight","whiteSpace","minHeight","zIndex","popperClose","pointerEvents","popperNav","breakpoints","down","position","left","transform","willChange","marginLeft","marginRight","marginTop","marginBottom","paper","maxHeight","overflowY","TopBar","props","classes","useState","className","onMobileNavOpen","rest","AppBar","clsx","elevation","Toolbar","to","Box","flexGrow","Hidden","mdDown","IconButton","lgUp","onClick","item","paddingTop","paddingBottom","button","palette","text","secondary","fontWeight","typography","fontWeightMedium","justifyContent","letterSpacing","textTransform","icon","spacing","active","primary","main","NavItem","href","Icon","ListItem","disableGutters","Button","activeClassName","component","RouterLink","size","tab","TabsRender","input","React","value","setValue","Tabs","onChange","event","newValue","aria-label","map","index","Tab","label","id","a11yProps","key","TabPanel","children","other","role","hidden","aria-labelledby","p","LabelIcon","InputContainer","isValid","setIsValid","InputGroup","Prepend","Text","FormControl","placeholder","target","validator","type","message","TemplateKatex","element","delimiters","right","DeCodeElGamal","x","a","k","delta","beta","gama","gamalValue","setgamalValue","XValue","setXValue","useEffect","bigInt","modPow","minus","toString","multiply","mod","e","console","log","Divider","EncodeElGamal","α","GenarateKeyElGamal","BuildCriptoElGamal","elGamalType","setstate","IsValid","setBeta","setGamma","setDelta","demo","error","inputValues","variant","CriptoElGamal","gamma","β","SignElGamal","modInv","CheckSignElGamal","VT","setVT","VP","setVP","s1","s2","apartmentTab","CheckCircleIcon","TimerIcon","FavoriteIcon","ElGamal","DeCodeRSA","decode","setDecode","y","n","d","EncodeRSA","GenarateKeyRSA","m","gcd","b","tmp","r","BuildCriptoRSA","q","rsaType","setN","setM","setD","setY","_gcd","setGCD","equals","BigNumber","multipliedBy","toFixed","SignRSA","s","setS","phiN","setPhiN","dA","setDA","egc","CheckSignRSA","RSA","checkInQ","Q","finds","find","i","qValue","inQ","y_1","y_2","options","scales","yAxes","ticks","beginAtZero","ChartElliptic","data","setData","datasets","DotItem","DotList","EllipticBuild","ellipticType","dataDots","setDataDots","setQ","powY","setPowY","push","getQ","Z","powYValue","add","getPowY","powValue","result","forEach","getPoints","Math","min","Elliptic","routes","BarChartIcon","UserIcon","ApartmentIcon","RouteAdmin","route","exact","path","mobileDrawer","desktopDrawer","cursor","SmallAvatar","withStyles","createStyles","background","Avatar","NavBar","location","useLocation","onMobileClose","openMobile","pathname","content","flexDirection","alignItems","Badge","overlap","anchorOrigin","vertical","horizontal","badgeContent","htmlFor","alt","src","Typography","List","Drawer","anchor","onClose","open","overflow","wrapper","flex","up","paddingLeft","contentContainer","DashboardLayout","isMobileNavOpen","setMobileNavOpen","useHistory","style","roleDefine","public","name","RoutesApp","RouteItem","document","history","createBrowserHistory","App","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.43109fa9.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\r\nimport Poppers from \"@material-ui/core/Popper\";\r\nimport clsx from \"clsx\";\r\nimport InputIcon from \"@material-ui/icons/Input\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nimport \"./style.scss\";\r\n\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  Hidden,\r\n  IconButton,\r\n  Toolbar,\r\n  makeStyles,\r\n  hexToRgb,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  root: {\r\n    backgroundColor: \"#009177\",\r\n  },\r\n  title: {\r\n    color: \"#ffffff\",\r\n    fontSize: 20,\r\n  },\r\n  avatar: {\r\n    width: 60,\r\n    height: 60,\r\n  },\r\n  dropdown: {\r\n    borderRadius: \"3px\",\r\n    border: \"0\",\r\n    boxShadow: \"0 2px 5px 0 rgba(\" + hexToRgb(\"#000000\") + \", 0.26)\",\r\n    top: \"100%\",\r\n    margin: \"2px 0 0\",\r\n    fontSize: \"14px\",\r\n    textAlign: \"left\",\r\n    backgroundColor: \"white\",\r\n    WebkitBackgroundClip: \"padding-box\",\r\n    backgroundClip: \"padding-box\",\r\n  },\r\n  dropdownItem: {\r\n    fontSize: \"13px\",\r\n    padding: \"10px 20px\",\r\n    margin: \"0 5px\",\r\n    borderRadius: \"2px\",\r\n    WebkitTransition: \"all 150ms linear\",\r\n    MozTransition: \"all 150ms linear\",\r\n    OTransition: \"all 150ms linear\",\r\n    MsTransition: \"all 150ms linear\",\r\n    transition: \"all 150ms linear\",\r\n    display: \"block\",\r\n    clear: \"both\",\r\n    lineHeight: \"1.42857143\",\r\n    whiteSpace: \"nowrap\",\r\n    height: \"unset\",\r\n    minHeight: \"unset\",\r\n    zIndex: 1300,\r\n    \"&:hover\": {\r\n      backgroundColor: \"primary\",\r\n      color: \"white\",\r\n    },\r\n  },\r\n  popperClose: {\r\n    pointerEvents: \"none\",\r\n  },\r\n  popperNav: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      position: \"static !important\",\r\n      left: \"unset !important\",\r\n      top: \"unset !important\",\r\n      transform: \"none !important\",\r\n      willChange: \"unset !important\",\r\n      \"& > div\": {\r\n        boxShadow: \"none !important\",\r\n        marginLeft: \"0rem\",\r\n        marginRight: \"0rem\",\r\n        transition: \"none !important\",\r\n        marginTop: \"0px !important\",\r\n        marginBottom: \"0px !important\",\r\n        padding: \"0px !important\",\r\n        backgroundColor: \"transparent !important\",\r\n        \"& ul li\": {\r\n          color: \"#ffffff\" + \" !important\",\r\n          margin: \"10px 15px 0!important\",\r\n          padding: \"10px 15px !important\",\r\n          \"&:hover\": {\r\n            backgroundColor: \"hsla(0,0%,78%,.2)\",\r\n            boxShadow: \"none\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n  paper: {\r\n    maxHeight: \"500px\",\r\n    overflowY: \"scroll\",\r\n  },\r\n}));\r\ninterface Props {\r\n  className?: string;\r\n  onMobileNavOpen: () => void;\r\n}\r\nconst TopBar = (props: Props) => {\r\n  const classes = useStyles();\r\n  const [notifications] = useState([]);\r\n  const { className, onMobileNavOpen, ...rest } = props;\r\n\r\n  return (\r\n    <AppBar className={clsx(classes.root, className)} elevation={0} {...rest}>\r\n      <Toolbar>\r\n        <div className=\"title-logo-a\">\r\n          <RouterLink to=\"/\">\r\n            <span className={\"title-logo\"}>Nhâp môn an toàn thông tin</span>\r\n          </RouterLink>\r\n        </div>\r\n        <Box flexGrow={1} />\r\n        <Hidden mdDown>\r\n          <IconButton color=\"inherit\">\r\n            <InputIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n        <Hidden lgUp>\r\n          <IconButton color=\"inherit\" onClick={onMobileNavOpen}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default TopBar;\r\n","import React from \"react\";\r\nimport { NavLink as RouterLink } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { Button, ListItem, makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  item: {\r\n    display: \"flex\",\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n  },\r\n  button: {\r\n    color: theme.palette.text.secondary,\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    justifyContent: \"flex-start\",\r\n    letterSpacing: 0,\r\n    padding: \"10px 8px\",\r\n    textTransform: \"none\",\r\n    width: \"100%\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  title: {\r\n    marginRight: \"auto\",\r\n  },\r\n  active: {\r\n    color: theme.palette.primary.main,\r\n    \"& $title\": {\r\n      fontWeight: theme.typography.fontWeightMedium,\r\n    },\r\n    \"& $icon\": {\r\n      color: theme.palette.primary.main,\r\n    },\r\n  },\r\n}));\r\ninterface Props {\r\n  className?: string;\r\n  href: string;\r\n  icon: any;\r\n  title: string;\r\n}\r\nconst NavItem = (props: Props) => {\r\n  const classes = useStyles();\r\n  const { className, href, icon: Icon, title, ...rest } = props;\r\n\r\n  return (\r\n    <ListItem\r\n      className={clsx(classes.item, className)}\r\n      disableGutters\r\n      {...rest}\r\n    >\r\n      <Button\r\n        activeClassName={classes.active}\r\n        className={classes.button}\r\n        component={RouterLink}\r\n        to={href}\r\n      >\r\n        {Icon && <Icon className={classes.icon} size=\"20\" />}\r\n        <span className={classes.title}>{title}</span>\r\n      </Button>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default NavItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  tab: {\r\n    backgroundColor: \"#ffffff\",\r\n    color: \"gray\",\r\n  },\r\n});\r\ninterface InputItem {\r\n  label: any;\r\n  component: any;\r\n  icon: any;\r\n}\r\ninterface Props {\r\n  input: InputItem[];\r\n}\r\nexport const TabsRender = (props: Props) => {\r\n  const classes = useStyles();\r\n  const [tabValue, setTabValue] = useState([] as InputItem[]);\r\n  const { input } = props;\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar className={classes.tab} position=\"static\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"simple tabs example\"\r\n        >\r\n          {input.map((item, index) => (\r\n            <Tab label={item.label} {...a11yProps(index)} key={index} />\r\n          ))}\r\n        </Tabs>\r\n      </AppBar>\r\n      {input.map((item, index) => (\r\n        <TabPanel value={value} index={index} key={index}>\r\n          {item.component}\r\n        </TabPanel>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: any;\r\n  value: any;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index: any) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport \"./style.scss\";\r\ninterface Props {\r\n  icon?: any;\r\n  label?: any;\r\n}\r\n\r\nexport const LabelIcon = (props: Props) => {\r\n  const { icon, label } = props;\r\n  return (\r\n    <>\r\n      <span className=\"icon-label\">{icon || label}</span>\r\n      <span className=\"label-icon\">{label}</span>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { FormControl, InputGroup } from \"react-bootstrap\";\r\nimport { InputItem } from \"../../RSA/buildCrypto/input\";\r\nimport \"./style.scss\";\r\nconst InputContainer = (props: InputItem) => {\r\n  const [isValid, setIsValid] = useState(true);\r\n\r\n  const change = (event: any) => {\r\n    props.onChange && props.onChange(event.target.value);\r\n    if (props.validator) {\r\n      setIsValid(props.validator(event.target.value));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mb-3\">\r\n      <InputGroup>\r\n        <InputGroup.Prepend>\r\n          <InputGroup.Text id=\"basic-addon1\">{props.label}</InputGroup.Text>\r\n        </InputGroup.Prepend>\r\n        <FormControl\r\n          placeholder={props.placeholder || \"input here\"}\r\n          onChange={change}\r\n          type={props.type || \"text\"}\r\n          value={props.value || \"\"}\r\n\r\n          // formNoValidate\r\n        />\r\n      </InputGroup>\r\n      {!isValid && props.message && (\r\n        <div className=\"error-input\">\r\n          <span className=\"error-text\">(Error) : </span>\r\n          <span>{props.message}</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputContainer;\r\n","import React from \"react\";\r\n\r\nimport \"./index.scss\";\r\nimport Latex from \"react-latex-next\";\r\ninterface Props {\r\n  element: string;\r\n}\r\n\r\nexport const TemplateKatex: React.FC<Props> = ({ element }) => {\r\n  return (\r\n    <span className=\"latex\">\r\n      <Latex\r\n        delimiters={[\r\n          { left: \"$$\", right: \"$$\", display: true },\r\n          { left: \"\\\\(\", right: \"\\\\)\", display: false },\r\n          { left: \"$\", right: \"$\", display: false },\r\n          { left: \"\\\\[\", right: \"\\\\]\", display: true },\r\n        ]}\r\n      >\r\n        {element}\r\n      </Latex>\r\n    </span>\r\n  );\r\n};\r\n","import { Divider } from \"@material-ui/core\";\r\nimport bigInt from \"big-integer\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { TemplateKatex } from \"../../../../containers/markdown\";\r\nimport InputContainer from \"../../../form-input/inputContainer\";\r\nimport \"./style.scss\";\r\ninterface Props {\r\n  α?: any;\r\n  a?: any;\r\n  k?: any;\r\n  e?: any;\r\n  x?: any;\r\n  p?: any;\r\n  beta?: any;\r\n  gama?: any;\r\n  delta?: any;\r\n}\r\nconst DeCodeElGamal = (props: Props) => {\r\n  const { x, a, k, p, delta, beta, gama } = props;\r\n  const [gamalValue, setgamalValue] = useState<any>(\"\");\r\n  const [XValue, setXValue] = useState<any>(\"\");\r\n  useEffect(() => {\r\n    if (gama > 0 && p > 0 && p - a - 1 > 0) {\r\n      setgamalValue(\r\n        bigInt(gama)\r\n          .modPow(bigInt(p).minus(bigInt(a)).minus(1), bigInt(p))\r\n          .toString()\r\n      );\r\n    }\r\n  }, [x, a, k, p, delta, beta, gama]);\r\n  useEffect(() => {\r\n    if (gamalValue && delta > 0) {\r\n      try {\r\n        setXValue(\r\n          bigInt(gamalValue).multiply(bigInt(delta)).mod(bigInt(p)).toString()\r\n        );\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  }, [gamalValue, props]);\r\n  useEffect(() => {}, [props]);\r\n  return (\r\n    <div className=\"encode-rsa\">\r\n      <h4>Giải mã</h4> <Divider />\r\n      <div className=\"item\">\r\n        <div className=\"label text-bold\">\r\n          <TemplateKatex element={`$y ^{-a} \\\\pmod{p}   $`} />\r\n          <TemplateKatex element={`$ γ^{(p-1-a)} \\\\pmod{p} = $`} />\r\n          <TemplateKatex element={`$${gama} $`} />\r\n          <TemplateKatex element={`$^{(${p}-${a}-1)}    $`} />\r\n          <TemplateKatex element={`$= \\\\pmod{${p}}  $`} />\r\n          <TemplateKatex element={`$= ${gamalValue}  $`} />\r\n        </div>\r\n      </div>\r\n      <div className=\"item\">\r\n        <div className=\"label text-bold\">\r\n          <TemplateKatex element={`$x = γ ^{-a} * δ = ${XValue}  $`} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeCodeElGamal;\r\n","import { Divider } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { TemplateKatex } from \"../../../../containers/markdown\";\r\nimport InputContainer from \"../../../form-input/inputContainer\";\r\nimport \"./style.scss\";\r\ninterface Props {\r\n  α?: any;\r\n  a?: any;\r\n  k?: any;\r\n  e?: any;\r\n  x?: any;\r\n  p?: any;\r\n  beta?: any;\r\n  gama?: any;\r\n  delta?: any;\r\n}\r\n\r\nconst EncodeElGamal = (props: Props) => {\r\n  const { x, a, k, p, delta, beta, gama, α } = props;\r\n  return (\r\n    <div className=\"encode-rsa\">\r\n      <h4>Mã hóa bản rõ x = {x}</h4> <Divider />\r\n      <div className=\"item\">\r\n        <div className=\"label text-bold\">\r\n          <TemplateKatex element={`$γ = \\\\alpha^k \\\\pmod{p}$`} />\r\n          <TemplateKatex element={`$=$`} />\r\n          <TemplateKatex element={`$${α}^{${k}} \\\\pmod{${p}} = ${gama}$`} />\r\n        </div>\r\n        <div className=\"value\"></div>\r\n      </div>\r\n      <div className=\"item\">\r\n        <div className=\"label text-bold\">\r\n          <TemplateKatex element={`$δ = x * β^{k} \\\\pmod{p} $`} />\r\n          <TemplateKatex element={`$=$`} />\r\n          <TemplateKatex\r\n            element={`$${x} * ${beta}^{${k}} \\\\pmod{${p}} = ${delta}$`}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EncodeElGamal;\r\n","import { Divider } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { TemplateKatex } from \"../../../../containers/markdown\";\r\nimport { TableConvert, TableData } from \"../../../common/table\";\r\nimport \"./style.scss\";\r\ninterface Props {\r\n  α?: any;\r\n  a?: any;\r\n  k?: any;\r\n  e?: any;\r\n  x?: any;\r\n  p?: any;\r\n  beta?: any;\r\n}\r\n\r\nconst GenarateKeyElGamal = (props: Props) => {\r\n  const { x, a, k, e, α, p, beta } = props;\r\n  const getN = () => {};\r\n  return (\r\n    <div className=\"genarate-key-rsa\">\r\n      <h4> Sinh khóa</h4>\r\n      <Divider />\r\n      <div className=\"item\">\r\n        <div className=\"label\">\r\n          <TemplateKatex element={`$\\\\beta = \\\\alpha^{a} \\\\mod{p} : $`} />\r\n        </div>\r\n        <div className=\"val\">{beta}</div>\r\n      </div>\r\n\r\n      <div className=\"item\">\r\n        <div className=\"label text-bold\">\r\n          <TemplateKatex element={`$K = (p,α,β) :  $`} />\r\n        </div>\r\n        <div className=\"value\">{`(${p}, ${α}, ${beta})`}</div>\r\n      </div>\r\n\r\n      <div className=\"item\">\r\n        <div className=\"label text-bold\">\r\n          <TemplateKatex element={`$K'= (a) = (${a}) $`} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GenarateKeyElGamal;\r\n","import { Button } from \"@material-ui/core\";\r\nimport bigInt from \"big-integer\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport InputContainer from \"../../form-input/inputContainer\";\r\nimport DeCodeElGamal from \"./decode\";\r\nimport DecodeElGamal from \"./decode\";\r\nimport EncodeElGamal from \"./encode\";\r\nimport GenarateKeyElGamal from \"./genarateKey\";\r\nimport InputElGamal, { InputItem, ElGamalProps } from \"./input\";\r\nimport \"./style.scss\";\r\nexport interface ElGamalType {\r\n  p?: any;\r\n  x?: any;\r\n  k?: any;\r\n  a?: any;\r\n  α?: any;\r\n}\r\n\r\nconst BuildCriptoElGamal = () => {\r\n  const [elGamalType, setstate] = useState({} as ElGamalType);\r\n  const getValue = (label: \"x\" | \"k\" | \"a\" | \"p\" | \"α\") => {\r\n    return elGamalType[label];\r\n  };\r\n  const [IsValid, setIsValid] = useState(false);\r\n  const [ed, setED] = useState<any>();\r\n  const [ed2, setED2] = useState<any>();\r\n  const [s1, setS1] = useState<any>();\r\n  const [s2, setS2] = useState<any>();\r\n  const [beta, setBeta] = useState<any>();\r\n  const [gama, setGamma] = useState<any>();\r\n  const [delta, setDelta] = useState<any>();\r\n  const setValue = (label?: any) => (value: any) => {\r\n    setstate({ ...elGamalType, [label]: value });\r\n    setIsValid(false);\r\n  };\r\n  const demo = () => {\r\n    setstate({\r\n      p: \"72123325254581672626176125162734766156045554514105133573263758251347324533769\",\r\n      x: \"2035\",\r\n      k: \"1523\",\r\n      a: \"1751\",\r\n      α: \"2\",\r\n    });\r\n    setIsValid(true);\r\n  };\r\n  useEffect(() => {\r\n    demo();\r\n  }, []);\r\n  const reNew = () => {\r\n    setstate({} as ElGamalType);\r\n    setIsValid(false);\r\n  };\r\n  useEffect(() => {\r\n    const { k, p, x } = elGamalType;\r\n    if (!(beta && k && x && p)) {\r\n      return;\r\n    }\r\n    try {\r\n      setDelta(\r\n        bigInt(bigInt(beta).modPow(k, p).multiply(bigInt(x).mod(p)))\r\n          .mod(p)\r\n          .toString()\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [beta, elGamalType]);\r\n  useEffect(() => {\r\n    const { α, a, p, k } = elGamalType;\r\n    if (α > 0 && a > 0 && p) {\r\n      setBeta(bigInt(α).modPow(bigInt(a), bigInt(p)).toString());\r\n      setGamma(bigInt(α).modPow(bigInt(k), bigInt(p)).toString());\r\n    }\r\n  }, [elGamalType]);\r\n  const inputValues = [\r\n    {\r\n      label: \"p\",\r\n      onChange: setValue(\"p\"),\r\n      placeholder: \"Nhập số nguyên tố p (độ dài khoảng 256 bits)\",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"x\",\r\n      onChange: setValue(\"x\"),\r\n      placeholder: \"Nhập bản rõ x ( 0 < x < p ) \",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"a\",\r\n      onChange: setValue(\"a\"),\r\n      placeholder: \"Nhập số a \",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"k\",\r\n      onChange: setValue(\"k\"),\r\n      placeholder: \"Nhập số k  ( 0 < x < p - 1 ) \",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"α\",\r\n      onChange: setValue(\"α\"),\r\n      placeholder: \"Nhập số α\",\r\n      type: \"number\",\r\n    },\r\n  ] as InputItem[];\r\n  const start = () => {\r\n    if (\r\n      elGamalType.x &&\r\n      elGamalType.x != \"\" &&\r\n      elGamalType.p &&\r\n      elGamalType.p != \"\" &&\r\n      elGamalType.a &&\r\n      elGamalType.a != \"\" &&\r\n      elGamalType.α &&\r\n      elGamalType.α != \"\" &&\r\n      elGamalType.k &&\r\n      elGamalType.k != \"\"\r\n    ) {\r\n      setIsValid(true);\r\n    } else {\r\n      setIsValid(false);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"ElGamal\">\r\n      <div className=\"input box\">\r\n        <div className=\"input-rsa \">\r\n          {inputValues.map((input, index) => (\r\n            <InputContainer\r\n              {...input}\r\n              key={index}\r\n              value={getValue(input.label as any)}\r\n            />\r\n          ))}\r\n          <div className=\"footer-input text-center\">\r\n            <div className=\"btn-options\">\r\n              <Button variant=\"outlined\" onClick={reNew}>\r\n                Tạo mới\r\n              </Button>\r\n            </div>\r\n            <div className=\"btn-options\">\r\n              <Button variant=\"outlined\" color=\"primary\" onClick={start}>\r\n                Tạo hệ mật\r\n              </Button>\r\n            </div>\r\n            <div className=\"btn-options\">\r\n              <Button variant=\"outlined\" color=\"primary\" onClick={demo}>\r\n                Demo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {IsValid && (\r\n        <>\r\n          <div className=\"input box\">\r\n            <GenarateKeyElGamal {...{ ...elGamalType, beta }} />\r\n          </div>\r\n          <div className=\"input box\">\r\n            <EncodeElGamal {...{ ...elGamalType, beta, delta, gama }} />\r\n          </div>\r\n          <div className=\"input box\">\r\n            <DeCodeElGamal {...{ ...elGamalType, beta, delta, gama }} />\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildCriptoElGamal;\r\n","import { Button, Divider } from \"@material-ui/core\";\r\nimport bigInt from \"big-integer\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { TemplateKatex } from \"../../../containers/markdown\";\r\nimport InputContainer from \"../../form-input/inputContainer\";\r\nimport InputElGamal, { InputItem } from \"../buildCrypto/input\";\r\n\r\nimport \"./style.scss\";\r\nexport interface ElGamalType {\r\n  p?: any;\r\n  x?: any;\r\n  α?: any;\r\n  β?: any;\r\n  k?: any;\r\n}\r\n\r\nconst CriptoElGamal = () => {\r\n  const [elGamalType, setstate] = useState({} as ElGamalType);\r\n\r\n  const getValue = (label: \"x\" | \"p\" | \"k\" | \"β\" | \"α\") => {\r\n    return elGamalType[label];\r\n  };\r\n  const [gamma, setGamma] = useState<any>();\r\n  const [delta, setDelta] = useState<any>();\r\n  useEffect(() => {\r\n    const { α, k, p, β, x } = elGamalType;\r\n    if (α > 0 && k > 0 && p > 0) setGamma(bigInt(α).modPow(k, p).toString());\r\n    if (β > 0 && k > 0 && p > 0 && x > 0)\r\n      setDelta(\r\n        bigInt(β)\r\n          .modPow(k, p)\r\n          .multiply(bigInt(x).modPow(1, p))\r\n          .modPow(1, p)\r\n          .toString()\r\n      );\r\n  }, [elGamalType]);\r\n  const [IsValid, setIsValid] = useState(false);\r\n  const setValue = (label?: any) => (value: any) => {\r\n    setstate({ ...elGamalType, [label]: value });\r\n    setIsValid(false);\r\n  };\r\n  const demo = () => {\r\n    setstate({\r\n      p: \"72123325254581672626176125162734766156045554514105133573263758251347324533769\",\r\n      x: \"2035\",\r\n      k: \"1523\",\r\n      β: \"6143220919135760503775743288903283414314504438266328834270291138543721246536\",\r\n      α: \"2\",\r\n    });\r\n    setIsValid(true);\r\n  };\r\n  useEffect(() => {\r\n    demo();\r\n  }, []);\r\n  const start = () => {\r\n    if (\r\n      elGamalType.x &&\r\n      elGamalType.x != \"\" &&\r\n      elGamalType.p &&\r\n      elGamalType.p != \"\" &&\r\n      elGamalType.β &&\r\n      elGamalType.β != \"\" &&\r\n      elGamalType.α &&\r\n      elGamalType.α != \"\" &&\r\n      elGamalType.k &&\r\n      elGamalType.k != \"\"\r\n    ) {\r\n      setIsValid(true);\r\n    } else {\r\n      setIsValid(false);\r\n    }\r\n  };\r\n\r\n  const reNew = () => {\r\n    setstate({} as ElGamalType);\r\n    setIsValid(false);\r\n  };\r\n  const inputValues = [\r\n    {\r\n      label: \"p\",\r\n      onChange: setValue(\"p\"),\r\n      placeholder: \"Nhập số nguyên tố p\",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"x\",\r\n      onChange: setValue(\"x\"),\r\n      placeholder: \"Nhập bản rõ x ( 0 < x < p - 1) \",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"α\",\r\n      onChange: setValue(\"α\"),\r\n      placeholder: \"Nhập số α\",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"β\",\r\n      onChange: setValue(\"β\"),\r\n      placeholder: \"Nhập số β\",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"k\",\r\n      onChange: setValue(\"k\"),\r\n      placeholder: \"Nhập số k\",\r\n      type: \"number\",\r\n    },\r\n  ] as InputItem[];\r\n  return (\r\n    <div className=\"ElGamal\">\r\n      <div className=\"input box\">\r\n        <div className=\"input-rsa \">\r\n          {inputValues.map((input, index) => (\r\n            <InputContainer\r\n              {...input}\r\n              key={index}\r\n              value={getValue(input.label as any)}\r\n            />\r\n          ))}\r\n          <div className=\"footer-input text-center\">\r\n            <div className=\"btn-options\">\r\n              <Button variant=\"outlined\" onClick={reNew}>\r\n                Tạo mới\r\n              </Button>\r\n            </div>\r\n            <div className=\"btn-options\" onClick={start}>\r\n              <Button variant=\"outlined\" color=\"primary\">\r\n                Mã hóa\r\n              </Button>\r\n            </div>\r\n            <div className=\"btn-options\">\r\n              <Button variant=\"outlined\" color=\"primary\" onClick={demo}>\r\n                Demo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {IsValid && (\r\n        <>\r\n          <div className=\"input box\">\r\n            <div className=\"genarate-key-rsa\">\r\n              <h4> Mã hóa</h4>\r\n              <Divider />\r\n              <div className=\"item\">\r\n                <div className=\"label\">\r\n                  <TemplateKatex element={`$γ = α^k \\\\pmod{p} =  $`} />\r\n                  <TemplateKatex element={`$${elGamalType.α}  $`} />\r\n                  <TemplateKatex element={`$^{${elGamalType.k}}   $`} />\r\n                  <TemplateKatex element={`$\\\\pmod {${elGamalType.p}} =  $`} />\r\n                  <TemplateKatex element={`$ ${gamma}  $`} />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"item\">\r\n                <div className=\"label text-bold\">\r\n                  <TemplateKatex element={`$δ = x * β^{k} \\\\pmod p =$`} />\r\n                  <TemplateKatex element={`$ ${elGamalType.x} $`} />\r\n                  <TemplateKatex element={`$* ${elGamalType.β} $`} />\r\n                  <TemplateKatex element={`$^ {${elGamalType.k}} $`} />\r\n                  <TemplateKatex element={`$\\\\pmod {${elGamalType.p}} $`} />\r\n                  <TemplateKatex element={`$= ${delta}$`} />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"item\">\r\n                <div className=\"label text-bold\">\r\n                  <TemplateKatex\r\n                    element={`$ \\\\implies (γ,δ) = (${gamma}$ , $${delta})  $`}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CriptoElGamal;\r\n","import { Button, Divider } from \"@material-ui/core\";\r\nimport bigInt from \"big-integer\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { TemplateKatex } from \"../../../containers/markdown\";\r\nimport { mod } from \"../../../utils/gcd\";\r\nimport InputContainer from \"../../form-input/inputContainer\";\r\nimport InputElGamal, { InputItem } from \"../buildCrypto/input\";\r\n\r\nimport \"./style.scss\";\r\nexport interface ElGamalType {\r\n  x?: any;\r\n  p?: any;\r\n  k?: any;\r\n  a?: any;\r\n  α?: any;\r\n}\r\n\r\nconst SignElGamal = () => {\r\n  const [elGamalType, setstate] = useState({} as ElGamalType);\r\n\r\n  const getValue = (label: \"x\" | \"p\" | \"k\" | \"a\" | \"α\") => {\r\n    return elGamalType[label];\r\n  };\r\n  const [beta, setBeta] = useState(\"\");\r\n  const [gamma, setGamma] = useState(\"\");\r\n  const [delta, setDelta] = useState(\"\");\r\n  const [IsValid, setIsValid] = useState(false);\r\n  const setValue = (label?: any) => (value: any) => {\r\n    setstate({ ...elGamalType, [label]: value });\r\n    setIsValid(false);\r\n  };\r\n  useEffect(() => {\r\n    const { α, a, p, k } = elGamalType;\r\n    if (α && a && p && k) {\r\n      try {\r\n        setBeta(bigInt(α).modPow(bigInt(a), bigInt(p)).toString());\r\n        setGamma(bigInt(α).modPow(bigInt(k), bigInt(p)).toString());\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  }, [elGamalType]);\r\n  useEffect(() => {\r\n    const { α, a, p, k, x } = elGamalType;\r\n    if (α && a && p && k) {\r\n      try {\r\n        setDelta(\r\n          bigInt(x)\r\n            .minus(bigInt(a).multiply(bigInt(gamma)))\r\n            .multiply(bigInt(k).modInv(bigInt(p).minus(1)))\r\n            .mod(bigInt(p).minus(1))\r\n            .toString()\r\n        );\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  }, [gamma, elGamalType]);\r\n  const demo = () => {\r\n    setstate({\r\n      p: \"72123325254581672626176125162734766156045554514105133573263758251347324533769\",\r\n      x: \"2035\",\r\n      k: \"1523\",\r\n      a: \"1751\",\r\n      α: \"2\",\r\n    });\r\n    setIsValid(true);\r\n  };\r\n  const start = () => {\r\n    if (\r\n      elGamalType.x &&\r\n      elGamalType.x != \"\" &&\r\n      elGamalType.p &&\r\n      elGamalType.p != \"\" &&\r\n      elGamalType.a &&\r\n      elGamalType.a != \"\" &&\r\n      elGamalType.α &&\r\n      elGamalType.α != \"\" &&\r\n      elGamalType.k &&\r\n      elGamalType.k != \"\"\r\n    ) {\r\n      setIsValid(true);\r\n    } else {\r\n      setIsValid(false);\r\n    }\r\n  };\r\n\r\n  const reNew = () => {\r\n    setstate({} as ElGamalType);\r\n    setIsValid(false);\r\n  };\r\n  useEffect(() => {\r\n    demo();\r\n  }, []);\r\n  const inputValues = [\r\n    {\r\n      label: \"p\",\r\n      onChange: setValue(\"p\"),\r\n      placeholder: \"Nhập số nguyên tố p (độ dài khoàng 256 bits\",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"x\",\r\n      onChange: setValue(\"x\"),\r\n      placeholder: \"Nhập bản rõ x ( 0 < x < p - 1) \",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"α\",\r\n      onChange: setValue(\"α\"),\r\n      placeholder: \"Nhập số α\",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"a\",\r\n      onChange: setValue(\"a\"),\r\n      placeholder: \"Nhập số a\",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"k\",\r\n      onChange: setValue(\"k\"),\r\n      placeholder: \"Nhập số k\",\r\n      type: \"number\",\r\n    },\r\n  ] as InputItem[];\r\n  return (\r\n    <div className=\"ElGamal\">\r\n      <div className=\"input box\">\r\n        <div className=\"input-rsa \">\r\n          {inputValues.map((input, index) => (\r\n            <InputContainer\r\n              {...input}\r\n              key={index}\r\n              value={getValue(input.label as any)}\r\n            />\r\n          ))}\r\n          <div className=\"footer-input text-center\">\r\n            <div className=\"btn-options\">\r\n              <Button variant=\"outlined\" onClick={reNew}>\r\n                Tạo mới\r\n              </Button>\r\n            </div>\r\n            <div className=\"btn-options\" onClick={start}>\r\n              <Button variant=\"outlined\" color=\"primary\">\r\n                Ký\r\n              </Button>\r\n            </div>\r\n            <div className=\"btn-options\" onClick={demo}>\r\n              <Button variant=\"outlined\" color=\"primary\">\r\n                Demo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {IsValid && (\r\n        <>\r\n          <div className=\"box\">\r\n            <>\r\n              <h4> Sinh khóa</h4>\r\n              <div className=\"genarate-key-rsa\">\r\n                <Divider />\r\n                <div className=\"item\">\r\n                  <div className=\"label text-bold\">\r\n                    <TemplateKatex\r\n                      element={\"$\\\\beta = \\\\alpha^{a} \\\\pmod{p} : $\"}\r\n                    />\r\n                  </div>\r\n                  <div className=\"value\">{beta}</div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"item\">\r\n                  <div className=\"label text-bold\">\r\n                    <TemplateKatex\r\n                      element={`$ K' = (a) = (${elGamalType.a}) $`}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"item\">\r\n                  <div className=\"label text-bold\">\r\n                    <TemplateKatex\r\n                      element={`$ K'' = (p, \\\\alpha, \\\\beta) : $`}\r\n                    />\r\n                  </div>\r\n                  <div className=\"value\">\r\n                    {`(${elGamalType.p} , ${elGamalType.α} , ${beta})`}\r\n                  </div>\r\n                </div>\r\n\r\n                <Divider />\r\n              </div>\r\n            </>\r\n          </div>\r\n          <div className=\"input box\">\r\n            <div className=\"genarate-key-rsa\">\r\n              <h4> Ký trên bản rõ x = {elGamalType.x}</h4>\r\n              <Divider />\r\n              <div className=\"item\">\r\n                <div className=\"label\">\r\n                  <TemplateKatex\r\n                    element={`$\\\\gamma = \\\\alpha^{k} \\\\pmod{m} :  $`}\r\n                  />\r\n                </div>{\" \"}\r\n                <div className=\"value\">{gamma}</div>\r\n              </div>\r\n              <Divider />\r\n              <div className=\"item\">\r\n                <div className=\"label\">\r\n                  <TemplateKatex\r\n                    element={`$\\\\delta = (x - a*\\\\gamma) * k ^ {-1} \\\\pmod{(p - 1)} :  $`}\r\n                  />\r\n                </div>\r\n                <div className=\"value\">{delta}</div>\r\n              </div>\r\n              <Divider />\r\n              <div className=\"item\">\r\n                <div className=\"label\">\r\n                  <TemplateKatex\r\n                    element={`$(s_1, s_2) = (\\\\gamma, \\\\delta) :  $`}\r\n                  />\r\n                </div>\r\n                <div className=\"value\">{`(${gamma} , ${delta})`}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignElGamal;\r\n","import { Button, Divider } from \"@material-ui/core\";\r\nimport bigInt from \"big-integer\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { TemplateKatex } from \"../../../containers/markdown\";\r\n\r\nimport InputContainer from \"../../form-input/inputContainer\";\r\nimport EncodeElGamal from \"../buildCrypto/encode\";\r\nimport InputElGamal, { InputItem } from \"../buildCrypto/input\";\r\n\r\nimport \"./style.scss\";\r\nexport interface ElGamalType {\r\n  x?: any;\r\n  p?: any;\r\n  s1?: any;\r\n  s2?: any;\r\n\r\n  α?: any;\r\n  β?: any;\r\n}\r\n\r\nconst CheckSignElGamal = () => {\r\n  const [elGamalType, setstate] = useState({} as ElGamalType);\r\n  const getValue = (label: \"x\" | \"p\" | \"s1\" | \"s2\" | \"α\" | \"β\") => {\r\n    return elGamalType[label];\r\n  };\r\n  const [IsValid, setIsValid] = useState(false);\r\n  const setValue = (label?: any) => (value: any) => {\r\n    setstate({ ...elGamalType, [label]: value });\r\n    setIsValid(false);\r\n  };\r\n  const [VT, setVT] = useState<any>();\r\n  const [VP, setVP] = useState<any>();\r\n  useEffect(() => {\r\n    const { x, p, s1, s2, α, β } = elGamalType;\r\n    if (!(β && p && s1 && s2)) {\r\n      return;\r\n    }\r\n    try {\r\n      setVT(\r\n        bigInt(β)\r\n          .modPow(s1, p)\r\n          .multiply(bigInt(s1).modPow(s2, p))\r\n          .mod(p)\r\n          .toString()\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    if (!(α && p && x)) {\r\n      return;\r\n    }\r\n    try {\r\n      setVP(bigInt(α).modPow(x, p).toString());\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [elGamalType]);\r\n  const demo = () => {\r\n    setstate({\r\n      p: \"72123325254581672626176125162734766156045554514105133573263758251347324533769\",\r\n      x: \"2035\",\r\n      s1: \"23900119770798293279495240643205253538760682122808343466106391015625147569941\",\r\n      s2: \"-70903610621877350840840231871621916947776577732417476622347443850850380822344\",\r\n      α: \"2\",\r\n      β: \"6143220919135760503775743288903283414314504438266328834270291138543721246536\",\r\n    });\r\n    setIsValid(true);\r\n  };\r\n  useEffect(() => {\r\n    demo();\r\n  }, []);\r\n  const inputValues = [\r\n    {\r\n      label: \"p\",\r\n      onChange: setValue(\"p\"),\r\n      placeholder: \"Nhập p\",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"x\",\r\n      onChange: setValue(\"x\"),\r\n      placeholder: \"Nhập bản rõ x (0 < x < p) \",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"α\",\r\n      onChange: setValue(\"α\"),\r\n      placeholder: \"Nhập α\",\r\n      type: \"number\",\r\n    },\r\n\r\n    {\r\n      label: \"β\",\r\n      onChange: setValue(\"β\"),\r\n      placeholder: \"Nhập β\",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"s1\",\r\n      onChange: setValue(\"s1\"),\r\n      placeholder: \"Nhập chữ ký s1\",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"s2\",\r\n      onChange: setValue(\"s2\"),\r\n      placeholder: \"Nhập chữ ký s2\",\r\n      type: \"number\",\r\n    },\r\n  ] as InputItem[];\r\n  const start = () => {\r\n    if (\r\n      elGamalType.x &&\r\n      elGamalType.x != \"\" &&\r\n      elGamalType.p &&\r\n      elGamalType.p != \"\" &&\r\n      elGamalType.β &&\r\n      elGamalType.β != \"\" &&\r\n      elGamalType.α &&\r\n      elGamalType.α != \"\" &&\r\n      elGamalType.s1 &&\r\n      elGamalType.s1 != \"\" &&\r\n      elGamalType.s2 &&\r\n      elGamalType.s2 != \"\"\r\n    ) {\r\n      setIsValid(true);\r\n    } else {\r\n      setIsValid(false);\r\n    }\r\n  };\r\n\r\n  const reNew = () => {\r\n    setstate({} as ElGamalType);\r\n    setIsValid(false);\r\n  };\r\n  return (\r\n    <div className=\"ElGamal\">\r\n      <div className=\"input box\">\r\n        <div className=\"input-ElGamal \">\r\n          {inputValues.map((input, index) => (\r\n            <InputContainer\r\n              {...input}\r\n              key={index}\r\n              value={getValue(input.label as any)}\r\n            />\r\n          ))}\r\n          <div className=\"footer-input text-center\">\r\n            <div className=\"btn-options\">\r\n              <Button variant=\"outlined\" onClick={reNew}>\r\n                Tạo mới\r\n              </Button>\r\n            </div>\r\n            <div className=\"btn-options\">\r\n              <Button variant=\"outlined\" color=\"primary\" onClick={start}>\r\n                Kiểm tra\r\n              </Button>\r\n            </div>\r\n            <div className=\"btn-options\">\r\n              <Button variant=\"outlined\" color=\"primary\" onClick={demo}>\r\n                Demo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {IsValid && (\r\n        <>\r\n          <div className=\"input box\">\r\n            <div className=\"encode-ElGamal\">\r\n              <h4>Kiểm tra chữ ký</h4> <Divider />\r\n              <div className=\"item\">\r\n                <div className=\"label text-bold\">\r\n                  <TemplateKatex\r\n                    element={`$(\\\\beta ^ {s_1}) * (s_1 ^ {s_2}) \\\\pmod p $`}\r\n                  />\r\n                  <TemplateKatex element={`$= ${elGamalType.β} $`} />\r\n\r\n                  <TemplateKatex element={`$^{${elGamalType.s1} } $`} />\r\n                  <TemplateKatex element={`$ * ${elGamalType.s1}$`} />\r\n\r\n                  <TemplateKatex element={`$^{${elGamalType.s2} } $`} />\r\n                  <TemplateKatex element={`$\\\\pmod {${elGamalType.p} } $`} />\r\n                  <TemplateKatex element={`$= ${VT}$`} />\r\n                </div>\r\n              </div>\r\n              <div className=\"item\">\r\n                <div className=\"label text-bold\">\r\n                  <TemplateKatex\r\n                    element={`$\\\\alpha ^ {x} \\\\pmod p = ${elGamalType.α}^{${elGamalType.x}} \\\\pmod {${elGamalType.p}} = ${VP}$`}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"item\">\r\n                <div className=\"label result\">\r\n                  <TemplateKatex element={\"$\\\\iff$\"} />\r\n                  {VT === VP ? \"Chữ ký hợp lệ\" : \"Chữ ký không hợp lệ\"}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckSignElGamal;\r\n","import React from \"react\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport TimerIcon from \"@material-ui/icons/Timer\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\n\r\nimport WatchLaterIcon from \"@material-ui/icons/WatchLater\";\r\nimport { TabsRender } from \"../../../../components/common/Tab\";\r\nimport { LabelIcon } from \"../../../../components/common/icon\";\r\nimport BuildCriptoElGamal from \"../../../../components/ElGamal/buildCrypto\";\r\nimport CriptoElGamal from \"../../../../components/ElGamal/crypto\";\r\nimport SignElGamal from \"../../../../components/ElGamal/sign\";\r\nimport CheckSignElGamal from \"../../../../components/ElGamal/checkSign\";\r\n\r\ninterface Props {}\r\nconst apartmentTab = [\r\n  {\r\n    label: <LabelIcon label=\"Xây dựng hệ mật\" icon={<CheckCircleIcon />} />,\r\n\r\n    icon: CheckCircleIcon,\r\n    component: <BuildCriptoElGamal />,\r\n  },\r\n  {\r\n    label: <LabelIcon label=\"Mã hóa Elgmal\" icon={<TimerIcon />} />,\r\n\r\n    icon: TimerIcon,\r\n    component: <CriptoElGamal />,\r\n  },\r\n  {\r\n    label: <LabelIcon label=\"Ký văn bản\" icon={<FavoriteIcon />} />,\r\n\r\n    icon: FavoriteIcon,\r\n    component: <SignElGamal />,\r\n  },\r\n  {\r\n    label: <LabelIcon label=\"Kiểm tra chữ ký\" icon={<FavoriteIcon />} />,\r\n    icon: FavoriteIcon,\r\n    component: <CheckSignElGamal />,\r\n  },\r\n];\r\nexport const ElGamal = (props: Props) => {\r\n  return (\r\n    <>\r\n      <TabsRender input={apartmentTab} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ElGamal;\r\n","import { Divider } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { TemplateKatex } from \"../../../../containers/markdown\";\r\n\r\nimport bigInt from \"big-integer\";\r\nimport \"./style.scss\";\r\ninterface PropDecode {\r\n  x?: any;\r\n  y?: any;\r\n  n?: any;\r\n  d?: any;\r\n}\r\nconst DeCodeRSA = (props: PropDecode) => {\r\n  const [decode, setDecode] = useState(\"\");\r\n  useEffect(() => {\r\n    const { x, y, n, d } = props;\r\n    if (y && n && d) {\r\n      try {\r\n        setDecode(bigInt(y).modPow(d, n).toString());\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  }, [props]);\r\n  return (\r\n    <>\r\n      <h4>Giải mã</h4>\r\n      <div className=\"encode-rsa\">\r\n        <Divider />\r\n        <div className=\"item\">\r\n          <div className=\"label text-bold\">\r\n            <TemplateKatex element={\"$x = y^{d} \\\\pmod{n} =  $\"} /> {decode}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeCodeRSA;\r\n","import { Divider } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { TemplateKatex } from \"../../../../containers/markdown\";\r\nimport InputContainer from \"../../../form-input/inputContainer\";\r\nimport \"./style.scss\";\r\ninterface EncodeInput {\r\n  x?: any;\r\n  y?: any;\r\n}\r\nconst EncodeRSA = (props: EncodeInput) => {\r\n  const { x, y } = props;\r\n  return (\r\n    <>\r\n      <h4>Mã hóa bản rõ x = {x || 0}</h4>\r\n      <div className=\"encode-rsa\">\r\n        <Divider />\r\n        <div className=\"item\">\r\n          <div className=\"label text-bold\">\r\n            <TemplateKatex element={\"$y = e^{-1} \\\\pmod{\\\\phi(n)} : $\"} />\r\n          </div>\r\n          <div className=\"value\">{y}</div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EncodeRSA;\r\n","import { Divider } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { TemplateKatex } from \"../../../../containers/markdown\";\r\nimport { TableConvert, TableData } from \"../../../common/table\";\r\nimport \"./style.scss\";\r\ninterface Props {\r\n  n?: any;\r\n  m?: any;\r\n  e?: any;\r\n  d?: any;\r\n}\r\n\r\nconst GenarateKeyRSA = (props: Props) => {\r\n  const { n, m, e, d } = props;\r\n  const getN = () => {};\r\n  return (\r\n    <>\r\n      <h4> Sinh khóa</h4>\r\n      <div className=\"genarate-key-rsa\">\r\n        <Divider />\r\n        <div className=\"item\">\r\n          <div className=\"label text-bold\">\r\n            <TemplateKatex element={\"$n = p * q : $\"} />\r\n          </div>\r\n          <div className=\"value\">{n || \"\"}</div>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"item\">\r\n          <div className=\"label text-bold\">\r\n            <TemplateKatex element={\"$\\\\phi(n)  = (p - 1) * ( q - 1) : $\"} />\r\n          </div>\r\n\r\n          <div className=\"value\">{m}</div>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"item\">\r\n          <div className=\"label text-bold\">\r\n            <TemplateKatex element={\"$d = e^{-1} \\\\pmod{m}:  $\"} />\r\n          </div>\r\n          <div className=\"value\">{d || 0}</div>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"item\">\r\n          <div className=\"label text-bold\">\r\n            <TemplateKatex element={\"$  (n,e) : $\"} />\r\n          </div>\r\n          <div className=\"value\">\r\n            ({e || 0},{n})\r\n          </div>\r\n        </div>\r\n\r\n        <Divider />\r\n        <div className=\"item\">\r\n          <div className=\"label text-bold\">\r\n            <TemplateKatex element={\"$  (d,n) : $\"} />\r\n          </div>\r\n          <div className=\"value\">\r\n            ({d || 0},{n})\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GenarateKeyRSA;\r\n","import bigInt from \"big-integer\";\r\n\r\n// euclid algorithm\r\nexport function gcd(a: any, b: any) {\r\n  a = a || 0;\r\n  b = b || 0;\r\n  if (a < b) {\r\n    var tmp = a;\r\n    a = b;\r\n    b = tmp;\r\n  }\r\n\r\n  while (b !== 0) {\r\n    var r = a % b;\r\n    a = b;\r\n    b = r;\r\n  }\r\n  return a;\r\n}\r\n\r\nexport function egcd(a: any, b: any) {\r\n  return bigInt(a).modInv(bigInt(b));\r\n}\r\n\r\nexport function mod(x: number, y: number) {\r\n  return x - y * Math.floor(x / y);\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport InputContainer from \"../../form-input/inputContainer\";\r\nimport DeCodeRSA from \"./decode\";\r\n\r\nimport EncodeRSA from \"./encode\";\r\nimport GenarateKeyRSA from \"./genarateKey\";\r\nimport InputRSA, { InputItem, RSAProps } from \"./input\";\r\nimport { BigNumber } from \"bignumber.js\";\r\nimport bigInt from \"big-integer\";\r\nimport \"./style.scss\";\r\nimport { validate } from \"uuid\";\r\nimport { gcd } from \"../../../utils/gcd\";\r\nexport interface RSAType {\r\n  x?: any;\r\n  e?: any;\r\n  p?: any;\r\n  q?: any;\r\n}\r\n\r\nconst BuildCriptoRSA = () => {\r\n  const [rsaType, setstate] = useState<RSAType>({\r\n    x: \"\",\r\n    e: \"\",\r\n    p: \"\",\r\n    q: \"\",\r\n  } as RSAType);\r\n  const [n, setN] = useState<any>(\"\");\r\n  const [m, setM] = useState(\"\");\r\n  const [d, setD] = useState(\"\");\r\n  const [y, setY] = useState(\"\");\r\n  const [_gcd, setGCD] = useState(1);\r\n  const [IsValid, setIsValid] = useState(false);\r\n\r\n  const reNew = () => {\r\n    setstate({} as RSAType);\r\n    setIsValid(false);\r\n  };\r\n  const demo = () => {\r\n    setstate({\r\n      x: \"123412412456789\",\r\n      p: \"186062864985921495060024628097672313218174457244746265290277413813402544027127\",\r\n      q: \"211258915725672981641571789672009335406057206489563616119756939542322825326683\",\r\n      e: \"65537\",\r\n    });\r\n    setIsValid(true);\r\n  };\r\n  useEffect(() => {\r\n    console.log(IsValid);\r\n  }, [IsValid]);\r\n  useEffect(() => {\r\n    demo();\r\n  }, []);\r\n\r\n  const start = () => {\r\n    if (\r\n      _gcd === 1 &&\r\n      rsaType.x &&\r\n      rsaType.x != \"\" &&\r\n      rsaType.p &&\r\n      rsaType.p != \"\" &&\r\n      rsaType.e &&\r\n      rsaType.e != \"\" &&\r\n      rsaType.q &&\r\n      rsaType.q != \"\"\r\n    ) {\r\n      setIsValid(true);\r\n    } else {\r\n      setIsValid(false);\r\n    }\r\n  };\r\n  const getValue = (label: \"x\" | \"q\" | \"e\" | \"p\") => {\r\n    return rsaType[label];\r\n  };\r\n  const setValue = (label?: any) => (value: any) => {\r\n    setIsValid(false);\r\n    setstate({ ...rsaType, [label]: value });\r\n  };\r\n  const inputValues = [\r\n    {\r\n      label: \"p\",\r\n      onChange: setValue(\"p\"),\r\n      placeholder: \"Nhập số nguyên tố p\",\r\n      type: \"number\",\r\n      validator: () => {},\r\n    },\r\n    {\r\n      label: \"x\",\r\n      onChange: setValue(\"x\"),\r\n      placeholder: \"Nhập bản rõ x (0 < x < p)\",\r\n      type: \"number\",\r\n    },\r\n\r\n    {\r\n      label: \"q\",\r\n      onChange: setValue(\"q\"),\r\n      placeholder: \"Nhập số nguyên tố q\",\r\n      type: \"number\",\r\n      validator: () => {},\r\n    },\r\n    {\r\n      label: \"e\",\r\n      onChange: setValue(\"e\"),\r\n      placeholder: \"Nhập số e sao cho gcd(Φ(n), e) ≡ 1 \",\r\n      type: \"number\",\r\n      validator: (value: any) => {\r\n        setGCD(gcd(m, value));\r\n        return (\r\n          value &&\r\n          bigInt(gcd(m, value)).mod(rsaType.p).equals(bigInt(1).mod(rsaType.p))\r\n        );\r\n      },\r\n      message: \"Không đồng dư với 1\",\r\n    },\r\n  ] as InputItem[];\r\n  useEffect(() => {\r\n    const { p, q, e } = rsaType;\r\n    if (p && q) {\r\n      setN(new BigNumber(p).multipliedBy(q || 0).toFixed());\r\n      setM(\r\n        new BigNumber(new BigNumber(p || 0).minus(1))\r\n          .multipliedBy(new BigNumber(q || 0).minus(1))\r\n          .toFixed()\r\n      );\r\n    }\r\n  }, [rsaType]);\r\n  useEffect(() => {\r\n    if (rsaType.e > 1 && m) {\r\n      try {\r\n        setD(bigInt(rsaType.e).modInv(bigInt(m)).toString());\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  }, [m, rsaType]);\r\n  useEffect(() => {\r\n    const { x, e } = rsaType;\r\n    if (e && n != 0) {\r\n      setY(bigInt(x).modPow(e, n).toString());\r\n    }\r\n  }, [n, rsaType]);\r\n\r\n  return (\r\n    <div className=\"rsa\">\r\n      <div className=\"input box\">\r\n        <div className=\"input-rsa \">\r\n          {inputValues.map((input, index) => (\r\n            <InputContainer\r\n              {...input}\r\n              key={index}\r\n              value={getValue(input.label as any)}\r\n            />\r\n          ))}\r\n          <div className=\"footer-input text-center\">\r\n            <div className=\"btn-options\">\r\n              <Button variant=\"outlined\" onClick={reNew}>\r\n                Tạo mới\r\n              </Button>\r\n            </div>\r\n            <div className=\"btn-options\">\r\n              <Button variant=\"outlined\" color=\"primary\" onClick={start}>\r\n                Tạo hệ mật\r\n              </Button>\r\n            </div>\r\n            <div className=\"btn-options\">\r\n              <Button variant=\"outlined\" color=\"primary\" onClick={demo}>\r\n                Demo\r\n              </Button>\r\n            </div>\r\n            <div className=\"btn-options\">\r\n              <a\r\n                href=\"https://asecuritysite.com/encryption/nprimes?y=256\"\r\n                target=\"_blank\"\r\n              >\r\n                <Button variant=\"outlined\" color=\"secondary\">\r\n                  Tạo P,Q\r\n                </Button>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {IsValid && (\r\n        <>\r\n          <div className=\"input box\">\r\n            <GenarateKeyRSA {...{ ...rsaType, m, n, d }} />\r\n          </div>\r\n          <div className=\"input box\">\r\n            <EncodeRSA {...{ ...rsaType, y }} />\r\n          </div>\r\n          <div className=\"input box\">\r\n            <DeCodeRSA {...{ ...rsaType, y, n, d }} />\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildCriptoRSA;\r\n","import { Button, Divider } from \"@material-ui/core\";\r\nimport bigInt from \"big-integer\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { TemplateKatex } from \"../../../containers/markdown\";\r\nimport { egcd } from \"../../../utils/gcd\";\r\n\r\nimport InputContainer from \"../../form-input/inputContainer\";\r\nimport EncodeRSA from \"../buildCrypto/encode\";\r\nimport InputRSA, { InputItem } from \"../buildCrypto/input\";\r\n\r\nimport \"./style.scss\";\r\nexport interface RSAType {\r\n  x?: any;\r\n  q?: any;\r\n  p?: any;\r\n  e?: any;\r\n}\r\n\r\nconst SignRSA = () => {\r\n  const [rsaType, setstate] = useState<RSAType>({\r\n    x: \"\",\r\n    q: \"\",\r\n    p: \"\",\r\n    e: \"\",\r\n  } as RSAType);\r\n  const [s, setS] = useState(\"\");\r\n  const [phiN, setPhiN] = useState(\"\");\r\n  const [n, setN] = useState(\"\");\r\n  const [dA, setDA] = useState(\"\");\r\n  const getValue = (label: \"x\" | \"p\" | \"q\") => {\r\n    return rsaType[label];\r\n  };\r\n  const [IsValid, setIsValid] = useState(false);\r\n  const setValue = (label?: any) => (value: any) => {\r\n    setstate({ ...rsaType, [label]: value });\r\n    setIsValid(false);\r\n  };\r\n  useEffect(() => {\r\n    const { p, q } = rsaType;\r\n    if (p && q) {\r\n      try {\r\n        setPhiN(bigInt(p).minus(1).multiply(bigInt(q).minus(1)).toString());\r\n        setN(bigInt(p).multiply(bigInt(q)).toString());\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  }, [rsaType]);\r\n  useEffect(() => {\r\n    const { e } = rsaType;\r\n    if (e && phiN) {\r\n      try {\r\n        let egc = egcd(e, phiN).toString();\r\n\r\n        setDA(egc);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  }, [rsaType, phiN]);\r\n  useEffect(() => {\r\n    demo();\r\n  }, []);\r\n  useEffect(() => {\r\n    const { e, x } = rsaType;\r\n    if (e && n && x) {\r\n      try {\r\n        setS(bigInt(x).modPow(bigInt(e), bigInt(n)).toString());\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  }, [rsaType, n]);\r\n  const reNew = () => {\r\n    setstate({} as RSAType);\r\n    setIsValid(false);\r\n  };\r\n\r\n  const start = () => {\r\n    if (\r\n      rsaType.x &&\r\n      rsaType.x != \"\" &&\r\n      rsaType.q &&\r\n      rsaType.q != \"\" &&\r\n      rsaType.p &&\r\n      rsaType.p != \"\" &&\r\n      rsaType.e &&\r\n      rsaType.e != \"\"\r\n    ) {\r\n      setIsValid(true);\r\n    } else {\r\n      setIsValid(false);\r\n    }\r\n  };\r\n  const demo = () => {\r\n    setstate({\r\n      x: \"123\",\r\n      e: \"2753\",\r\n      q: \"186062864985921495060024628097672313218174457244746265290277413813402544027127\",\r\n      p: \"211258915725672981641571789672009335406057206489563616119756939542322825326683\",\r\n    });\r\n    setIsValid(true);\r\n  };\r\n  useEffect(() => {\r\n    // const { x, d, n } = rsaType;\r\n    // if (x > 0 && d > 0 && n > 0) {\r\n    //   setS(bigInt(x).modPow(d, n).toString());\r\n    // }\r\n  }, [rsaType]);\r\n  const inputValues = [\r\n    {\r\n      label: \"x\",\r\n      onChange: setValue(\"x\"),\r\n      placeholder: \"Nhập bản rõ x\",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"p\",\r\n      onChange: setValue(\"d\"),\r\n      placeholder: \"Nhập số nguyên tố p\",\r\n      type: \"number\",\r\n    },\r\n\r\n    {\r\n      label: \"q\",\r\n      onChange: setValue(\"n\"),\r\n      placeholder: \"Nhập số nguyên tố q\",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"e\",\r\n      onChange: setValue(\"e\"),\r\n      placeholder: \"Nhập khóa ký e\",\r\n      type: \"number\",\r\n    },\r\n  ] as InputItem[];\r\n\r\n  return (\r\n    <div className=\"rsa\">\r\n      <div className=\"input box\">\r\n        <div className=\"input-rsa \">\r\n          {inputValues.map((input, index) => (\r\n            <InputContainer\r\n              {...input}\r\n              key={index}\r\n              value={getValue(input.label as any)}\r\n            />\r\n          ))}\r\n          <div className=\"footer-input text-center\">\r\n            <div className=\"btn-options\" onClick={reNew}>\r\n              <Button variant=\"outlined\">Tạo mới</Button>\r\n            </div>\r\n            <div className=\"btn-options\">\r\n              <Button variant=\"outlined\" color=\"primary\" onClick={start}>\r\n                Tạo chữ ký\r\n              </Button>\r\n            </div>\r\n            <div className=\"btn-options\">\r\n              <Button variant=\"outlined\" color=\"primary\" onClick={demo}>\r\n                Demo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {IsValid && (\r\n        <>\r\n          <div className=\"box\">\r\n            <>\r\n              <h4> Sinh khóa</h4>\r\n              <div className=\"genarate-key-rsa\">\r\n                <Divider />\r\n                <div className=\"item\">\r\n                  <div className=\"label text-bold\">\r\n                    <TemplateKatex element={\"$n = p * q : $\"} />\r\n                  </div>\r\n                  <div className=\"value\">{n || \"\"}</div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"item\">\r\n                  <div className=\"label text-bold\">\r\n                    <TemplateKatex\r\n                      element={\"$\\\\phi{(n)} = (p  -1 ) * (q - 1) : $\"}\r\n                    />\r\n                  </div>\r\n                  <div className=\"value\">{phiN || \"\"}</div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"item\">\r\n                  <div className=\"label text-bold\">\r\n                    <TemplateKatex element={` $(e) = ${rsaType.e} $`} />\r\n                  </div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"item\">\r\n                  <div className=\"label text-bold\">\r\n                    <TemplateKatex element={\"$(n, d_A) : $\"} />\r\n                  </div>\r\n                  <div className=\"value\">{`(${n} , ${dA}) `}</div>\r\n                </div>\r\n              </div>\r\n            </>\r\n          </div>\r\n          <div className=\"input box\">\r\n            <div className=\"encode-rsa\">\r\n              <h4>Ký văn bản x = {rsaType.x}</h4> <Divider />\r\n              <div className=\"item\">\r\n                <div className=\"label text-bold\">\r\n                  <TemplateKatex element={\"$s = x^{e} \\\\pmod{n} : $\"} />\r\n                </div>\r\n                <div className=\"value\">{s}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignRSA;\r\n","import { Button, Divider } from \"@material-ui/core\";\r\nimport bigInt from \"big-integer\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { TemplateKatex } from \"../../../containers/markdown\";\r\n\r\nimport InputContainer from \"../../form-input/inputContainer\";\r\nimport EncodeRSA from \"../buildCrypto/encode\";\r\nimport InputRSA, { InputItem } from \"../buildCrypto/input\";\r\n\r\nimport \"./style.scss\";\r\nexport interface RSAType {\r\n  x?: any;\r\n  d?: any;\r\n  s?: any;\r\n  n?: any;\r\n}\r\n\r\nconst CheckSignRSA = () => {\r\n  const [rsaType, setstate] = useState({\r\n    x: \"\",\r\n    n: \"\",\r\n    d: \"\",\r\n    s: \"\",\r\n  } as RSAType);\r\n  const getValue = (label: \"x\" | \"d\" | \"s\" | \"n\") => {\r\n    return rsaType[label];\r\n  };\r\n  const [decode, setDecode] = useState(\"\");\r\n\r\n  const [IsValid, setIsValid] = useState(false);\r\n  const setValue = (label?: any) => (value: any) => {\r\n    setstate({ ...rsaType, [label]: value });\r\n    setIsValid(false);\r\n  };\r\n  useEffect(() => {\r\n    demo();\r\n  }, []);\r\n  const reNew = () => {\r\n    setstate({} as RSAType);\r\n    setIsValid(false);\r\n  };\r\n  const start = () => {\r\n    if (\r\n      rsaType.x &&\r\n      rsaType.x != \"\" &&\r\n      rsaType.d &&\r\n      rsaType.d != \"\" &&\r\n      rsaType.n &&\r\n      rsaType.n != \"\" &&\r\n      rsaType.s &&\r\n      rsaType.s != \"\"\r\n    ) {\r\n      setIsValid(true);\r\n    } else {\r\n      setIsValid(false);\r\n    }\r\n  };\r\n  const demo = () => {\r\n    setstate({\r\n      x: \"123\",\r\n      d: \"35024027659280588279410289335328959540490525310193563479849697798494905794152069079021098700277236530207868259529042272216295232448183495829096117553367149\",\r\n      s: \"31711825763862161118992654921680949879172173461907529380994591041501909500662071781119806706827276493938418036359399912240974879381641160180718795492112524\",\r\n      n: \"39307439113738059328665522437896708363216639290241695988596093778742957868447460580869616903022658452374663818820843300319038335535649400035174564188929741\",\r\n    });\r\n    setIsValid(true);\r\n  };\r\n  useEffect(() => {\r\n    const { x, d, s, n } = rsaType;\r\n    if (x > 0 && d > 0 && n > 0) {\r\n      setDecode(bigInt(s).modPow(d, n).toString());\r\n    }\r\n  }, [rsaType]);\r\n  const inputValues = [\r\n    {\r\n      label: \"x\",\r\n      onChange: setValue(\"x\"),\r\n      placeholder: \"Nhập bản rõ x\",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"d\",\r\n      onChange: setValue(\"d\"),\r\n      placeholder: \"Nhập số khóa công khai d\",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"s\",\r\n      onChange: setValue(\"s\"),\r\n      placeholder: \"Nhập chữ ký s\",\r\n      type: \"number\",\r\n    },\r\n\r\n    {\r\n      label: \"n\",\r\n      onChange: setValue(\"n\"),\r\n      placeholder: \"Nhập n\",\r\n      type: \"number\",\r\n    },\r\n  ] as InputItem[];\r\n\r\n  return (\r\n    <div className=\"rsa\">\r\n      <div className=\"input box\">\r\n        <div className=\"input-rsa \">\r\n          {inputValues.map((input, index) => (\r\n            <InputContainer\r\n              {...input}\r\n              key={index}\r\n              value={getValue(input.label as any)}\r\n            />\r\n          ))}\r\n          <div className=\"footer-input text-center\">\r\n            <div className=\"btn-options\">\r\n              <Button variant=\"outlined\" onClick={reNew}>\r\n                Tạo mới\r\n              </Button>\r\n            </div>\r\n            <div className=\"btn-options\" onClick={start}>\r\n              <Button variant=\"outlined\" color=\"primary\">\r\n                Kiểm tra\r\n              </Button>\r\n            </div>\r\n            <div className=\"btn-options\" onClick={demo}>\r\n              <Button variant=\"outlined\" color=\"primary\">\r\n                Demo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {IsValid && (\r\n        <div className=\"input box\">\r\n          <div className=\"encode-rsa\">\r\n            <h4>Kiểm tra chữ ký</h4> <Divider />\r\n            <div className=\"item\">\r\n              <div className=\"label text-bold\">\r\n                <TemplateKatex element={`$s^{d_A} \\\\pmod{n} =  ${decode}  $`} />\r\n              </div>\r\n            </div>\r\n            <div className=\"item\">\r\n              <div className=\"label\">\r\n                {bigInt(rsaType.x).mod(bigInt(rsaType.n)).equals(decode) ? (\r\n                  <TemplateKatex\r\n                    element={\"$\\\\Harr x \\\\equiv s^{d_A} \\\\pmod{n} $\"}\r\n                  />\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n            <div className=\"item\">\r\n              <div className=\"label result\">\r\n                <TemplateKatex element={\"$\\\\Harr$\"} />\r\n                {bigInt(rsaType.x).mod(bigInt(rsaType.n)).equals(decode)\r\n                  ? \" Chữ ký hợp lệ\"\r\n                  : \" Chữ ký không hợp lệ\"}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckSignRSA;\r\n","import React from \"react\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport TimerIcon from \"@material-ui/icons/Timer\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\n\r\nimport WatchLaterIcon from \"@material-ui/icons/WatchLater\";\r\nimport { TabsRender } from \"../../../../components/common/Tab\";\r\nimport { LabelIcon } from \"../../../../components/common/icon\";\r\nimport BuildCriptoRSA from \"../../../../components/RSA/buildCrypto\";\r\n\r\nimport SignRSA from \"../../../../components/RSA/signRSA\";\r\nimport CheckSignRSA from \"../../../../components/RSA/checkSignRSA\";\r\n\r\ninterface Props {}\r\nconst apartmentTab = [\r\n  {\r\n    label: <LabelIcon label=\"Xây dựng hệ mật\" icon={<CheckCircleIcon />} />,\r\n    icon: CheckCircleIcon,\r\n    component: <BuildCriptoRSA />,\r\n  },\r\n  {\r\n    label: <LabelIcon label=\"Ký\" icon={<FavoriteIcon />} />,\r\n\r\n    icon: FavoriteIcon,\r\n    component: <SignRSA />,\r\n  },\r\n  {\r\n    label: <LabelIcon label=\"Kiểm tra chữ ký\" icon={<FavoriteIcon />} />,\r\n    icon: FavoriteIcon,\r\n    component: <CheckSignRSA />,\r\n  },\r\n];\r\nexport const RSA = (props: Props) => {\r\n  return (\r\n    <>\r\n      <TabsRender input={apartmentTab} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RSA;\r\n","import bigInt from \"big-integer\";\r\n\r\nexport const getQ = (q: any) => {\r\n  let Q = [];\r\n  for (let i = 1; i <= (q - 1) / 2; i++) {\r\n    //(x^2)modp\r\n    Q.push({\r\n      qValue: bigInt(i).modPow(2, q).toString(),\r\n      y: bigInt(i).toString(),\r\n    });\r\n  }\r\n\r\n  return Q;\r\n};\r\n\r\n// y^2 = x^3 + ax + b mod (r)\r\n// x^3 mod\r\nexport const getPowY = (\r\n  q: any,\r\n  a: number,\r\n  b: number,\r\n  Q: { qValue: string; y: any }[]\r\n) => {\r\n  let Z = [];\r\n  for (let i = 0; i < q; i++) {\r\n    //(x^2)modp\r\n    let powYValue = bigInt(i)\r\n      .modPow(3, q)\r\n      .add(bigInt(i).multiply(a).mod(q))\r\n      .add(bigInt(b).mod(q))\r\n      .mod(q)\r\n      .toString();\r\n\r\n    let inQ = checkInQ(powYValue, Q, q);\r\n    if (i == 0) {\r\n      console.log(powYValue);\r\n      console.log(inQ);\r\n    }\r\n    Z.push({\r\n      powYValue,\r\n      x: i,\r\n      ...inQ,\r\n    });\r\n  }\r\n\r\n  return Z;\r\n};\r\nexport const getPoints = (\r\n  powValue: {\r\n    powYValue?: any;\r\n    x: any;\r\n    y_1?: any;\r\n    y_2?: any;\r\n    inQ?: boolean;\r\n  }[]\r\n) => {\r\n  let result = [] as any[];\r\n  powValue.forEach((value, index) => {\r\n    if (value.inQ) {\r\n      result.push({ x: value.x, y: value.y_1 });\r\n      result.push({ x: value.x, y: value.y_2 });\r\n    }\r\n  });\r\n  return result;\r\n};\r\nconst checkInQ = (value: any, Q: { qValue: string; y: any }[], q: any) => {\r\n  let finds = Q.find((i) => i.qValue.toString() == value.toString());\r\n\r\n  if (finds) {\r\n    let res = {\r\n      inQ: true,\r\n      y_1: finds.y,\r\n      y_2: bigInt(q).minus(bigInt(finds.y)).toString(),\r\n    } as any;\r\n\r\n    return res;\r\n  } else {\r\n    let res = {\r\n      inQ: false,\r\n    } as any;\r\n    return res;\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Scatter } from \"react-chartjs-2\";\r\nimport \"./style.scss\";\r\nconst options = {\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        ticks: {\r\n          beginAtZero: true,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nconst ChartElliptic = (props: { data: any }) => {\r\n  // const { data } = props;\r\n  const [data, setData] = useState<any>();\r\n  useEffect(() => {\r\n    setData({\r\n      datasets: [\r\n        {\r\n          label: \"points\",\r\n          data: props.data,\r\n          backgroundColor: \"rgba(255, 99, 132, 1)\",\r\n        },\r\n      ],\r\n    });\r\n  }, [props]);\r\n  return (\r\n    <div className=\"chart-dot\">\r\n      <Scatter data={data} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartElliptic;\r\n","import { Divider } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { TemplateKatex } from \"../../../containers/markdown\";\r\nimport \"./style.scss\";\r\nexport interface DotProp {\r\n  data: { x: number; y: number }[];\r\n  a: any;\r\n  b: any;\r\n}\r\nconst DotList = (props: DotProp) => {\r\n  const { data, a, b } = props;\r\n  return (\r\n    <div className=\"dot-list\">\r\n      <div className=\"genarate-key-rsa\">\r\n        <h4>\r\n          Các điểm trên E43({a},{b}) là điểm vô cực O và các điểm sau\r\n        </h4>\r\n        <Divider />\r\n        {data.map((i, index) => (\r\n          <DotItem {...i} key={index} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst DotItem = (props: { x: number; y: number }) => {\r\n  const { x, y } = props;\r\n  return (\r\n    <div className=\"dot\">\r\n      <TemplateKatex element={`\\$(${x}, ${y})\\$`} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DotList;\r\n","import { Button } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { getPoints, getPowY, getQ } from \"../../utils/elliptic\";\r\nimport InputContainer from \"../form-input/inputContainer\";\r\nimport ChartElliptic from \"./chartElliptic\";\r\nimport DotList from \"./dotList\";\r\nimport InputElliptic, { InputItem } from \"./input\";\r\n\r\nimport \"./style.scss\";\r\nexport interface EllipticType {\r\n  a?: any;\r\n  b?: any;\r\n  p?: any;\r\n}\r\n\r\nconst EllipticBuild = () => {\r\n  const [ellipticType, setstate] = useState({\r\n    a: \"\",\r\n    b: \"\",\r\n    p: \"\",\r\n  } as EllipticType);\r\n  const [dataDots, setDataDots] = useState([]);\r\n  const [Q, setQ] = useState([]);\r\n  const [powY, setPowY] = useState([]);\r\n  useEffect(() => {\r\n    const { a, b, p } = ellipticType;\r\n    let q = getQ(ellipticType.p);\r\n\r\n    setQ(q as any);\r\n  }, [ellipticType]);\r\n  const reNew = () => {\r\n    setstate({} as EllipticType);\r\n    setIsValid(false);\r\n  };\r\n  useEffect(() => {\r\n    const { a, b, p } = ellipticType;\r\n\r\n    setPowY(getPowY(p, a, b, Q) as any);\r\n  }, [ellipticType, Q]);\r\n  useEffect(() => {\r\n    const { a, b, p } = ellipticType;\r\n\r\n    setDataDots(getPoints(powY as any) as any);\r\n  }, [powY]);\r\n\r\n  const demo = () => {\r\n    setstate({\r\n      a: \"4\",\r\n      b: \"2\",\r\n      p: \"619\",\r\n    });\r\n  };\r\n  const [IsValid, setIsValid] = useState(false);\r\n  const getValue = (label: \"a\" | \"b\" | \"p\") => {\r\n    return ellipticType[label];\r\n  };\r\n\r\n  const setValue = (label?: any) => (value: any) => {\r\n    value = Math.min(2281, value);\r\n    setstate({ ...ellipticType, [label]: value });\r\n    setIsValid(false);\r\n  };\r\n  useEffect(() => {\r\n    demo();\r\n  }, []);\r\n  const inputValues = [\r\n    {\r\n      label: \"a\",\r\n      onChange: setValue(\"a\"),\r\n      placeholder: \"Nhập số \",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"b\",\r\n      onChange: setValue(\"b\"),\r\n      placeholder: \"Nhập số b\",\r\n      type: \"number\",\r\n    },\r\n\r\n    {\r\n      label: \"p\",\r\n      onChange: setValue(\"p\"),\r\n      placeholder: \"Nhập số nguyên tố p (độ dài khoảng 160 bit) \",\r\n      type: \"number\",\r\n    },\r\n  ] as InputItem[];\r\n  return (\r\n    <div className=\"Elliptic\">\r\n      <div className=\"input box\">\r\n        <div className=\"input-Elliptic \">\r\n          {inputValues.map((input, index) => (\r\n            <InputContainer\r\n              {...input}\r\n              key={index}\r\n              value={getValue(input.label as any)}\r\n            />\r\n          ))}\r\n          <div className=\"footer-input text-center\">\r\n            <div className=\"btn-options\">\r\n              <Button variant=\"outlined\" onClick={reNew}>\r\n                Tạo mới\r\n              </Button>\r\n            </div>\r\n            <div className=\"btn-options\">\r\n              <Button variant=\"outlined\" color=\"primary\">\r\n                Xây dựng\r\n              </Button>\r\n            </div>\r\n            <div className=\"btn-options\">\r\n              <Button variant=\"outlined\" color=\"primary\" onClick={demo}>\r\n                Demo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"input box\">\r\n        <ChartElliptic data={dataDots} />\r\n      </div>\r\n      {dataDots && (\r\n        <div className=\"input box\">\r\n          <DotList data={dataDots} a={ellipticType.a} b={ellipticType.b} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EllipticBuild;\r\n","import React from \"react\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport TimerIcon from \"@material-ui/icons/Timer\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\n\r\nimport WatchLaterIcon from \"@material-ui/icons/WatchLater\";\r\nimport { TabsRender } from \"../../../../components/common/Tab\";\r\nimport { LabelIcon } from \"../../../../components/common/icon\";\r\nimport EllipticBuild from \"../../../../components/Elliptic\";\r\n\r\ninterface Props {}\r\nconst apartmentTab = [\r\n  {\r\n    label: <LabelIcon label=\"Xây dựng hệ mật\" icon={<CheckCircleIcon />} />,\r\n\r\n    icon: CheckCircleIcon,\r\n    component: <EllipticBuild />,\r\n  },\r\n];\r\nexport const Elliptic = (props: Props) => {\r\n  return (\r\n    <>\r\n      <TabsRender input={apartmentTab} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Elliptic;\r\n","import {\r\n  BarChart as BarChartIcon,\r\n  ShoppingBag as ShoppingBagIcon,\r\n  User as UserIcon,\r\n} from \"react-feather\";\r\n\r\nimport ApartmentIcon from \"@material-ui/icons/Apartment\";\r\n\r\nimport { Redirect, Route, Router, Switch } from \"react-router-dom\";\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport { ElGamal } from \"./outlets/ElGamal\";\r\nimport RSA from \"./outlets/RSA\";\r\nimport Elliptic from \"./outlets/Elliptic\";\r\n\r\nexport const routes = [\r\n  {\r\n    href: \"/admin/rsa\",\r\n    icon: BarChartIcon,\r\n    title: \"Hệ mật RSA\",\r\n    component: RSA,\r\n  },\r\n  {\r\n    href: \"/admin/elgamal\",\r\n    icon: UserIcon,\r\n    title: \"Hệ mật ElGamal\",\r\n    component: ElGamal,\r\n  },\r\n  {\r\n    href: \"/admin/elliptic\",\r\n    icon: ApartmentIcon,\r\n    title: \"Đường cong Elliptic\",\r\n    component: Elliptic,\r\n  },\r\n];\r\nconst RouteAdminItem = (route: any) => {\r\n  useEffect(() => {\r\n    console.log(\"aaag\");\r\n  }, []);\r\n  return <Route exact path={route.href} component={route.component}></Route>;\r\n};\r\nexport const RouteAdmin = () => {\r\n  useEffect(() => {\r\n    console.log(routes);\r\n  }, []);\r\n  return (\r\n    <Switch>\r\n      {routes.map((route, i) => (\r\n        <Route\r\n          exact\r\n          path={route.href}\r\n          component={route.component}\r\n          key={i}\r\n        ></Route>\r\n      ))}\r\n      <Redirect path=\"/admin\" to=\"/admin/rsa\" />\r\n    </Switch>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { Link as RouterLink, useLocation } from \"react-router-dom\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Divider,\r\n  Drawer,\r\n  Hidden,\r\n  List,\r\n  Typography,\r\n  makeStyles,\r\n  withStyles,\r\n  Theme,\r\n  createStyles,\r\n} from \"@material-ui/core\";\r\n\r\nimport { role } from \"../../../settings/role\";\r\nimport NavItem from \"./navbarItem\";\r\nimport { routes } from \"../router\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  mobileDrawer: {\r\n    width: 256,\r\n  },\r\n  desktopDrawer: {\r\n    width: 256,\r\n    top: 64,\r\n    height: \"calc(100% - 64px)\",\r\n  },\r\n  avatar: {\r\n    cursor: \"pointer\",\r\n    width: 64,\r\n    height: 64,\r\n    // border: `2px solid gray`,\r\n    boxShadow:\r\n      \": 0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)\",\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\ninterface Props {\r\n  onMobileClose: () => void;\r\n  openMobile: boolean;\r\n}\r\nconst SmallAvatar = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: 22,\r\n      height: 22,\r\n      border: `2px solid ${theme.palette.background.paper}`,\r\n      cursor: \"pointer\",\r\n    },\r\n  })\r\n)(Avatar);\r\n\r\nconst NavBar = (props: Props) => {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n\r\n  const { onMobileClose, openMobile } = props;\r\n\r\n  useEffect(() => {\r\n    if (openMobile && onMobileClose) {\r\n      onMobileClose();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [location.pathname]);\r\n\r\n  const content = (\r\n    <Box height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n      <Box alignItems=\"center\" display=\"flex\" flexDirection=\"column\" p={2}>\r\n        {/* <Avatar className={classes.avatar} src={user?.avatar?.url} /> */}\r\n        <Badge\r\n          overlap=\"circle\"\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"right\",\r\n          }}\r\n          badgeContent={\r\n            <>\r\n              <input\r\n                type=\"file\"\r\n                className={classes.input}\r\n                id=\"icon-button-file\"\r\n              />\r\n              <label htmlFor=\"icon-button-file\">\r\n                <SmallAvatar\r\n                  alt=\"Remy Sharp\"\r\n                  src={process.env.PUBLIC_URL + \"/assets/edit-avatar.png\"}\r\n                />\r\n              </label>\r\n            </>\r\n          }\r\n        >\r\n          <Avatar className={classes.avatar} />\r\n        </Badge>\r\n        <Typography color=\"textPrimary\" variant=\"h5\">\r\n          {\"Nguyễn Thái Tiệp\"}\r\n        </Typography>\r\n        <Typography color=\"textSecondary\" variant=\"body2\">\r\n          {\"18021277\"}\r\n        </Typography>\r\n      </Box>\r\n      <Divider />\r\n      <Box p={2}>\r\n        <List>\r\n          {routes.map((item) => {\r\n            return (\r\n              <NavItem\r\n                href={item.href}\r\n                key={item.title}\r\n                title={item.title}\r\n                icon={item.icon}\r\n              />\r\n            );\r\n          })}\r\n        </List>\r\n      </Box>\r\n      <Box flexGrow={1} />\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Hidden lgUp>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.mobileDrawer }}\r\n          onClose={onMobileClose}\r\n          open={openMobile}\r\n          variant=\"temporary\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden mdDown>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.desktopDrawer }}\r\n          open\r\n          variant=\"persistent\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nimport { Redirect, Route, Switch, useHistory } from \"react-router\";\r\nimport TopBar from \"./topbar\";\r\nimport NavBar from \"./navbar\";\r\nimport { RouteAdmin, routes } from \"./router\";\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  root: {\r\n    backgroundColor: \"#F4F6F8\",\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n    overflow: \"hidden\",\r\n    width: \"100%\",\r\n  },\r\n  wrapper: {\r\n    display: \"flex\",\r\n    flex: \"1 1 auto\",\r\n    overflow: \"hidden\",\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      paddingLeft: 250,\r\n    },\r\n  },\r\n  contentContainer: {\r\n    display: \"flex\",\r\n    flex: \"1 1 auto\",\r\n    overflow: \"hidden\",\r\n    paddingTop: theme.spacing(2),\r\n  },\r\n  content: {\r\n    flex: \"1 1 auto\",\r\n    height: \"100%\",\r\n    overflow: \"auto\",\r\n  },\r\n}));\r\n\r\nconst DashboardLayout = () => {\r\n  const classes = useStyles();\r\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\r\n  const history = useHistory();\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TopBar onMobileNavOpen={() => setMobileNavOpen(true)} />\r\n      <NavBar\r\n        onMobileClose={() => setMobileNavOpen(false)}\r\n        openMobile={isMobileNavOpen}\r\n      />\r\n      <div className={classes.wrapper}>\r\n        <div className={classes.contentContainer}>\r\n          <div className={classes.content} style={{ minHeight: 850 }}>\r\n            <RouteAdmin />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardLayout;\r\n","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { role } from \"../../settings/role\";\r\nimport { NotFoundPage } from \"../pages/404\";\r\nimport { AboutPage } from \"../pages/about\";\r\nimport { AdminPage } from \"../pages/admin\";\r\nimport { HomePage } from \"../pages/home\";\r\n\r\n// todo\r\nconst nameApp = \"Nhập môn an toàn thông tin\";\r\nexport const routes = [\r\n  {\r\n    path: \"/admin\",\r\n    roleDefine: [],\r\n    public: true,\r\n    component: AdminPage,\r\n    name: \"Nhập môn an toàn thông tin\",\r\n  },\r\n];\r\nconst setTitleDocument = (name?: string) => {\r\n  document.title = name || nameApp;\r\n};\r\n\r\nexport const RoutesApp = () => {\r\n  return (\r\n    <Switch>\r\n      {routes.map((route, index) => (\r\n        <RouteItem key={index} {...route} />\r\n      ))}\r\n\r\n      <Redirect to=\"/admin\"></Redirect>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport const RouteItem = (props?: any) => {\r\n  return <Route {...props}>{setTitleDocument(props.name)}</Route>;\r\n};\r\n","import React from \"react\";\r\nimport DashboardLayout from \"../../../containers/admin\";\r\n\r\nexport const AdminPage = () => {\r\n  return (\r\n    <div>\r\n      <DashboardLayout />\r\n    </div>\r\n  );\r\n};\r\n","import { createBrowserHistory } from \"history\";\r\n\r\nexport const history = createBrowserHistory();\r\nexport const requireLogin = (path?: string) => {\r\n  return history.push({\r\n    pathname: \"/login\",\r\n    search: \"?\" + new URLSearchParams(path).toString(),\r\n  });\r\n};\r\nexport const backToHome = () => {\r\n  return history.push(\"/\");\r\n};\r\n","import { createBrowserHistory } from \"history\";\r\nimport React from \"react\";\r\nimport { Redirect, Route, Router, Switch, useLocation } from \"react-router-dom\";\r\nimport logo from \"../logo.svg\";\r\nimport \"./index.scss\";\r\n\r\nimport { routes, RoutesApp } from \"./router\";\r\nimport { history } from \"../service/history\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router history={history}>\r\n        <div className={\"HeaderItem\"}></div>\r\n        <div className=\"main-content\">\r\n          <RoutesApp />\r\n        </div>\r\n\r\n        <div className=\"footer\"></div>\r\n      </Router>\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport App from \"./app\";\nimport \"./index.scss\";\n\nimport reportWebVitals from \"./reportWebVitals\";\nimport { persistor, store } from \"./service/reduxStore\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}