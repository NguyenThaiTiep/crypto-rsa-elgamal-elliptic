{"version":3,"sources":["containers/admin/topbar/index.tsx","containers/admin/navbar/navbarItem.tsx","components/common/Tab/index.tsx","components/common/icon/index.tsx","components/form-input/inputContainer/index.tsx","containers/markdown/index.tsx","components/ElGamal/buildCrypto/decode/index.tsx","components/ElGamal/buildCrypto/encode/index.tsx","components/ElGamal/buildCrypto/genarateKey/index.tsx","components/ElGamal/buildCrypto/index.tsx","components/ElGamal/crypto/index.tsx","components/ElGamal/sign/index.tsx","components/ElGamal/checkSign/index.tsx","containers/admin/outlets/ElGamal/index.tsx","components/RSA/buildCrypto/decode/index.tsx","components/RSA/buildCrypto/encode/index.tsx","components/RSA/buildCrypto/genarateKey/index.tsx","utils/gcd.ts","components/RSA/buildCrypto/index.tsx","components/RSA/signRSA/index.tsx","components/RSA/checkSignRSA/index.tsx","containers/admin/outlets/RSA/index.tsx","utils/elliptic.ts","components/form-input/selectInput/index.tsx","components/Elliptic/chartElliptic/index.tsx","utils/sha512.ts","components/Elliptic/checkSign/index.tsx","components/Elliptic/dotList/index.tsx","components/Elliptic/genarate_key/index.tsx","components/Elliptic/sign/index.tsx","components/Elliptic/index.tsx","containers/admin/outlets/Elliptic/index.tsx","containers/admin/router.tsx","containers/admin/navbar/index.tsx","containers/admin/index.tsx","app/router/index.tsx","app/pages/admin/index.tsx","service/history/index.ts","app/index.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","root","backgroundColor","title","color","fontSize","avatar","width","height","dropdown","borderRadius","border","boxShadow","hexToRgb","top","margin","textAlign","WebkitBackgroundClip","backgroundClip","dropdownItem","padding","WebkitTransition","MozTransition","OTransition","MsTransition","transition","display","clear","lineHeight","whiteSpace","minHeight","zIndex","popperClose","pointerEvents","popperNav","breakpoints","down","position","left","transform","willChange","marginLeft","marginRight","marginTop","marginBottom","paper","maxHeight","overflowY","TopBar","props","classes","useState","className","onMobileNavOpen","rest","AppBar","clsx","elevation","Toolbar","to","Box","flexGrow","Hidden","mdDown","IconButton","lgUp","onClick","item","paddingTop","paddingBottom","button","palette","text","secondary","fontWeight","typography","fontWeightMedium","justifyContent","letterSpacing","textTransform","icon","spacing","active","primary","main","NavItem","href","Icon","ListItem","disableGutters","Button","activeClassName","component","RouterLink","size","tab","TabsRender","input","React","value","setValue","Tabs","onChange","event","newValue","map","index","Tab","label","id","a11yProps","key","TabPanel","children","other","role","hidden","p","LabelIcon","InputContainer","isValid","setIsValid","InputGroup","Prepend","Text","FormControl","placeholder","target","validator","type","message","TemplateKatex","element","delimiters","right","DeCodeElGamal","x","a","k","delta","beta","gama","gamalValue","setgamalValue","XValue","setXValue","useEffect","bigInt","modPow","minus","toString","multiply","mod","e","console","log","Divider","EncodeElGamal","α","GenarateKeyElGamal","BuildCriptoElGamal","elGamalType","setstate","IsValid","setBeta","setGamma","setDelta","demo","error","inputValues","variant","CriptoElGamal","gamma","β","SignElGamal","modInv","CheckSignElGamal","VT","setVT","VP","setVP","s1","s2","apartmentTab","CheckCircleIcon","TimerIcon","FavoriteIcon","ElGamal","DeCodeRSA","decode","setDecode","y","n","d","EncodeRSA","GenarateKeyRSA","m","gcd","b","tmp","r","BuildCriptoRSA","q","rsaType","setN","setM","setD","setY","_gcd","setGCD","equals","BigNumber","multipliedBy","toFixed","SignRSA","s","setS","phiN","setPhiN","dA","setDA","egc","CheckSignRSA","RSA","checkInQ","Q","finds","find","i","qValue","inQ","y_1","y_2","isElqual","point_1","point_2","multiplyPoint","point","result","checkIndentyPoint","plusPoint","lamda","tu_so","pow","add","lesser","mau_so","formControl","SelectInput","data","placeHolder","open","setOpen","getLabel","getValue","InputLabel","Select","labelId","onClose","onOpen","split","MenuItem","options","scales","yAxes","ticks","beginAtZero","ChartElliptic","setData","datasets","hashCodeSHA","hex","length","highbyte","parseInt","slice","bn","BigInt","join","hexToBn","sha512","CheckSignElliptic","points","elippticType","P","setP","G","setG","z","setZ","setQ","xG","yG","s_1","Number","p_1_1","p_1","p_2_1","p_2","P_point","G_point","DotItem","DotList","GenarateKeyElliptic","B","M1","M2","EllipticSign","ellipticType","h","setH","s1_value","s_value","EllipticBuild","encodeType","setEncodeType","dataDots","setDataDots","setM1","setM2","MDecode","setMDecode","powY","setPowY","setB","push","getQ","Z","powYValue","getPowY","powValue","forEach","getPoints","M","kPoint","Math","min","setValuePoint","sM1","SM1_","kM1","kM","point_A","point_temp","getK","KB","m2","Elliptic","routes","BarChartIcon","UserIcon","ApartmentIcon","RouteAdmin","route","exact","path","mobileDrawer","desktopDrawer","cursor","SmallAvatar","withStyles","createStyles","background","Avatar","NavBar","location","useLocation","onMobileClose","openMobile","pathname","content","flexDirection","alignItems","Badge","overlap","anchorOrigin","vertical","horizontal","badgeContent","htmlFor","alt","src","process","Typography","List","Drawer","anchor","overflow","wrapper","flex","up","paddingLeft","contentContainer","DashboardLayout","isMobileNavOpen","setMobileNavOpen","useHistory","style","roleDefine","public","name","RoutesApp","RouteItem","document","history","createBrowserHistory","App","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.36d3fe4a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\r\nimport Poppers from \"@material-ui/core/Popper\";\r\nimport clsx from \"clsx\";\r\nimport InputIcon from \"@material-ui/icons/Input\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nimport \"./style.scss\";\r\n\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  Hidden,\r\n  IconButton,\r\n  Toolbar,\r\n  makeStyles,\r\n  hexToRgb,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  root: {\r\n    backgroundColor: \"#009177\",\r\n  },\r\n  title: {\r\n    color: \"#ffffff\",\r\n    fontSize: 20,\r\n  },\r\n  avatar: {\r\n    width: 60,\r\n    height: 60,\r\n  },\r\n  dropdown: {\r\n    borderRadius: \"3px\",\r\n    border: \"0\",\r\n    boxShadow: \"0 2px 5px 0 rgba(\" + hexToRgb(\"#000000\") + \", 0.26)\",\r\n    top: \"100%\",\r\n    margin: \"2px 0 0\",\r\n    fontSize: \"14px\",\r\n    textAlign: \"left\",\r\n    backgroundColor: \"white\",\r\n    WebkitBackgroundClip: \"padding-box\",\r\n    backgroundClip: \"padding-box\",\r\n  },\r\n  dropdownItem: {\r\n    fontSize: \"13px\",\r\n    padding: \"10px 20px\",\r\n    margin: \"0 5px\",\r\n    borderRadius: \"2px\",\r\n    WebkitTransition: \"all 150ms linear\",\r\n    MozTransition: \"all 150ms linear\",\r\n    OTransition: \"all 150ms linear\",\r\n    MsTransition: \"all 150ms linear\",\r\n    transition: \"all 150ms linear\",\r\n    display: \"block\",\r\n    clear: \"both\",\r\n    lineHeight: \"1.42857143\",\r\n    whiteSpace: \"nowrap\",\r\n    height: \"unset\",\r\n    minHeight: \"unset\",\r\n    zIndex: 1300,\r\n    \"&:hover\": {\r\n      backgroundColor: \"primary\",\r\n      color: \"white\",\r\n    },\r\n  },\r\n  popperClose: {\r\n    pointerEvents: \"none\",\r\n  },\r\n  popperNav: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      position: \"static !important\",\r\n      left: \"unset !important\",\r\n      top: \"unset !important\",\r\n      transform: \"none !important\",\r\n      willChange: \"unset !important\",\r\n      \"& > div\": {\r\n        boxShadow: \"none !important\",\r\n        marginLeft: \"0rem\",\r\n        marginRight: \"0rem\",\r\n        transition: \"none !important\",\r\n        marginTop: \"0px !important\",\r\n        marginBottom: \"0px !important\",\r\n        padding: \"0px !important\",\r\n        backgroundColor: \"transparent !important\",\r\n        \"& ul li\": {\r\n          color: \"#ffffff\" + \" !important\",\r\n          margin: \"10px 15px 0!important\",\r\n          padding: \"10px 15px !important\",\r\n          \"&:hover\": {\r\n            backgroundColor: \"hsla(0,0%,78%,.2)\",\r\n            boxShadow: \"none\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n  paper: {\r\n    maxHeight: \"500px\",\r\n    overflowY: \"scroll\",\r\n  },\r\n}));\r\ninterface Props {\r\n  className?: string;\r\n  onMobileNavOpen: () => void;\r\n}\r\nconst TopBar = (props: Props) => {\r\n  const classes = useStyles();\r\n  const [notifications] = useState([]);\r\n  const { className, onMobileNavOpen, ...rest } = props;\r\n\r\n  return (\r\n    <AppBar className={clsx(classes.root, className)} elevation={0} {...rest}>\r\n      <Toolbar>\r\n        <div className=\"title-logo-a\">\r\n          <RouterLink to=\"/\">\r\n            <span className={\"title-logo\"}>Nhâp môn an toàn thông tin</span>\r\n          </RouterLink>\r\n        </div>\r\n        <Box flexGrow={1} />\r\n        <Hidden mdDown>\r\n          <IconButton color=\"inherit\">\r\n            <InputIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n        <Hidden lgUp>\r\n          <IconButton color=\"inherit\" onClick={onMobileNavOpen}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default TopBar;\r\n","import React from \"react\";\r\nimport { NavLink as RouterLink } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { Button, ListItem, makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  item: {\r\n    display: \"flex\",\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n  },\r\n  button: {\r\n    color: theme.palette.text.secondary,\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    justifyContent: \"flex-start\",\r\n    letterSpacing: 0,\r\n    padding: \"10px 8px\",\r\n    textTransform: \"none\",\r\n    width: \"100%\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  title: {\r\n    marginRight: \"auto\",\r\n  },\r\n  active: {\r\n    color: theme.palette.primary.main,\r\n    \"& $title\": {\r\n      fontWeight: theme.typography.fontWeightMedium,\r\n    },\r\n    \"& $icon\": {\r\n      color: theme.palette.primary.main,\r\n    },\r\n  },\r\n}));\r\ninterface Props {\r\n  className?: string;\r\n  href: string;\r\n  icon: any;\r\n  title: string;\r\n}\r\nconst NavItem = (props: Props) => {\r\n  const classes = useStyles();\r\n  const { className, href, icon: Icon, title, ...rest } = props;\r\n\r\n  return (\r\n    <ListItem\r\n      className={clsx(classes.item, className)}\r\n      disableGutters\r\n      {...rest}\r\n    >\r\n      <Button\r\n        activeClassName={classes.active}\r\n        className={classes.button}\r\n        component={RouterLink}\r\n        to={href}\r\n      >\r\n        {Icon && <Icon className={classes.icon} size=\"20\" />}\r\n        <span className={classes.title}>{title}</span>\r\n      </Button>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default NavItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  tab: {\r\n    backgroundColor: \"#ffffff\",\r\n    color: \"gray\",\r\n  },\r\n});\r\ninterface InputItem {\r\n  label: any;\r\n  component: any;\r\n  icon: any;\r\n}\r\ninterface Props {\r\n  input: InputItem[];\r\n}\r\nexport const TabsRender = (props: Props) => {\r\n  const classes = useStyles();\r\n  const [tabValue, setTabValue] = useState([] as InputItem[]);\r\n  const { input } = props;\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar className={classes.tab} position=\"static\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"simple tabs example\"\r\n        >\r\n          {input.map((item, index) => (\r\n            <Tab label={item.label} {...a11yProps(index)} key={index} />\r\n          ))}\r\n        </Tabs>\r\n      </AppBar>\r\n      {input.map((item, index) => (\r\n        <TabPanel value={value} index={index} key={index}>\r\n          {item.component}\r\n        </TabPanel>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: any;\r\n  value: any;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index: any) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport \"./style.scss\";\r\ninterface Props {\r\n  icon?: any;\r\n  label?: any;\r\n}\r\n\r\nexport const LabelIcon = (props: Props) => {\r\n  const { icon, label } = props;\r\n  return (\r\n    <>\r\n      <span className=\"icon-label\">{icon || label}</span>\r\n      <span className=\"label-icon\">{label}</span>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { FormControl, InputGroup } from \"react-bootstrap\";\r\nimport { InputItem } from \"../../RSA/buildCrypto/input\";\r\nimport \"./style.scss\";\r\nconst InputContainer = (props: InputItem) => {\r\n  const [isValid, setIsValid] = useState(true);\r\n\r\n  const change = (event: any) => {\r\n    props.onChange && props.onChange(event.target.value);\r\n    if (props.validator) {\r\n      setIsValid(props.validator(event.target.value));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mb-3\">\r\n      <InputGroup>\r\n        <InputGroup.Prepend>\r\n          <InputGroup.Text id=\"basic-addon1\">{props.label}</InputGroup.Text>\r\n        </InputGroup.Prepend>\r\n        <FormControl\r\n          placeholder={props.placeholder || \"input here\"}\r\n          onChange={change}\r\n          type={props.type || \"text\"}\r\n          value={props.value || \"\"}\r\n\r\n          // formNoValidate\r\n        />\r\n      </InputGroup>\r\n      {!isValid && props.message && (\r\n        <div className=\"error-input\">\r\n          <span className=\"error-text\">(Error) : </span>\r\n          <span>{props.message}</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputContainer;\r\n","import React from \"react\";\r\n\r\nimport \"./index.scss\";\r\nimport Latex from \"react-latex-next\";\r\ninterface Props {\r\n  element: string;\r\n}\r\n\r\nexport const TemplateKatex: React.FC<Props> = ({ element }) => {\r\n  return (\r\n    <span className=\"latex\">\r\n      <Latex\r\n        delimiters={[\r\n          { left: \"$$\", right: \"$$\", display: true },\r\n          { left: \"\\\\(\", right: \"\\\\)\", display: false },\r\n          { left: \"$\", right: \"$\", display: false },\r\n          { left: \"\\\\[\", right: \"\\\\]\", display: true },\r\n        ]}\r\n      >\r\n        {element}\r\n      </Latex>\r\n    </span>\r\n  );\r\n};\r\n","import { Divider } from \"@material-ui/core\";\r\nimport bigInt from \"big-integer\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { TemplateKatex } from \"../../../../containers/markdown\";\r\nimport InputContainer from \"../../../form-input/inputContainer\";\r\nimport \"./style.scss\";\r\ninterface Props {\r\n  α?: any;\r\n  a?: any;\r\n  k?: any;\r\n  e?: any;\r\n  x?: any;\r\n  p?: any;\r\n  beta?: any;\r\n  gama?: any;\r\n  delta?: any;\r\n}\r\nconst DeCodeElGamal = (props: Props) => {\r\n  const { x, a, k, p, delta, beta, gama } = props;\r\n  const [gamalValue, setgamalValue] = useState<any>(\"\");\r\n  const [XValue, setXValue] = useState<any>(\"\");\r\n  useEffect(() => {\r\n    if (gama > 0 && p > 0 && p - a - 1 > 0) {\r\n      setgamalValue(\r\n        bigInt(gama)\r\n          .modPow(bigInt(p).minus(bigInt(a)).minus(1), bigInt(p))\r\n          .toString()\r\n      );\r\n    }\r\n  }, [x, a, k, p, delta, beta, gama]);\r\n  useEffect(() => {\r\n    if (gamalValue && delta > 0) {\r\n      try {\r\n        setXValue(\r\n          bigInt(gamalValue).multiply(bigInt(delta)).mod(bigInt(p)).toString()\r\n        );\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  }, [gamalValue, props]);\r\n  useEffect(() => {}, [props]);\r\n  return (\r\n    <div className=\"encode-rsa\">\r\n      <h4>Giải mã</h4> <Divider />\r\n      <div className=\"item\">\r\n        <div className=\"label text-bold\">\r\n          <TemplateKatex element={`$y ^{-a} \\\\pmod{p}   $`} />\r\n          <TemplateKatex element={`$ γ^{(p-1-a)} \\\\pmod{p} = $`} />\r\n          <TemplateKatex element={`$${gama} $`} />\r\n          <TemplateKatex element={`$^{(${p}-${a}-1)}    $`} />\r\n          <TemplateKatex element={`$= \\\\pmod{${p}}  $`} />\r\n          <TemplateKatex element={`$= ${gamalValue}  $`} />\r\n        </div>\r\n      </div>\r\n      <div className=\"item\">\r\n        <div className=\"label text-bold\">\r\n          <TemplateKatex element={`$x = γ ^{-a} * δ = ${XValue}  $`} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeCodeElGamal;\r\n","import { Divider } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { TemplateKatex } from \"../../../../containers/markdown\";\r\nimport InputContainer from \"../../../form-input/inputContainer\";\r\nimport \"./style.scss\";\r\ninterface Props {\r\n  α?: any;\r\n  a?: any;\r\n  k?: any;\r\n  e?: any;\r\n  x?: any;\r\n  p?: any;\r\n  beta?: any;\r\n  gama?: any;\r\n  delta?: any;\r\n}\r\n\r\nconst EncodeElGamal = (props: Props) => {\r\n  const { x, a, k, p, delta, beta, gama, α } = props;\r\n  return (\r\n    <div className=\"encode-rsa\">\r\n      <h4>Mã hóa bản rõ x = {x}</h4> <Divider />\r\n      <div className=\"item\">\r\n        <div className=\"label text-bold\">\r\n          <TemplateKatex element={`$γ = \\\\alpha^k \\\\pmod{p}$`} />\r\n          <TemplateKatex element={`$=$`} />\r\n          <TemplateKatex element={`$${α}^{${k}} \\\\pmod{${p}} = ${gama}$`} />\r\n        </div>\r\n        <div className=\"value\"></div>\r\n      </div>\r\n      <div className=\"item\">\r\n        <div className=\"label text-bold\">\r\n          <TemplateKatex element={`$δ = x * β^{k} \\\\pmod{p} $`} />\r\n          <TemplateKatex element={`$=$`} />\r\n          <TemplateKatex\r\n            element={`$${x} * ${beta}^{${k}} \\\\pmod{${p}} = ${delta}$`}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EncodeElGamal;\r\n","import { Divider } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { TemplateKatex } from \"../../../../containers/markdown\";\r\nimport { TableConvert, TableData } from \"../../../common/table\";\r\nimport \"./style.scss\";\r\ninterface Props {\r\n  α?: any;\r\n  a?: any;\r\n  k?: any;\r\n  e?: any;\r\n  x?: any;\r\n  p?: any;\r\n  beta?: any;\r\n}\r\n\r\nconst GenarateKeyElGamal = (props: Props) => {\r\n  const { x, a, k, e, α, p, beta } = props;\r\n  const getN = () => {};\r\n  return (\r\n    <div className=\"genarate-key-rsa\">\r\n      <h4> Sinh khóa</h4>\r\n      <Divider />\r\n      <div className=\"item\">\r\n        <div className=\"label\">\r\n          <TemplateKatex element={`$\\\\beta = \\\\alpha^{a} \\\\mod{p} : $`} />\r\n        </div>\r\n        <div className=\"val\">{beta}</div>\r\n      </div>\r\n\r\n      <div className=\"item\">\r\n        <div className=\"label text-bold\">\r\n          <TemplateKatex element={`$K = (p,α,β) :  $`} />\r\n        </div>\r\n        <div className=\"value\">{`(${p}, ${α}, ${beta})`}</div>\r\n      </div>\r\n\r\n      <div className=\"item\">\r\n        <div className=\"label text-bold\">\r\n          <TemplateKatex element={`$K'= (a) = (${a}) $`} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GenarateKeyElGamal;\r\n","import { Button } from \"@material-ui/core\";\r\nimport bigInt from \"big-integer\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport InputContainer from \"../../form-input/inputContainer\";\r\nimport DeCodeElGamal from \"./decode\";\r\nimport DecodeElGamal from \"./decode\";\r\nimport EncodeElGamal from \"./encode\";\r\nimport GenarateKeyElGamal from \"./genarateKey\";\r\nimport InputElGamal, { InputItem, ElGamalProps } from \"./input\";\r\nimport \"./style.scss\";\r\nexport interface ElGamalType {\r\n  p?: any;\r\n  x?: any;\r\n  k?: any;\r\n  a?: any;\r\n  α?: any;\r\n}\r\n\r\nconst BuildCriptoElGamal = () => {\r\n  const [elGamalType, setstate] = useState({} as ElGamalType);\r\n  const getValue = (label: \"x\" | \"k\" | \"a\" | \"p\" | \"α\") => {\r\n    return elGamalType[label];\r\n  };\r\n  const [IsValid, setIsValid] = useState(false);\r\n  const [ed, setED] = useState<any>();\r\n  const [ed2, setED2] = useState<any>();\r\n  const [s1, setS1] = useState<any>();\r\n  const [s2, setS2] = useState<any>();\r\n  const [beta, setBeta] = useState<any>();\r\n  const [gama, setGamma] = useState<any>();\r\n  const [delta, setDelta] = useState<any>();\r\n  const setValue = (label?: any) => (value: any) => {\r\n    setstate({ ...elGamalType, [label]: value });\r\n    setIsValid(false);\r\n  };\r\n  const demo = () => {\r\n    setstate({\r\n      p: \"72123325254581672626176125162734766156045554514105133573263758251347324533769\",\r\n      x: \"2035\",\r\n      k: \"1523\",\r\n      a: \"1751\",\r\n      α: \"2\",\r\n    });\r\n    setIsValid(true);\r\n  };\r\n  useEffect(() => {\r\n    demo();\r\n  }, []);\r\n  const reNew = () => {\r\n    setstate({} as ElGamalType);\r\n    setIsValid(false);\r\n  };\r\n  useEffect(() => {\r\n    const { k, p, x } = elGamalType;\r\n    if (!(beta && k && x && p)) {\r\n      return;\r\n    }\r\n    try {\r\n      setDelta(\r\n        bigInt(bigInt(beta).modPow(k, p).multiply(bigInt(x).mod(p)))\r\n          .mod(p)\r\n          .toString()\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [beta, elGamalType]);\r\n  useEffect(() => {\r\n    const { α, a, p, k } = elGamalType;\r\n    if (α > 0 && a > 0 && p) {\r\n      setBeta(bigInt(α).modPow(bigInt(a), bigInt(p)).toString());\r\n      setGamma(bigInt(α).modPow(bigInt(k), bigInt(p)).toString());\r\n    }\r\n  }, [elGamalType]);\r\n  const inputValues = [\r\n    {\r\n      label: \"p\",\r\n      onChange: setValue(\"p\"),\r\n      placeholder: \"Nhập số nguyên tố p (độ dài khoảng 256 bits)\",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"x\",\r\n      onChange: setValue(\"x\"),\r\n      placeholder: \"Nhập bản rõ x ( 0 < x < p ) \",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"a\",\r\n      onChange: setValue(\"a\"),\r\n      placeholder: \"Nhập số a \",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"k\",\r\n      onChange: setValue(\"k\"),\r\n      placeholder: \"Nhập số k  ( 0 < x < p - 1 ) \",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"α\",\r\n      onChange: setValue(\"α\"),\r\n      placeholder: \"Nhập số α\",\r\n      type: \"number\",\r\n    },\r\n  ] as InputItem[];\r\n  const start = () => {\r\n    if (\r\n      elGamalType.x &&\r\n      elGamalType.x != \"\" &&\r\n      elGamalType.p &&\r\n      elGamalType.p != \"\" &&\r\n      elGamalType.a &&\r\n      elGamalType.a != \"\" &&\r\n      elGamalType.α &&\r\n      elGamalType.α != \"\" &&\r\n      elGamalType.k &&\r\n      elGamalType.k != \"\"\r\n    ) {\r\n      setIsValid(true);\r\n    } else {\r\n      setIsValid(false);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"ElGamal\">\r\n      <div className=\"input box\">\r\n        <div className=\"input-rsa \">\r\n          {inputValues.map((input, index) => (\r\n            <InputContainer\r\n              {...input}\r\n              key={index}\r\n              value={getValue(input.label as any)}\r\n            />\r\n          ))}\r\n          <div className=\"footer-input text-center\">\r\n            <div className=\"btn-options\">\r\n              <Button variant=\"outlined\" onClick={reNew}>\r\n                Tạo mới\r\n              </Button>\r\n            </div>\r\n            <div className=\"btn-options\">\r\n              <Button variant=\"outlined\" color=\"primary\" onClick={start}>\r\n                Tạo hệ mật\r\n              </Button>\r\n            </div>\r\n            <div className=\"btn-options\">\r\n              <Button variant=\"outlined\" color=\"primary\" onClick={demo}>\r\n                Demo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {IsValid && (\r\n        <>\r\n          <div className=\"input box\">\r\n            <GenarateKeyElGamal {...{ ...elGamalType, beta }} />\r\n          </div>\r\n          <div className=\"input box\">\r\n            <EncodeElGamal {...{ ...elGamalType, beta, delta, gama }} />\r\n          </div>\r\n          <div className=\"input box\">\r\n            <DeCodeElGamal {...{ ...elGamalType, beta, delta, gama }} />\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildCriptoElGamal;\r\n","import { Button, Divider } from \"@material-ui/core\";\r\nimport bigInt from \"big-integer\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { TemplateKatex } from \"../../../containers/markdown\";\r\nimport InputContainer from \"../../form-input/inputContainer\";\r\nimport InputElGamal, { InputItem } from \"../buildCrypto/input\";\r\n\r\nimport \"./style.scss\";\r\nexport interface ElGamalType {\r\n  p?: any;\r\n  x?: any;\r\n  α?: any;\r\n  β?: any;\r\n  k?: any;\r\n}\r\n\r\nconst CriptoElGamal = () => {\r\n  const [elGamalType, setstate] = useState({} as ElGamalType);\r\n\r\n  const getValue = (label: \"x\" | \"p\" | \"k\" | \"β\" | \"α\") => {\r\n    return elGamalType[label];\r\n  };\r\n  const [gamma, setGamma] = useState<any>();\r\n  const [delta, setDelta] = useState<any>();\r\n  useEffect(() => {\r\n    const { α, k, p, β, x } = elGamalType;\r\n    if (α > 0 && k > 0 && p > 0) setGamma(bigInt(α).modPow(k, p).toString());\r\n    if (β > 0 && k > 0 && p > 0 && x > 0)\r\n      setDelta(\r\n        bigInt(β)\r\n          .modPow(k, p)\r\n          .multiply(bigInt(x).modPow(1, p))\r\n          .modPow(1, p)\r\n          .toString()\r\n      );\r\n  }, [elGamalType]);\r\n  const [IsValid, setIsValid] = useState(false);\r\n  const setValue = (label?: any) => (value: any) => {\r\n    setstate({ ...elGamalType, [label]: value });\r\n    setIsValid(false);\r\n  };\r\n  const demo = () => {\r\n    setstate({\r\n      p: \"72123325254581672626176125162734766156045554514105133573263758251347324533769\",\r\n      x: \"2035\",\r\n      k: \"1523\",\r\n      β: \"6143220919135760503775743288903283414314504438266328834270291138543721246536\",\r\n      α: \"2\",\r\n    });\r\n    setIsValid(true);\r\n  };\r\n  useEffect(() => {\r\n    demo();\r\n  }, []);\r\n  const start = () => {\r\n    if (\r\n      elGamalType.x &&\r\n      elGamalType.x != \"\" &&\r\n      elGamalType.p &&\r\n      elGamalType.p != \"\" &&\r\n      elGamalType.β &&\r\n      elGamalType.β != \"\" &&\r\n      elGamalType.α &&\r\n      elGamalType.α != \"\" &&\r\n      elGamalType.k &&\r\n      elGamalType.k != \"\"\r\n    ) {\r\n      setIsValid(true);\r\n    } else {\r\n      setIsValid(false);\r\n    }\r\n  };\r\n\r\n  const reNew = () => {\r\n    setstate({} as ElGamalType);\r\n    setIsValid(false);\r\n  };\r\n  const inputValues = [\r\n    {\r\n      label: \"p\",\r\n      onChange: setValue(\"p\"),\r\n      placeholder: \"Nhập số nguyên tố p\",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"x\",\r\n      onChange: setValue(\"x\"),\r\n      placeholder: \"Nhập bản rõ x ( 0 < x < p - 1) \",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"α\",\r\n      onChange: setValue(\"α\"),\r\n      placeholder: \"Nhập số α\",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"β\",\r\n      onChange: setValue(\"β\"),\r\n      placeholder: \"Nhập số β\",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"k\",\r\n      onChange: setValue(\"k\"),\r\n      placeholder: \"Nhập số k\",\r\n      type: \"number\",\r\n    },\r\n  ] as InputItem[];\r\n  return (\r\n    <div className=\"ElGamal\">\r\n      <div className=\"input box\">\r\n        <div className=\"input-rsa \">\r\n          {inputValues.map((input, index) => (\r\n            <InputContainer\r\n              {...input}\r\n              key={index}\r\n              value={getValue(input.label as any)}\r\n            />\r\n          ))}\r\n          <div className=\"footer-input text-center\">\r\n            <div className=\"btn-options\">\r\n              <Button variant=\"outlined\" onClick={reNew}>\r\n                Tạo mới\r\n              </Button>\r\n            </div>\r\n            <div className=\"btn-options\" onClick={start}>\r\n              <Button variant=\"outlined\" color=\"primary\">\r\n                Mã hóa\r\n              </Button>\r\n            </div>\r\n            <div className=\"btn-options\">\r\n              <Button variant=\"outlined\" color=\"primary\" onClick={demo}>\r\n                Demo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {IsValid && (\r\n        <>\r\n          <div className=\"input box\">\r\n            <div className=\"genarate-key-rsa\">\r\n              <h4> Mã hóa</h4>\r\n              <Divider />\r\n              <div className=\"item\">\r\n                <div className=\"label\">\r\n                  <TemplateKatex element={`$γ = α^k \\\\pmod{p} =  $`} />\r\n                  <TemplateKatex element={`$${elGamalType.α}  $`} />\r\n                  <TemplateKatex element={`$^{${elGamalType.k}}   $`} />\r\n                  <TemplateKatex element={`$\\\\pmod {${elGamalType.p}} =  $`} />\r\n                  <TemplateKatex element={`$ ${gamma}  $`} />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"item\">\r\n                <div className=\"label text-bold\">\r\n                  <TemplateKatex element={`$δ = x * β^{k} \\\\pmod p =$`} />\r\n                  <TemplateKatex element={`$ ${elGamalType.x} $`} />\r\n                  <TemplateKatex element={`$* ${elGamalType.β} $`} />\r\n                  <TemplateKatex element={`$^ {${elGamalType.k}} $`} />\r\n                  <TemplateKatex element={`$\\\\pmod {${elGamalType.p}} $`} />\r\n                  <TemplateKatex element={`$= ${delta}$`} />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"item\">\r\n                <div className=\"label text-bold\">\r\n                  <TemplateKatex\r\n                    element={`$ \\\\implies (γ,δ) = (${gamma}$ , $${delta})  $`}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CriptoElGamal;\r\n","import { Button, Divider } from \"@material-ui/core\";\r\nimport bigInt from \"big-integer\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { TemplateKatex } from \"../../../containers/markdown\";\r\nimport { mod } from \"../../../utils/gcd\";\r\nimport InputContainer from \"../../form-input/inputContainer\";\r\nimport InputElGamal, { InputItem } from \"../buildCrypto/input\";\r\n\r\nimport \"./style.scss\";\r\nexport interface ElGamalType {\r\n  x?: any;\r\n  p?: any;\r\n  k?: any;\r\n  a?: any;\r\n  α?: any;\r\n}\r\n\r\nconst SignElGamal = () => {\r\n  const [elGamalType, setstate] = useState({} as ElGamalType);\r\n\r\n  const getValue = (label: \"x\" | \"p\" | \"k\" | \"a\" | \"α\") => {\r\n    return elGamalType[label];\r\n  };\r\n  const [beta, setBeta] = useState(\"\");\r\n  const [gamma, setGamma] = useState(\"\");\r\n  const [delta, setDelta] = useState(\"\");\r\n  const [IsValid, setIsValid] = useState(false);\r\n  const setValue = (label?: any) => (value: any) => {\r\n    setstate({ ...elGamalType, [label]: value });\r\n    setIsValid(false);\r\n  };\r\n  useEffect(() => {\r\n    const { α, a, p, k } = elGamalType;\r\n    if (α && a && p && k) {\r\n      try {\r\n        setBeta(bigInt(α).modPow(bigInt(a), bigInt(p)).toString());\r\n        setGamma(bigInt(α).modPow(bigInt(k), bigInt(p)).toString());\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  }, [elGamalType]);\r\n  useEffect(() => {\r\n    const { α, a, p, k, x } = elGamalType;\r\n    if (α && a && p && k) {\r\n      try {\r\n        setDelta(\r\n          bigInt(x)\r\n            .minus(bigInt(a).multiply(bigInt(gamma)))\r\n            .multiply(bigInt(k).modInv(bigInt(p).minus(1)))\r\n            .mod(bigInt(p).minus(1))\r\n            .toString()\r\n        );\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  }, [gamma, elGamalType]);\r\n  const demo = () => {\r\n    setstate({\r\n      p: \"72123325254581672626176125162734766156045554514105133573263758251347324533769\",\r\n      x: \"2035\",\r\n      k: \"1523\",\r\n      a: \"1751\",\r\n      α: \"2\",\r\n    });\r\n    setIsValid(true);\r\n  };\r\n  const start = () => {\r\n    if (\r\n      elGamalType.x &&\r\n      elGamalType.x != \"\" &&\r\n      elGamalType.p &&\r\n      elGamalType.p != \"\" &&\r\n      elGamalType.a &&\r\n      elGamalType.a != \"\" &&\r\n      elGamalType.α &&\r\n      elGamalType.α != \"\" &&\r\n      elGamalType.k &&\r\n      elGamalType.k != \"\"\r\n    ) {\r\n      setIsValid(true);\r\n    } else {\r\n      setIsValid(false);\r\n    }\r\n  };\r\n\r\n  const reNew = () => {\r\n    setstate({} as ElGamalType);\r\n    setIsValid(false);\r\n  };\r\n  useEffect(() => {\r\n    demo();\r\n  }, []);\r\n  const inputValues = [\r\n    {\r\n      label: \"p\",\r\n      onChange: setValue(\"p\"),\r\n      placeholder: \"Nhập số nguyên tố p (độ dài khoàng 256 bits\",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"x\",\r\n      onChange: setValue(\"x\"),\r\n      placeholder: \"Nhập bản rõ x ( 0 < x < p - 1) \",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"α\",\r\n      onChange: setValue(\"α\"),\r\n      placeholder: \"Nhập số α\",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"a\",\r\n      onChange: setValue(\"a\"),\r\n      placeholder: \"Nhập số a\",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"k\",\r\n      onChange: setValue(\"k\"),\r\n      placeholder: \"Nhập số k\",\r\n      type: \"number\",\r\n    },\r\n  ] as InputItem[];\r\n  return (\r\n    <div className=\"ElGamal\">\r\n      <div className=\"input box\">\r\n        <div className=\"input-rsa \">\r\n          {inputValues.map((input, index) => (\r\n            <InputContainer\r\n              {...input}\r\n              key={index}\r\n              value={getValue(input.label as any)}\r\n            />\r\n          ))}\r\n          <div className=\"footer-input text-center\">\r\n            <div className=\"btn-options\">\r\n              <Button variant=\"outlined\" onClick={reNew}>\r\n                Tạo mới\r\n              </Button>\r\n            </div>\r\n            <div className=\"btn-options\" onClick={start}>\r\n              <Button variant=\"outlined\" color=\"primary\">\r\n                Ký\r\n              </Button>\r\n            </div>\r\n            <div className=\"btn-options\" onClick={demo}>\r\n              <Button variant=\"outlined\" color=\"primary\">\r\n                Demo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {IsValid && (\r\n        <>\r\n          <div className=\"box\">\r\n            <>\r\n              <h4> Sinh khóa</h4>\r\n              <div className=\"genarate-key-rsa\">\r\n                <Divider />\r\n                <div className=\"item\">\r\n                  <div className=\"label text-bold\">\r\n                    <TemplateKatex\r\n                      element={\"$\\\\beta = \\\\alpha^{a} \\\\pmod{p} : $\"}\r\n                    />\r\n                  </div>\r\n                  <div className=\"value\">{beta}</div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"item\">\r\n                  <div className=\"label text-bold\">\r\n                    <TemplateKatex\r\n                      element={`$ K' = (a) = (${elGamalType.a}) $`}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"item\">\r\n                  <div className=\"label text-bold\">\r\n                    <TemplateKatex\r\n                      element={`$ K'' = (p, \\\\alpha, \\\\beta) : $`}\r\n                    />\r\n                  </div>\r\n                  <div className=\"value\">\r\n                    {`(${elGamalType.p} , ${elGamalType.α} , ${beta})`}\r\n                  </div>\r\n                </div>\r\n\r\n                <Divider />\r\n              </div>\r\n            </>\r\n          </div>\r\n          <div className=\"input box\">\r\n            <div className=\"genarate-key-rsa\">\r\n              <h4> Ký trên bản rõ x = {elGamalType.x}</h4>\r\n              <Divider />\r\n              <div className=\"item\">\r\n                <div className=\"label\">\r\n                  <TemplateKatex\r\n                    element={`$\\\\gamma = \\\\alpha^{k} \\\\pmod{m} :  $`}\r\n                  />\r\n                </div>{\" \"}\r\n                <div className=\"value\">{gamma}</div>\r\n              </div>\r\n              <Divider />\r\n              <div className=\"item\">\r\n                <div className=\"label\">\r\n                  <TemplateKatex\r\n                    element={`$\\\\delta = (x - a*\\\\gamma) * k ^ {-1} \\\\pmod{(p - 1)} :  $`}\r\n                  />\r\n                </div>\r\n                <div className=\"value\">{delta}</div>\r\n              </div>\r\n              <Divider />\r\n              <div className=\"item\">\r\n                <div className=\"label\">\r\n                  <TemplateKatex\r\n                    element={`$(s_1, s_2) = (\\\\gamma, \\\\delta) :  $`}\r\n                  />\r\n                </div>\r\n                <div className=\"value\">{`(${gamma} , ${delta})`}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignElGamal;\r\n","import { Button, Divider } from \"@material-ui/core\";\r\nimport bigInt from \"big-integer\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { TemplateKatex } from \"../../../containers/markdown\";\r\n\r\nimport InputContainer from \"../../form-input/inputContainer\";\r\nimport EncodeElGamal from \"../buildCrypto/encode\";\r\nimport InputElGamal, { InputItem } from \"../buildCrypto/input\";\r\n\r\nimport \"./style.scss\";\r\nexport interface ElGamalType {\r\n  x?: any;\r\n  p?: any;\r\n  s1?: any;\r\n  s2?: any;\r\n\r\n  α?: any;\r\n  β?: any;\r\n}\r\n\r\nconst CheckSignElGamal = () => {\r\n  const [elGamalType, setstate] = useState({} as ElGamalType);\r\n  const getValue = (label: \"x\" | \"p\" | \"s1\" | \"s2\" | \"α\" | \"β\") => {\r\n    return elGamalType[label];\r\n  };\r\n  const [IsValid, setIsValid] = useState(false);\r\n  const setValue = (label?: any) => (value: any) => {\r\n    setstate({ ...elGamalType, [label]: value });\r\n    setIsValid(false);\r\n  };\r\n  const [VT, setVT] = useState<any>();\r\n  const [VP, setVP] = useState<any>();\r\n  useEffect(() => {\r\n    const { x, p, s1, s2, α, β } = elGamalType;\r\n    if (!(β && p && s1 && s2)) {\r\n      return;\r\n    }\r\n    try {\r\n      setVT(\r\n        bigInt(β)\r\n          .modPow(s1, p)\r\n          .multiply(bigInt(s1).modPow(s2, p))\r\n          .mod(p)\r\n          .toString()\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    if (!(α && p && x)) {\r\n      return;\r\n    }\r\n    try {\r\n      setVP(bigInt(α).modPow(x, p).toString());\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [elGamalType]);\r\n  const demo = () => {\r\n    setstate({\r\n      p: \"72123325254581672626176125162734766156045554514105133573263758251347324533769\",\r\n      x: \"2035\",\r\n      s1: \"23900119770798293279495240643205253538760682122808343466106391015625147569941\",\r\n      s2: \"-70903610621877350840840231871621916947776577732417476622347443850850380822344\",\r\n      α: \"2\",\r\n      β: \"6143220919135760503775743288903283414314504438266328834270291138543721246536\",\r\n    });\r\n    setIsValid(true);\r\n  };\r\n  useEffect(() => {\r\n    demo();\r\n  }, []);\r\n  const inputValues = [\r\n    {\r\n      label: \"p\",\r\n      onChange: setValue(\"p\"),\r\n      placeholder: \"Nhập p\",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"x\",\r\n      onChange: setValue(\"x\"),\r\n      placeholder: \"Nhập bản rõ x (0 < x < p) \",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"α\",\r\n      onChange: setValue(\"α\"),\r\n      placeholder: \"Nhập α\",\r\n      type: \"number\",\r\n    },\r\n\r\n    {\r\n      label: \"β\",\r\n      onChange: setValue(\"β\"),\r\n      placeholder: \"Nhập β\",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"s1\",\r\n      onChange: setValue(\"s1\"),\r\n      placeholder: \"Nhập chữ ký s1\",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"s2\",\r\n      onChange: setValue(\"s2\"),\r\n      placeholder: \"Nhập chữ ký s2\",\r\n      type: \"number\",\r\n    },\r\n  ] as InputItem[];\r\n  const start = () => {\r\n    if (\r\n      elGamalType.x &&\r\n      elGamalType.x != \"\" &&\r\n      elGamalType.p &&\r\n      elGamalType.p != \"\" &&\r\n      elGamalType.β &&\r\n      elGamalType.β != \"\" &&\r\n      elGamalType.α &&\r\n      elGamalType.α != \"\" &&\r\n      elGamalType.s1 &&\r\n      elGamalType.s1 != \"\" &&\r\n      elGamalType.s2 &&\r\n      elGamalType.s2 != \"\"\r\n    ) {\r\n      setIsValid(true);\r\n    } else {\r\n      setIsValid(false);\r\n    }\r\n  };\r\n\r\n  const reNew = () => {\r\n    setstate({} as ElGamalType);\r\n    setIsValid(false);\r\n  };\r\n  return (\r\n    <div className=\"ElGamal\">\r\n      <div className=\"input box\">\r\n        <div className=\"input-ElGamal \">\r\n          {inputValues.map((input, index) => (\r\n            <InputContainer\r\n              {...input}\r\n              key={index}\r\n              value={getValue(input.label as any)}\r\n            />\r\n          ))}\r\n          <div className=\"footer-input text-center\">\r\n            <div className=\"btn-options\">\r\n              <Button variant=\"outlined\" onClick={reNew}>\r\n                Tạo mới\r\n              </Button>\r\n            </div>\r\n            <div className=\"btn-options\">\r\n              <Button variant=\"outlined\" color=\"primary\" onClick={start}>\r\n                Kiểm tra\r\n              </Button>\r\n            </div>\r\n            <div className=\"btn-options\">\r\n              <Button variant=\"outlined\" color=\"primary\" onClick={demo}>\r\n                Demo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {IsValid && (\r\n        <>\r\n          <div className=\"input box\">\r\n            <div className=\"encode-ElGamal\">\r\n              <h4>Kiểm tra chữ ký</h4> <Divider />\r\n              <div className=\"item\">\r\n                <div className=\"label text-bold\">\r\n                  <TemplateKatex\r\n                    element={`$(\\\\beta ^ {s_1}) * (s_1 ^ {s_2}) \\\\pmod p $`}\r\n                  />\r\n                  <TemplateKatex element={`$= ${elGamalType.β} $`} />\r\n\r\n                  <TemplateKatex element={`$^{${elGamalType.s1} } $`} />\r\n                  <TemplateKatex element={`$ * ${elGamalType.s1}$`} />\r\n\r\n                  <TemplateKatex element={`$^{${elGamalType.s2} } $`} />\r\n                  <TemplateKatex element={`$\\\\pmod {${elGamalType.p} } $`} />\r\n                  <TemplateKatex element={`$= ${VT}$`} />\r\n                </div>\r\n              </div>\r\n              <div className=\"item\">\r\n                <div className=\"label text-bold\">\r\n                  <TemplateKatex\r\n                    element={`$\\\\alpha ^ {x} \\\\pmod p = ${elGamalType.α}^{${elGamalType.x}} \\\\pmod {${elGamalType.p}} = ${VP}$`}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"item\">\r\n                <div className=\"label result\">\r\n                  <TemplateKatex element={\"$\\\\iff$\"} />\r\n                  {VT === VP ? \"Chữ ký hợp lệ\" : \"Chữ ký không hợp lệ\"}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckSignElGamal;\r\n","import React from \"react\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport TimerIcon from \"@material-ui/icons/Timer\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\n\r\nimport WatchLaterIcon from \"@material-ui/icons/WatchLater\";\r\nimport { TabsRender } from \"../../../../components/common/Tab\";\r\nimport { LabelIcon } from \"../../../../components/common/icon\";\r\nimport BuildCriptoElGamal from \"../../../../components/ElGamal/buildCrypto\";\r\nimport CriptoElGamal from \"../../../../components/ElGamal/crypto\";\r\nimport SignElGamal from \"../../../../components/ElGamal/sign\";\r\nimport CheckSignElGamal from \"../../../../components/ElGamal/checkSign\";\r\n\r\ninterface Props {}\r\nconst apartmentTab = [\r\n  {\r\n    label: <LabelIcon label=\"Xây dựng hệ mật\" icon={<CheckCircleIcon />} />,\r\n\r\n    icon: CheckCircleIcon,\r\n    component: <BuildCriptoElGamal />,\r\n  },\r\n  {\r\n    label: <LabelIcon label=\"Mã hóa Elgmal\" icon={<TimerIcon />} />,\r\n\r\n    icon: TimerIcon,\r\n    component: <CriptoElGamal />,\r\n  },\r\n  {\r\n    label: <LabelIcon label=\"Ký văn bản\" icon={<FavoriteIcon />} />,\r\n\r\n    icon: FavoriteIcon,\r\n    component: <SignElGamal />,\r\n  },\r\n  {\r\n    label: <LabelIcon label=\"Kiểm tra chữ ký\" icon={<FavoriteIcon />} />,\r\n    icon: FavoriteIcon,\r\n    component: <CheckSignElGamal />,\r\n  },\r\n];\r\nexport const ElGamal = (props: Props) => {\r\n  return (\r\n    <>\r\n      <TabsRender input={apartmentTab} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ElGamal;\r\n","import { Divider } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { TemplateKatex } from \"../../../../containers/markdown\";\r\n\r\nimport bigInt from \"big-integer\";\r\nimport \"./style.scss\";\r\ninterface PropDecode {\r\n  x?: any;\r\n  y?: any;\r\n  n?: any;\r\n  d?: any;\r\n}\r\nconst DeCodeRSA = (props: PropDecode) => {\r\n  const [decode, setDecode] = useState(\"\");\r\n  useEffect(() => {\r\n    const { x, y, n, d } = props;\r\n    if (y && n && d) {\r\n      try {\r\n        setDecode(bigInt(y).modPow(d, n).toString());\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  }, [props]);\r\n  return (\r\n    <>\r\n      <h4>Giải mã</h4>\r\n      <div className=\"encode-rsa\">\r\n        <Divider />\r\n        <div className=\"item\">\r\n          <div className=\"label text-bold\">\r\n            <TemplateKatex element={\"$x = y^{d} \\\\pmod{n} =  $\"} /> {decode}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeCodeRSA;\r\n","import { Divider } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { TemplateKatex } from \"../../../../containers/markdown\";\r\nimport InputContainer from \"../../../form-input/inputContainer\";\r\nimport \"./style.scss\";\r\ninterface EncodeInput {\r\n  x?: any;\r\n  y?: any;\r\n}\r\nconst EncodeRSA = (props: EncodeInput) => {\r\n  const { x, y } = props;\r\n  return (\r\n    <>\r\n      <h4>Mã hóa bản rõ x = {x || 0}</h4>\r\n      <div className=\"encode-rsa\">\r\n        <Divider />\r\n        <div className=\"item\">\r\n          <div className=\"label text-bold\">\r\n            <TemplateKatex element={\"$y = e^{-1} \\\\pmod{\\\\phi(n)} : $\"} />\r\n          </div>\r\n          <div className=\"value\">{y}</div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EncodeRSA;\r\n","import { Divider } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { TemplateKatex } from \"../../../../containers/markdown\";\r\nimport { TableConvert, TableData } from \"../../../common/table\";\r\nimport \"./style.scss\";\r\ninterface Props {\r\n  n?: any;\r\n  m?: any;\r\n  e?: any;\r\n  d?: any;\r\n}\r\n\r\nconst GenarateKeyRSA = (props: Props) => {\r\n  const { n, m, e, d } = props;\r\n  const getN = () => {};\r\n  return (\r\n    <>\r\n      <h4> Sinh khóa</h4>\r\n      <div className=\"genarate-key-rsa\">\r\n        <Divider />\r\n        <div className=\"item\">\r\n          <div className=\"label text-bold\">\r\n            <TemplateKatex element={\"$n = p * q : $\"} />\r\n          </div>\r\n          <div className=\"value\">{n || \"\"}</div>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"item\">\r\n          <div className=\"label text-bold\">\r\n            <TemplateKatex element={\"$\\\\phi(n)  = (p - 1) * ( q - 1) : $\"} />\r\n          </div>\r\n\r\n          <div className=\"value\">{m}</div>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"item\">\r\n          <div className=\"label text-bold\">\r\n            <TemplateKatex element={\"$d = e^{-1} \\\\pmod{m}:  $\"} />\r\n          </div>\r\n          <div className=\"value\">{d || 0}</div>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"item\">\r\n          <div className=\"label text-bold\">\r\n            <TemplateKatex element={\"$  (n,e) : $\"} />\r\n          </div>\r\n          <div className=\"value\">\r\n            ({e || 0},{n})\r\n          </div>\r\n        </div>\r\n\r\n        <Divider />\r\n        <div className=\"item\">\r\n          <div className=\"label text-bold\">\r\n            <TemplateKatex element={\"$  (d,n) : $\"} />\r\n          </div>\r\n          <div className=\"value\">\r\n            ({d || 0},{n})\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GenarateKeyRSA;\r\n","import bigInt from \"big-integer\";\r\n\r\n// euclid algorithm\r\nexport function gcd(a: any, b: any) {\r\n  a = a || 0;\r\n  b = b || 0;\r\n  if (a < b) {\r\n    var tmp = a;\r\n    a = b;\r\n    b = tmp;\r\n  }\r\n\r\n  while (b !== 0) {\r\n    var r = a % b;\r\n    a = b;\r\n    b = r;\r\n  }\r\n  return a;\r\n}\r\n\r\nexport function egcd(a: any, b: any) {\r\n  return bigInt(a).modInv(bigInt(b));\r\n}\r\n\r\nexport function mod(x: number, y: number) {\r\n  return x - y * Math.floor(x / y);\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport InputContainer from \"../../form-input/inputContainer\";\r\nimport DeCodeRSA from \"./decode\";\r\n\r\nimport EncodeRSA from \"./encode\";\r\nimport GenarateKeyRSA from \"./genarateKey\";\r\nimport InputRSA, { InputItem, RSAProps } from \"./input\";\r\nimport { BigNumber } from \"bignumber.js\";\r\nimport bigInt from \"big-integer\";\r\nimport \"./style.scss\";\r\nimport { validate } from \"uuid\";\r\nimport { gcd } from \"../../../utils/gcd\";\r\nexport interface RSAType {\r\n  x?: any;\r\n  e?: any;\r\n  p?: any;\r\n  q?: any;\r\n}\r\n\r\nconst BuildCriptoRSA = () => {\r\n  const [rsaType, setstate] = useState<RSAType>({\r\n    x: \"\",\r\n    e: \"\",\r\n    p: \"\",\r\n    q: \"\",\r\n  } as RSAType);\r\n  const [n, setN] = useState<any>(\"\");\r\n  const [m, setM] = useState(\"\");\r\n  const [d, setD] = useState(\"\");\r\n  const [y, setY] = useState(\"\");\r\n  const [_gcd, setGCD] = useState(1);\r\n  const [IsValid, setIsValid] = useState(false);\r\n\r\n  const reNew = () => {\r\n    setstate({} as RSAType);\r\n    setIsValid(false);\r\n  };\r\n  const demo = () => {\r\n    setstate({\r\n      x: \"123412412456789\",\r\n      p: \"186062864985921495060024628097672313218174457244746265290277413813402544027127\",\r\n      q: \"211258915725672981641571789672009335406057206489563616119756939542322825326683\",\r\n      e: \"65537\",\r\n    });\r\n    setIsValid(true);\r\n  };\r\n  useEffect(() => {\r\n    console.log(IsValid);\r\n  }, [IsValid]);\r\n  useEffect(() => {\r\n    demo();\r\n  }, []);\r\n\r\n  const start = () => {\r\n    if (\r\n      _gcd === 1 &&\r\n      rsaType.x &&\r\n      rsaType.x != \"\" &&\r\n      rsaType.p &&\r\n      rsaType.p != \"\" &&\r\n      rsaType.e &&\r\n      rsaType.e != \"\" &&\r\n      rsaType.q &&\r\n      rsaType.q != \"\"\r\n    ) {\r\n      setIsValid(true);\r\n    } else {\r\n      setIsValid(false);\r\n    }\r\n  };\r\n  const getValue = (label: \"x\" | \"q\" | \"e\" | \"p\") => {\r\n    return rsaType[label];\r\n  };\r\n  const setValue = (label?: any) => (value: any) => {\r\n    setIsValid(false);\r\n    setstate({ ...rsaType, [label]: value });\r\n  };\r\n  const inputValues = [\r\n    {\r\n      label: \"p\",\r\n      onChange: setValue(\"p\"),\r\n      placeholder: \"Nhập số nguyên tố p\",\r\n      type: \"number\",\r\n      validator: () => {},\r\n    },\r\n    {\r\n      label: \"x\",\r\n      onChange: setValue(\"x\"),\r\n      placeholder: \"Nhập bản rõ x (0 < x < p)\",\r\n      type: \"number\",\r\n    },\r\n\r\n    {\r\n      label: \"q\",\r\n      onChange: setValue(\"q\"),\r\n      placeholder: \"Nhập số nguyên tố q\",\r\n      type: \"number\",\r\n      validator: () => {},\r\n    },\r\n    {\r\n      label: \"e\",\r\n      onChange: setValue(\"e\"),\r\n      placeholder: \"Nhập số e sao cho gcd(Φ(n), e) ≡ 1 \",\r\n      type: \"number\",\r\n      validator: (value: any) => {\r\n        setGCD(gcd(m, value));\r\n        return (\r\n          value &&\r\n          bigInt(gcd(m, value)).mod(rsaType.p).equals(bigInt(1).mod(rsaType.p))\r\n        );\r\n      },\r\n      message: \"Không đồng dư với 1\",\r\n    },\r\n  ] as InputItem[];\r\n  useEffect(() => {\r\n    const { p, q, e } = rsaType;\r\n    if (p && q) {\r\n      setN(new BigNumber(p).multipliedBy(q || 0).toFixed());\r\n      setM(\r\n        new BigNumber(new BigNumber(p || 0).minus(1))\r\n          .multipliedBy(new BigNumber(q || 0).minus(1))\r\n          .toFixed()\r\n      );\r\n    }\r\n  }, [rsaType]);\r\n  useEffect(() => {\r\n    if (rsaType.e > 1 && m) {\r\n      try {\r\n        setD(bigInt(rsaType.e).modInv(bigInt(m)).toString());\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  }, [m, rsaType]);\r\n  useEffect(() => {\r\n    const { x, e } = rsaType;\r\n    if (e && n != 0) {\r\n      setY(bigInt(x).modPow(e, n).toString());\r\n    }\r\n  }, [n, rsaType]);\r\n\r\n  return (\r\n    <div className=\"rsa\">\r\n      <div className=\"input box\">\r\n        <div className=\"input-rsa \">\r\n          {inputValues.map((input, index) => (\r\n            <InputContainer\r\n              {...input}\r\n              key={index}\r\n              value={getValue(input.label as any)}\r\n            />\r\n          ))}\r\n          <div className=\"footer-input text-center\">\r\n            <div className=\"btn-options\">\r\n              <Button variant=\"outlined\" onClick={reNew}>\r\n                Tạo mới\r\n              </Button>\r\n            </div>\r\n            <div className=\"btn-options\">\r\n              <Button variant=\"outlined\" color=\"primary\" onClick={start}>\r\n                Tạo hệ mật\r\n              </Button>\r\n            </div>\r\n            <div className=\"btn-options\">\r\n              <Button variant=\"outlined\" color=\"primary\" onClick={demo}>\r\n                Demo\r\n              </Button>\r\n            </div>\r\n            <div className=\"btn-options\">\r\n              <a\r\n                href=\"https://asecuritysite.com/encryption/nprimes?y=256\"\r\n                target=\"_blank\"\r\n              >\r\n                <Button variant=\"outlined\" color=\"secondary\">\r\n                  Tạo P,Q\r\n                </Button>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {IsValid && (\r\n        <>\r\n          <div className=\"input box\">\r\n            <GenarateKeyRSA {...{ ...rsaType, m, n, d }} />\r\n          </div>\r\n          <div className=\"input box\">\r\n            <EncodeRSA {...{ ...rsaType, y }} />\r\n          </div>\r\n          <div className=\"input box\">\r\n            <DeCodeRSA {...{ ...rsaType, y, n, d }} />\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildCriptoRSA;\r\n","import { Button, Divider } from \"@material-ui/core\";\r\nimport bigInt from \"big-integer\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { TemplateKatex } from \"../../../containers/markdown\";\r\nimport { egcd } from \"../../../utils/gcd\";\r\n\r\nimport InputContainer from \"../../form-input/inputContainer\";\r\nimport EncodeRSA from \"../buildCrypto/encode\";\r\nimport InputRSA, { InputItem } from \"../buildCrypto/input\";\r\n\r\nimport \"./style.scss\";\r\nexport interface RSAType {\r\n  x?: any;\r\n  q?: any;\r\n  p?: any;\r\n  e?: any;\r\n}\r\n\r\nconst SignRSA = () => {\r\n  const [rsaType, setstate] = useState<RSAType>({\r\n    x: \"\",\r\n    q: \"\",\r\n    p: \"\",\r\n    e: \"\",\r\n  } as RSAType);\r\n  const [s, setS] = useState(\"\");\r\n  const [phiN, setPhiN] = useState(\"\");\r\n  const [n, setN] = useState(\"\");\r\n  const [dA, setDA] = useState(\"\");\r\n  const getValue = (label: \"x\" | \"p\" | \"q\") => {\r\n    return rsaType[label];\r\n  };\r\n  const [IsValid, setIsValid] = useState(false);\r\n  const setValue = (label?: any) => (value: any) => {\r\n    setstate({ ...rsaType, [label]: value });\r\n    setIsValid(false);\r\n  };\r\n  useEffect(() => {\r\n    const { p, q } = rsaType;\r\n    if (p && q) {\r\n      try {\r\n        setPhiN(bigInt(p).minus(1).multiply(bigInt(q).minus(1)).toString());\r\n        setN(bigInt(p).multiply(bigInt(q)).toString());\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  }, [rsaType]);\r\n  useEffect(() => {\r\n    const { e } = rsaType;\r\n    if (e && phiN) {\r\n      try {\r\n        let egc = egcd(e, phiN).toString();\r\n\r\n        setDA(egc);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  }, [rsaType, phiN]);\r\n  useEffect(() => {\r\n    demo();\r\n  }, []);\r\n  useEffect(() => {\r\n    const { e, x } = rsaType;\r\n    if (e && n && x) {\r\n      try {\r\n        setS(bigInt(x).modPow(bigInt(e), bigInt(n)).toString());\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  }, [rsaType, n]);\r\n  const reNew = () => {\r\n    setstate({} as RSAType);\r\n    setIsValid(false);\r\n  };\r\n\r\n  const start = () => {\r\n    if (\r\n      rsaType.x &&\r\n      rsaType.x != \"\" &&\r\n      rsaType.q &&\r\n      rsaType.q != \"\" &&\r\n      rsaType.p &&\r\n      rsaType.p != \"\" &&\r\n      rsaType.e &&\r\n      rsaType.e != \"\"\r\n    ) {\r\n      setIsValid(true);\r\n    } else {\r\n      setIsValid(false);\r\n    }\r\n  };\r\n  const demo = () => {\r\n    setstate({\r\n      x: \"123\",\r\n      e: \"2753\",\r\n      q: \"186062864985921495060024628097672313218174457244746265290277413813402544027127\",\r\n      p: \"211258915725672981641571789672009335406057206489563616119756939542322825326683\",\r\n    });\r\n    setIsValid(true);\r\n  };\r\n  useEffect(() => {\r\n    // const { x, d, n } = rsaType;\r\n    // if (x > 0 && d > 0 && n > 0) {\r\n    //   setS(bigInt(x).modPow(d, n).toString());\r\n    // }\r\n  }, [rsaType]);\r\n  const inputValues = [\r\n    {\r\n      label: \"x\",\r\n      onChange: setValue(\"x\"),\r\n      placeholder: \"Nhập bản rõ x\",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"p\",\r\n      onChange: setValue(\"d\"),\r\n      placeholder: \"Nhập số nguyên tố p\",\r\n      type: \"number\",\r\n    },\r\n\r\n    {\r\n      label: \"q\",\r\n      onChange: setValue(\"n\"),\r\n      placeholder: \"Nhập số nguyên tố q\",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"e\",\r\n      onChange: setValue(\"e\"),\r\n      placeholder: \"Nhập khóa ký e\",\r\n      type: \"number\",\r\n    },\r\n  ] as InputItem[];\r\n\r\n  return (\r\n    <div className=\"rsa\">\r\n      <div className=\"input box\">\r\n        <div className=\"input-rsa \">\r\n          {inputValues.map((input, index) => (\r\n            <InputContainer\r\n              {...input}\r\n              key={index}\r\n              value={getValue(input.label as any)}\r\n            />\r\n          ))}\r\n          <div className=\"footer-input text-center\">\r\n            <div className=\"btn-options\" onClick={reNew}>\r\n              <Button variant=\"outlined\">Tạo mới</Button>\r\n            </div>\r\n            <div className=\"btn-options\">\r\n              <Button variant=\"outlined\" color=\"primary\" onClick={start}>\r\n                Tạo chữ ký\r\n              </Button>\r\n            </div>\r\n            <div className=\"btn-options\">\r\n              <Button variant=\"outlined\" color=\"primary\" onClick={demo}>\r\n                Demo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {IsValid && (\r\n        <>\r\n          <div className=\"box\">\r\n            <>\r\n              <h4> Sinh khóa</h4>\r\n              <div className=\"genarate-key-rsa\">\r\n                <Divider />\r\n                <div className=\"item\">\r\n                  <div className=\"label text-bold\">\r\n                    <TemplateKatex element={\"$n = p * q : $\"} />\r\n                  </div>\r\n                  <div className=\"value\">{n || \"\"}</div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"item\">\r\n                  <div className=\"label text-bold\">\r\n                    <TemplateKatex\r\n                      element={\"$\\\\phi{(n)} = (p  -1 ) * (q - 1) : $\"}\r\n                    />\r\n                  </div>\r\n                  <div className=\"value\">{phiN || \"\"}</div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"item\">\r\n                  <div className=\"label text-bold\">\r\n                    <TemplateKatex element={` $(e) = ${rsaType.e} $`} />\r\n                  </div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"item\">\r\n                  <div className=\"label text-bold\">\r\n                    <TemplateKatex element={\"$(n, d_A) : $\"} />\r\n                  </div>\r\n                  <div className=\"value\">{`(${n} , ${dA}) `}</div>\r\n                </div>\r\n              </div>\r\n            </>\r\n          </div>\r\n          <div className=\"input box\">\r\n            <div className=\"encode-rsa\">\r\n              <h4>Ký văn bản x = {rsaType.x}</h4> <Divider />\r\n              <div className=\"item\">\r\n                <div className=\"label text-bold\">\r\n                  <TemplateKatex element={\"$s = x^{e} \\\\pmod{n} : $\"} />\r\n                </div>\r\n                <div className=\"value\">{s}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignRSA;\r\n","import { Button, Divider } from \"@material-ui/core\";\r\nimport bigInt from \"big-integer\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { TemplateKatex } from \"../../../containers/markdown\";\r\n\r\nimport InputContainer from \"../../form-input/inputContainer\";\r\nimport EncodeRSA from \"../buildCrypto/encode\";\r\nimport InputRSA, { InputItem } from \"../buildCrypto/input\";\r\n\r\nimport \"./style.scss\";\r\nexport interface RSAType {\r\n  x?: any;\r\n  d?: any;\r\n  s?: any;\r\n  n?: any;\r\n}\r\n\r\nconst CheckSignRSA = () => {\r\n  const [rsaType, setstate] = useState({\r\n    x: \"\",\r\n    n: \"\",\r\n    d: \"\",\r\n    s: \"\",\r\n  } as RSAType);\r\n  const getValue = (label: \"x\" | \"d\" | \"s\" | \"n\") => {\r\n    return rsaType[label];\r\n  };\r\n  const [decode, setDecode] = useState(\"\");\r\n\r\n  const [IsValid, setIsValid] = useState(false);\r\n  const setValue = (label?: any) => (value: any) => {\r\n    setstate({ ...rsaType, [label]: value });\r\n    setIsValid(false);\r\n  };\r\n  useEffect(() => {\r\n    demo();\r\n  }, []);\r\n  const reNew = () => {\r\n    setstate({} as RSAType);\r\n    setIsValid(false);\r\n  };\r\n  const start = () => {\r\n    if (\r\n      rsaType.x &&\r\n      rsaType.x != \"\" &&\r\n      rsaType.d &&\r\n      rsaType.d != \"\" &&\r\n      rsaType.n &&\r\n      rsaType.n != \"\" &&\r\n      rsaType.s &&\r\n      rsaType.s != \"\"\r\n    ) {\r\n      setIsValid(true);\r\n    } else {\r\n      setIsValid(false);\r\n    }\r\n  };\r\n  const demo = () => {\r\n    setstate({\r\n      x: \"123\",\r\n      d: \"35024027659280588279410289335328959540490525310193563479849697798494905794152069079021098700277236530207868259529042272216295232448183495829096117553367149\",\r\n      s: \"31711825763862161118992654921680949879172173461907529380994591041501909500662071781119806706827276493938418036359399912240974879381641160180718795492112524\",\r\n      n: \"39307439113738059328665522437896708363216639290241695988596093778742957868447460580869616903022658452374663818820843300319038335535649400035174564188929741\",\r\n    });\r\n    setIsValid(true);\r\n  };\r\n  useEffect(() => {\r\n    const { x, d, s, n } = rsaType;\r\n    if (x > 0 && d > 0 && n > 0) {\r\n      setDecode(bigInt(s).modPow(d, n).toString());\r\n    }\r\n  }, [rsaType]);\r\n  const inputValues = [\r\n    {\r\n      label: \"x\",\r\n      onChange: setValue(\"x\"),\r\n      placeholder: \"Nhập bản rõ x\",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"d\",\r\n      onChange: setValue(\"d\"),\r\n      placeholder: \"Nhập số khóa công khai d\",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"s\",\r\n      onChange: setValue(\"s\"),\r\n      placeholder: \"Nhập chữ ký s\",\r\n      type: \"number\",\r\n    },\r\n\r\n    {\r\n      label: \"n\",\r\n      onChange: setValue(\"n\"),\r\n      placeholder: \"Nhập n\",\r\n      type: \"number\",\r\n    },\r\n  ] as InputItem[];\r\n\r\n  return (\r\n    <div className=\"rsa\">\r\n      <div className=\"input box\">\r\n        <div className=\"input-rsa \">\r\n          {inputValues.map((input, index) => (\r\n            <InputContainer\r\n              {...input}\r\n              key={index}\r\n              value={getValue(input.label as any)}\r\n            />\r\n          ))}\r\n          <div className=\"footer-input text-center\">\r\n            <div className=\"btn-options\">\r\n              <Button variant=\"outlined\" onClick={reNew}>\r\n                Tạo mới\r\n              </Button>\r\n            </div>\r\n            <div className=\"btn-options\" onClick={start}>\r\n              <Button variant=\"outlined\" color=\"primary\">\r\n                Kiểm tra\r\n              </Button>\r\n            </div>\r\n            <div className=\"btn-options\" onClick={demo}>\r\n              <Button variant=\"outlined\" color=\"primary\">\r\n                Demo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {IsValid && (\r\n        <div className=\"input box\">\r\n          <div className=\"encode-rsa\">\r\n            <h4>Kiểm tra chữ ký</h4> <Divider />\r\n            <div className=\"item\">\r\n              <div className=\"label text-bold\">\r\n                <TemplateKatex element={`$s^{d_A} \\\\pmod{n} =  ${decode}  $`} />\r\n              </div>\r\n            </div>\r\n            <div className=\"item\">\r\n              <div className=\"label\">\r\n                {bigInt(rsaType.x).mod(bigInt(rsaType.n)).equals(decode) ? (\r\n                  <TemplateKatex\r\n                    element={\"$\\\\Harr x \\\\equiv s^{d_A} \\\\pmod{n} $\"}\r\n                  />\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n            <div className=\"item\">\r\n              <div className=\"label result\">\r\n                <TemplateKatex element={\"$\\\\Harr$\"} />\r\n                {bigInt(rsaType.x).mod(bigInt(rsaType.n)).equals(decode)\r\n                  ? \" Chữ ký hợp lệ\"\r\n                  : \" Chữ ký không hợp lệ\"}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckSignRSA;\r\n","import React from \"react\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport TimerIcon from \"@material-ui/icons/Timer\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\n\r\nimport WatchLaterIcon from \"@material-ui/icons/WatchLater\";\r\nimport { TabsRender } from \"../../../../components/common/Tab\";\r\nimport { LabelIcon } from \"../../../../components/common/icon\";\r\nimport BuildCriptoRSA from \"../../../../components/RSA/buildCrypto\";\r\n\r\nimport SignRSA from \"../../../../components/RSA/signRSA\";\r\nimport CheckSignRSA from \"../../../../components/RSA/checkSignRSA\";\r\n\r\ninterface Props {}\r\nconst apartmentTab = [\r\n  {\r\n    label: <LabelIcon label=\"Xây dựng hệ mật\" icon={<CheckCircleIcon />} />,\r\n    icon: CheckCircleIcon,\r\n    component: <BuildCriptoRSA />,\r\n  },\r\n  {\r\n    label: <LabelIcon label=\"Ký\" icon={<FavoriteIcon />} />,\r\n\r\n    icon: FavoriteIcon,\r\n    component: <SignRSA />,\r\n  },\r\n  {\r\n    label: <LabelIcon label=\"Kiểm tra chữ ký\" icon={<FavoriteIcon />} />,\r\n    icon: FavoriteIcon,\r\n    component: <CheckSignRSA />,\r\n  },\r\n];\r\nexport const RSA = (props: Props) => {\r\n  return (\r\n    <>\r\n      <TabsRender input={apartmentTab} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RSA;\r\n","import bigInt from \"big-integer\";\r\n\r\nexport const getQ = (q: any) => {\r\n  let Q = [];\r\n  for (let i = 1; i <= (q - 1) / 2; i++) {\r\n    //(x^2)modp\r\n    Q.push({\r\n      qValue: bigInt(i).modPow(2, q).toString(),\r\n      y: bigInt(i).toString(),\r\n    });\r\n  }\r\n\r\n  return Q;\r\n};\r\n\r\n// y^2 = x^3 + ax + b mod (r)\r\n// x^3 mod\r\nexport const getPowY = (\r\n  q: any,\r\n  a: number,\r\n  b: number,\r\n  Q: { qValue: string; y: any }[]\r\n) => {\r\n  let Z = [];\r\n  for (let i = 0; i < q; i++) {\r\n    //(x^2)modp\r\n    let powYValue = bigInt(i)\r\n      .modPow(3, q)\r\n      .add(bigInt(i).multiply(a).mod(q))\r\n      .add(bigInt(b).mod(q))\r\n      .mod(q)\r\n      .toString();\r\n\r\n    let inQ = checkInQ(powYValue, Q, q);\r\n\r\n    Z.push({\r\n      powYValue,\r\n      x: i,\r\n      ...inQ,\r\n    });\r\n  }\r\n\r\n  return Z;\r\n};\r\nexport const getPoints = (\r\n  powValue: {\r\n    powYValue?: any;\r\n    x: any;\r\n    y_1?: any;\r\n    y_2?: any;\r\n    inQ?: boolean;\r\n  }[]\r\n) => {\r\n  let result = [] as any[];\r\n  powValue.forEach((value, index) => {\r\n    if (value.inQ) {\r\n      result.push({ x: value.x, y: value.y_1 });\r\n      result.push({ x: value.x, y: value.y_2 });\r\n    }\r\n  });\r\n  return result;\r\n};\r\nconst checkInQ = (value: any, Q: { qValue: string; y: any }[], q: any) => {\r\n  let finds = Q.find((i) => i.qValue.toString() == value.toString());\r\n\r\n  if (finds) {\r\n    let res = {\r\n      inQ: true,\r\n      y_1: finds.y,\r\n      y_2: bigInt(q).minus(bigInt(finds.y)).toString(),\r\n    } as any;\r\n\r\n    return res;\r\n  } else {\r\n    let res = {\r\n      inQ: false,\r\n    } as any;\r\n    return res;\r\n  }\r\n};\r\nexport interface Point {\r\n  x: any;\r\n  y: any;\r\n}\r\nconst isElqual = (point_1: Point, point_2: Point) =>\r\n  point_2.x === point_1.x && point_1.y === point_2.y;\r\nexport const multiplyPoint = (point: Point, k: any, p: any, a: any) => {\r\n  let result = point;\r\n  let i = 1;\r\n  while (i < k) {\r\n    if (checkIndentyPoint(result)) {\r\n      result = point;\r\n    } else {\r\n      result = plusPoint(result, point, a, p);\r\n    }\r\n\r\n    i++;\r\n  }\r\n  return result;\r\n};\r\nexport const plusPoint = (point_1: Point, point_2: Point, a: any, p: any) => {\r\n  let lamda;\r\n  if (checkIndentyPoint(point_1)) {\r\n    return point_2;\r\n  }\r\n  if (checkIndentyPoint(point_2)) {\r\n    return point_1;\r\n  }\r\n  try {\r\n    if (isElqual(point_1, point_2)) {\r\n      let tu_so = bigInt(point_1.x).pow(2).multiply(3).add(a).mod(p);\r\n      if (tu_so.lesser(0)) {\r\n        tu_so = tu_so.add(p);\r\n      }\r\n      let mau_so = bigInt(point_1.y).multiply(2).modInv(p);\r\n      if (mau_so.lesser(0)) {\r\n        mau_so = mau_so.add(p);\r\n      }\r\n\r\n      lamda = bigInt(bigInt(tu_so).multiply(bigInt(mau_so))).mod(p);\r\n      if (lamda.lesser(0)) {\r\n        lamda = lamda.add(p);\r\n      }\r\n    } else {\r\n      if (point_1.x === point_2.x) {\r\n        return { x: null, y: null };\r\n      }\r\n      let tu_so = bigInt(point_2.y).minus(point_1.y).mod(p);\r\n      if (tu_so.lesser(0)) {\r\n        tu_so = tu_so.add(p);\r\n      }\r\n      let mau_so = bigInt(point_2.x).minus(point_1.x).modInv(p);\r\n      if (mau_so.lesser(0)) {\r\n        mau_so = mau_so.add(p);\r\n      }\r\n      lamda = bigInt(bigInt(tu_so).multiply(bigInt(mau_so))).mod(p);\r\n      if (lamda.lesser(0)) {\r\n        lamda = lamda.add(p);\r\n      }\r\n    }\r\n    let x = lamda.pow(2).minus(point_1.x).minus(point_2.x).mod(p);\r\n    if (x.lesser(0)) {\r\n      x = x.add(p);\r\n    }\r\n\r\n    let y = lamda.multiply(bigInt(point_1.x).minus(x)).minus(point_1.y).mod(p);\r\n    if (y.lesser(0)) {\r\n      y = y.add(p);\r\n    }\r\n\r\n    return {\r\n      x: x.toString(),\r\n      y: y.toString(),\r\n    };\r\n  } catch (e) {\r\n    return {\r\n      x: null,\r\n      y: null,\r\n    };\r\n  }\r\n};\r\nconst checkIndentyPoint = (point: Point) =>\r\n  point.x === null && point.y === null;\r\nexport const getK = (point: Point, point_A: Point, p: any, a: any) => {\r\n  if (isElqual(point, point_A)) {\r\n    return 1;\r\n  } else {\r\n    let k = 1;\r\n    let point_temp = point_A;\r\n\r\n    while (k < p && !isElqual(point, point_temp)) {\r\n      k++;\r\n      point_temp = multiplyPoint(point_A, k, p, a);\r\n    }\r\n    return k;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    display: \"block\",\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n    width: \"100%\",\r\n  },\r\n}));\r\ninterface Props {\r\n  data?: { x: any; y: any }[];\r\n  onChange?: (value: any) => void;\r\n  placeHolder?: string;\r\n  label?: string;\r\n  value?: any;\r\n}\r\nexport const SelectInput = (props: Props) => {\r\n  const classes = useStyles();\r\n  const { data, onChange, placeHolder, label, value } = props;\r\n  //   const [age, setAge] = React.useState(\"\");\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleChange = (event: any) => {\r\n    let text = (event.target.value as string).split(\"|\");\r\n\r\n    onChange && onChange({ x: text[0], y: text[1] });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const getLabel = (item: { x: any; y: any }) => `(${item.x},${item.y})`;\r\n  const getValue = (item: { x: any; y: any }) => `${item.x}|${item.y}`;\r\n\r\n  return (\r\n    <div>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-controlled-open-select-label\">{label}</InputLabel>\r\n        <Select\r\n          labelId=\"demo-controlled-open-select-label\"\r\n          id=\"demo-controlled-open-select\"\r\n          open={open}\r\n          onClose={handleClose}\r\n          onOpen={handleOpen}\r\n          value={value ? getValue(value) : \"\"}\r\n          onChange={handleChange}\r\n        >\r\n          {data?.map((item) => (\r\n            <MenuItem value={getValue(item)}>{getLabel(item)}</MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Scatter } from \"react-chartjs-2\";\r\nimport \"./style.scss\";\r\nconst options = {\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        ticks: {\r\n          beginAtZero: true,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nconst ChartElliptic = (props: { data: any }) => {\r\n  // const { data } = props;\r\n  const [data, setData] = useState<any>();\r\n  useEffect(() => {\r\n    setData({\r\n      datasets: [\r\n        {\r\n          label: \"points\",\r\n          data: props.data,\r\n          backgroundColor: \"rgba(255, 99, 132, 1)\",\r\n        },\r\n      ],\r\n    });\r\n  }, [props]);\r\n  return (\r\n    <div className=\"chart-dot\">\r\n      <Scatter data={data} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartElliptic;\r\n","import { sha512 } from \"js-sha512\";\r\nexport const hashCodeSHA = (value: any) => {\r\n  return hexToBn(sha512(value));\r\n};\r\nfunction hexToBn(hex: any) {\r\n  if (hex.length % 2) {\r\n    hex = \"0\" + hex;\r\n  }\r\n\r\n  var highbyte = parseInt(hex.slice(0, 2), 16);\r\n  var bn = BigInt(\"0x\" + hex);\r\n\r\n  if (0x80 & highbyte) {\r\n    bn =\r\n      BigInt(\r\n        \"0b\" +\r\n          bn\r\n            .toString(2)\r\n            .split(\"\")\r\n            .map(function (i) {\r\n              return \"0\" === i ? 1 : 0;\r\n            })\r\n            .join(\"\")\r\n      ) + BigInt(1);\r\n    bn = -bn;\r\n  }\r\n\r\n  return bn;\r\n}\r\n","import { Button, Divider } from \"@material-ui/core\";\r\nimport bigInt from \"big-integer\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { TemplateKatex } from \"../../../containers/markdown\";\r\nimport { multiplyPoint, plusPoint, Point } from \"../../../utils/elliptic\";\r\nimport { hashCodeSHA } from \"../../../utils/sha512\";\r\n\r\nimport InputContainer from \"../../form-input/inputContainer\";\r\nimport { InputItem } from \"../input\";\r\n\r\nimport \"./style.scss\";\r\nexport interface ElippticType {\r\n  x?: any;\r\n  s?: any;\r\n  r?: any;\r\n  xG?: any;\r\n  yG?: any;\r\n  d?: any;\r\n}\r\ninterface Props {\r\n  points?: Point[];\r\n  a?: any;\r\n  p?: any;\r\n}\r\n\r\nconst CheckSignElliptic = (props: any) => {\r\n  const { points, a, p } = props;\r\n  const [elippticType, setstate] = useState({} as ElippticType);\r\n  const getValue = (label: \"x\" | \"s\" | \"r\" | \"xG\" | \"yG\" | \"d\") => {\r\n    return elippticType[label];\r\n  };\r\n  const [P, setP] = useState<Point>();\r\n  const [G, setG] = useState<Point>();\r\n  const [z, setZ] = useState<any>();\r\n  const [Q, setQ] = useState<Point>();\r\n  const [IsValid, setIsValid] = useState(false);\r\n  const setValue = (label?: any) => (value: any) => {\r\n    setstate({ ...elippticType, [label]: value });\r\n    setIsValid(false);\r\n  };\r\n\r\n  const demo = () => {\r\n    setstate({ x: \"1\", s: \"34\", r: \"19\", xG: \"3\", yG: \"16\", d: \"2\" });\r\n    setIsValid(true);\r\n  };\r\n  useEffect(() => {\r\n    demo();\r\n  }, []);\r\n  useEffect(() => {\r\n    //P = s^-1xZxG + s^-1xrxQ\r\n\r\n    const { d, xG, yG, s, r, x } = elippticType;\r\n    if (d && G && Q && a > 0 && p > 0 && s && r && z) {\r\n      try {\r\n        let s_1 = Number(bigInt(s).modInv(p).toString());\r\n\r\n        let p_1_1 = bigInt(s_1).multiply(z).mod(p).toString();\r\n\r\n        let p_1 = multiplyPoint(G, Number(p_1_1), p, a);\r\n\r\n        let p_2_1 = bigInt(s_1).multiply(r).mod(p).toString();\r\n        let p_2 = multiplyPoint(Q, Number(p_2_1), p, a);\r\n\r\n        let P_point = plusPoint(p_1, p_2, a, p);\r\n        setP(P_point);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  }, [Q, elippticType, a, p, z]);\r\n  useEffect(() => {\r\n    const { d, xG, yG } = elippticType;\r\n    if (d && xG && yG) {\r\n      let G_point = { x: xG, y: yG };\r\n      setG(G_point);\r\n      setQ(multiplyPoint(G_point, d, p, a));\r\n    }\r\n  }, [elippticType]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      setZ(hashCodeSHA(elippticType.x).toString());\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }, [elippticType.x]);\r\n  const inputValues = [\r\n    {\r\n      label: \"x\",\r\n      onChange: setValue(\"x\"),\r\n      placeholder: \"Nhập bản rõ x (0 < x < p) \",\r\n      type: \"number\",\r\n    },\r\n\r\n    {\r\n      label: \"s\",\r\n      onChange: setValue(\"s\"),\r\n      placeholder: \"Nhập chữ ký s\",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"r\",\r\n      onChange: setValue(\"r\"),\r\n      placeholder: \"Nhập chữ ký r\",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"d\",\r\n      onChange: setValue(\"d\"),\r\n      placeholder: \"Nhập khóa bí mật d \",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"xG\",\r\n      onChange: setValue(\"xG\"),\r\n      placeholder: \"Nhập xG\",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"yG\",\r\n      onChange: setValue(\"yG\"),\r\n      placeholder: \"Nhập yG\",\r\n      type: \"number\",\r\n    },\r\n  ] as InputItem[];\r\n  const start = () => {\r\n    if (\r\n      elippticType.x &&\r\n      elippticType.x != \"\" &&\r\n      elippticType.xG &&\r\n      elippticType.xG != \"\" &&\r\n      elippticType.yG &&\r\n      elippticType.yG != \"\" &&\r\n      elippticType.s &&\r\n      elippticType.s != \"\" &&\r\n      elippticType.r &&\r\n      elippticType.r != \"\" &&\r\n      elippticType.d &&\r\n      elippticType.d != \"\"\r\n    ) {\r\n      setIsValid(true);\r\n    } else {\r\n      setIsValid(false);\r\n    }\r\n  };\r\n\r\n  const reNew = () => {\r\n    setstate({} as ElippticType);\r\n    setIsValid(false);\r\n  };\r\n  const checkResult = () =>\r\n    elippticType?.r &&\r\n    P?.x &&\r\n    p &&\r\n    Number(bigInt(P?.x).mod(p)) === Number(bigInt(elippticType?.r).mod(p));\r\n  return (\r\n    <div className=\"ElGamal\">\r\n      <div className=\"input box\">\r\n        <div className=\"input-ElGamal \">\r\n          {inputValues.map((input, index) => (\r\n            <InputContainer\r\n              {...input}\r\n              key={index}\r\n              value={getValue(input.label as any)}\r\n            />\r\n          ))}\r\n          <div className=\"footer-input text-center\">\r\n            <div className=\"btn-options\">\r\n              <Button variant=\"outlined\" onClick={reNew}>\r\n                Tạo mới\r\n              </Button>\r\n            </div>\r\n            <div className=\"btn-options\">\r\n              <Button variant=\"outlined\" color=\"primary\" onClick={start}>\r\n                Kiểm tra\r\n              </Button>\r\n            </div>\r\n            <div className=\"btn-options\">\r\n              <Button variant=\"outlined\" color=\"primary\" onClick={demo}>\r\n                Demo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {true && (\r\n        <>\r\n          <div className=\"input box\">\r\n            <div className=\"encode-ElGamal\">\r\n              <div className=\"item\">\r\n                <div className=\"label text-bold\">\r\n                  <TemplateKatex element={`$Q = d*G = ( ${Q?.x},${Q?.y}) $`} />\r\n                </div>\r\n              </div>\r\n              <div className=\"item\">\r\n                <div className=\"label text-bold\">\r\n                  <TemplateKatex\r\n                    element={`$P= s^{-1}*z*G + s^{-1}*r*Q =  ( ${P?.x},${P?.y}) $`}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"item\">\r\n                <div className=\"label result\">\r\n                  <TemplateKatex element={\"$\\\\iff$\"} />\r\n                  {checkResult() ? \"Chữ ký hợp lệ\" : \"Chữ ký không hợp lệ\"}\r\n                </div>\r\n                <div className=\"vale\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckSignElliptic;\r\n","import { Divider } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { TemplateKatex } from \"../../../containers/markdown\";\r\nimport \"./style.scss\";\r\nexport interface DotProp {\r\n  data: { x: number; y: number }[];\r\n  a: any;\r\n  b: any;\r\n}\r\nconst DotList = (props: DotProp) => {\r\n  const { data, a, b } = props;\r\n  return (\r\n    <div className=\"dot-list\">\r\n      <div className=\"genarate-key-rsa\">\r\n        <h4>\r\n          Các điểm trên E43({a},{b}) là điểm vô cực O và các điểm sau\r\n        </h4>\r\n        <Divider />\r\n        {data.map((i, index) => (\r\n          <DotItem {...i} key={index} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst DotItem = (props: { x: number; y: number }) => {\r\n  const { x, y } = props;\r\n  return (\r\n    <div className=\"dot\">\r\n      <TemplateKatex element={`\\$(${x}, ${y})\\$`} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DotList;\r\n","import { Divider } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { TemplateKatex } from \"../../../containers/markdown\";\r\ninterface Props {\r\n  M1?: any;\r\n  M2?: any;\r\n  B?: any;\r\n  P?: { x: any; y: any };\r\n  s?: any;\r\n  k?: any;\r\n  a?: any;\r\n  b?: any;\r\n  p?: any;\r\n}\r\n\r\nconst GenarateKeyElliptic = (props: Props) => {\r\n  const { s, M1, M2, B, P, k, a, b, p } = props;\r\n  return (\r\n    <div className=\"genarate-key-rsa\">\r\n      <h4> Sinh khóa</h4>\r\n      <Divider />\r\n      <div className=\"item\">\r\n        <div className=\"label\">\r\n          <TemplateKatex element={`$(s)  = (${s}) $`} />\r\n        </div>\r\n      </div>\r\n      {P && B && (\r\n        <div className=\"item\">\r\n          <div className=\"label text-bold\">\r\n            <TemplateKatex\r\n              element={`$B = sP = ${s} * (${P.x}, ${P?.y}) = (${B.x}, ${B.y})  $`}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className=\"item\">\r\n        <div className=\"label text-bold\">\r\n          <TemplateKatex element={`$E(a,b) = E(${a},${b})$`} />\r\n        </div>\r\n      </div>{\" \"}\r\n      <div className=\"item\">\r\n        <div className=\"label text-bold\">\r\n          <TemplateKatex element={`$p = ${p}$`} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GenarateKeyElliptic;\r\n","import { Button, Divider } from \"@material-ui/core\";\r\n\r\nimport bigInt from \"big-integer\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { TemplateKatex } from \"../../../containers/markdown\";\r\nimport { multiplyPoint, Point } from \"../../../utils/elliptic\";\r\nimport { mod } from \"../../../utils/gcd\";\r\nimport { hashCodeSHA } from \"../../../utils/sha512\";\r\nimport InputContainer from \"../../form-input/inputContainer\";\r\nimport { SelectInput } from \"../../form-input/selectInput\";\r\nimport { InputItem } from \"../input\";\r\n\r\nimport \"./style.scss\";\r\nexport interface EllipticType {\r\n  d?: any;\r\n  G?: Point;\r\n  x?: any;\r\n  k?: any;\r\n}\r\ninterface Props {\r\n  points?: Point[];\r\n  p?: any;\r\n  a?: any;\r\n  b?: any;\r\n}\r\n\r\nconst EllipticSign = (props: Props) => {\r\n  const { points, a, b, p } = props;\r\n  const [ellipticType, setstate] = useState({} as EllipticType);\r\n  const [Q, setQ] = useState<Point>();\r\n  const [P, setP] = useState<Point>();\r\n  const [h, setH] = useState<any>();\r\n  const [s, setS] = useState<any>();\r\n\r\n  const getValue = (label: \"x\" | \"d\" | \"G\" | \"k\") => {\r\n    return ellipticType[label];\r\n  };\r\n\r\n  const [IsValid, setIsValid] = useState(false);\r\n  const setValue = (label?: any) => (value: any) => {\r\n    setstate({ ...ellipticType, [label]: value });\r\n    setIsValid(false);\r\n  };\r\n\r\n  const demo = () => {\r\n    setstate({\r\n      d: \"2\",\r\n      x: \"1\",\r\n      k: \"2\",\r\n      G: { x: \"3\", y: \"16\" },\r\n    });\r\n    console.log(\"deádadmo\");\r\n\r\n    setIsValid(true);\r\n  };\r\n  const start = () => {\r\n    if (\r\n      ellipticType.x &&\r\n      ellipticType.x != \"\" &&\r\n      ellipticType.d &&\r\n      ellipticType.d != \"\" &&\r\n      ellipticType.G\r\n    ) {\r\n      setIsValid(true);\r\n    } else {\r\n      setIsValid(false);\r\n    }\r\n  };\r\n\r\n  const reNew = () => {\r\n    setstate({});\r\n    setIsValid(false);\r\n  };\r\n  useEffect(() => {\r\n    demo();\r\n  }, []);\r\n  const inputValues = [\r\n    {\r\n      label: \"d\",\r\n      onChange: setValue(\"d\"),\r\n      placeholder: \"Nhập khóa bí mật dA\",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"x\",\r\n      onChange: setValue(\"x\"),\r\n      placeholder: \"Nhập bản rõ x\",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"k\",\r\n      onChange: setValue(\"k\"),\r\n      placeholder: \"Chọn số ngẫu nhiên k\",\r\n      type: \"number\",\r\n    },\r\n  ] as InputItem[];\r\n  const changeGPoint = (value: any) => {\r\n    setstate({ ...ellipticType, G: value });\r\n  };\r\n  useEffect(() => {\r\n    try {\r\n      const { G, d, k } = ellipticType;\r\n      //Q = d*g mod p\r\n      if (G && d) {\r\n        setQ(multiplyPoint(G, d, p, a));\r\n      }\r\n      if (G && k) {\r\n        setP(multiplyPoint(G, k, p, a));\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }, [ellipticType]);\r\n  useEffect(() => {\r\n    try {\r\n      setH(hashCodeSHA(ellipticType.x).toString());\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }, [ellipticType.x]);\r\n  useEffect(() => {\r\n    try {\r\n      const { d, k } = ellipticType;\r\n      const r = P?.x;\r\n      if (d && k && r != null) {\r\n        let s1_value = bigInt(h).add(bigInt(d).multiply(r));\r\n\r\n        let s2_value = bigInt(k).modInv(p);\r\n        let s_value = s2_value.multiply(s1_value).mod(p);\r\n        if (s_value.lesser(0)) {\r\n          s_value = s_value.add(p);\r\n        }\r\n        setS(s_value);\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }, [ellipticType, P, h, p]);\r\n\r\n  return (\r\n    <div className=\"ElGamal\">\r\n      <div className=\"input box\">\r\n        <div className=\"input-rsa \">\r\n          {inputValues.map((input, index) => (\r\n            <InputContainer\r\n              {...input}\r\n              key={index}\r\n              value={getValue(input.label as any)}\r\n            />\r\n          ))}\r\n          <SelectInput\r\n            label=\"Chọn điểm sinh G\"\r\n            data={points}\r\n            onChange={changeGPoint}\r\n            key={1}\r\n            value={ellipticType.G}\r\n          />\r\n\r\n          <div className=\"footer-input text-center\">\r\n            <div className=\"btn-options\">\r\n              <Button variant=\"outlined\" onClick={reNew}>\r\n                Tạo mới\r\n              </Button>\r\n            </div>\r\n            <div className=\"btn-options\" onClick={start}>\r\n              <Button variant=\"outlined\" color=\"primary\">\r\n                Ký\r\n              </Button>\r\n            </div>\r\n            <div className=\"btn-options\" onClick={demo}>\r\n              <Button variant=\"outlined\" color=\"primary\">\r\n                Demo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {true && (\r\n        <>\r\n          <div className=\"box\">\r\n            <>\r\n              <h4> Sinh khóa</h4>\r\n              <div className=\"genarate-key-rsa\">\r\n                <Divider />\r\n                <div className=\"item\">\r\n                  <div className=\"label text-bold\">\r\n                    <TemplateKatex\r\n                      element={`$Q = d *G \\\\pmod{p} = ${ellipticType.d} * (${ellipticType?.G?.x}, ${ellipticType?.G?.y}) = (${Q?.x}, ${Q?.y})  $`}\r\n                    />\r\n                  </div>\r\n                  <div className=\"value\">{}</div>\r\n                </div>\r\n                <div className=\"item\">\r\n                  <div className=\"label text-bold\">\r\n                    <TemplateKatex element={`$KeyPulic =  [Q] $`} />\r\n                  </div>\r\n                  <div className=\"value\">{}</div>\r\n                </div>\r\n                <div className=\"item\">\r\n                  <div className=\"label text-bold\">\r\n                    <TemplateKatex element={`$KeyPrivate =  [G,d] $`} />\r\n                  </div>\r\n                  <div className=\"value\">{}</div>\r\n                </div>\r\n              </div>\r\n            </>\r\n          </div>\r\n          <div className=\"input box\">\r\n            <div className=\"genarate-key-rsa\">\r\n              <h4> Ký trên bản rõ x = {ellipticType.x}</h4>\r\n              <Divider />\r\n              <div className=\"item\">\r\n                <div className=\"label text-bold\">\r\n                  <TemplateKatex\r\n                    element={`$P = k *G \\\\pmod{p} = ${ellipticType.k} * (${ellipticType?.G?.x}, ${ellipticType?.G?.y}) = (${P?.x}, ${P?.y})  $`}\r\n                  />\r\n                </div>\r\n                <div className=\"value\">{}</div>\r\n              </div>{\" \"}\r\n              <div className=\"item\">\r\n                <div className=\"label text-bold\">\r\n                  <TemplateKatex element={`$r = x_P  = ${P?.x}  $`} />\r\n                </div>\r\n                <div className=\"value\">{}</div>\r\n              </div>\r\n              <Divider />\r\n              <div className=\"item\">\r\n                <div className=\"label text-bold\">\r\n                  <TemplateKatex element={`$h = H(X) :   $`} />\r\n                </div>\r\n                <div className=\"value\">{h}</div>\r\n              </div>\r\n              <Divider />\r\n              <div className=\"item\">\r\n                <div className=\"label text-bold\">\r\n                  <TemplateKatex\r\n                    element={`$s = k^{-1}(h + d_A * r)\\\\pmod{p} = ${s} $`}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <Divider />\r\n              <div className=\"item\">\r\n                <div className=\"label text-bold\">\r\n                  <TemplateKatex\r\n                    element={`$sign = (s, r) = ( ${s}, ${P?.x}) $`}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EllipticSign;\r\n","import { Button, Divider } from \"@material-ui/core\";\r\nimport bigInt from \"big-integer\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { TemplateKatex } from \"../../containers/markdown\";\r\nimport {\r\n  getK,\r\n  getPoints,\r\n  getPowY,\r\n  getQ,\r\n  multiplyPoint,\r\n  plusPoint,\r\n  Point,\r\n} from \"../../utils/elliptic\";\r\nimport InputContainer from \"../form-input/inputContainer\";\r\nimport { SelectInput } from \"../form-input/selectInput\";\r\nimport ChartElliptic from \"./chartElliptic\";\r\nimport CheckSignElliptic from \"./checkSign\";\r\nimport DotList from \"./dotList\";\r\nimport GenarateKeyElliptic from \"./genarate_key\";\r\nimport InputElliptic, { InputItem } from \"./input\";\r\nimport EllipticSign from \"./sign\";\r\n\r\nimport \"./style.scss\";\r\nexport interface EllipticType {\r\n  a?: any;\r\n  b?: any;\r\n  p?: any;\r\n}\r\nexport interface EncodeProp {\r\n  s?: any;\r\n  P?: { x: any; y: any };\r\n  k?: any;\r\n  M?: { x: any; y: any };\r\n}\r\n\r\nconst EllipticBuild = () => {\r\n  const [ellipticType, setstate] = useState({\r\n    a: \"\",\r\n    b: \"\",\r\n    p: \"\",\r\n  } as EllipticType);\r\n  const [encodeType, setEncodeType] = useState({} as EncodeProp);\r\n  const [dataDots, setDataDots] = useState([]);\r\n  const [Q, setQ] = useState([]);\r\n  const [M1, setM1] = useState<Point>();\r\n  const [M2, setM2] = useState<Point>({} as Point);\r\n  const [MDecode, setMDecode] = useState<Point>();\r\n  const [powY, setPowY] = useState([]);\r\n  const [B, setB] = useState<Point>();\r\n\r\n  useEffect(() => {\r\n    const { a, b, p } = ellipticType;\r\n    let q = getQ(ellipticType.p);\r\n\r\n    setQ(q as any);\r\n  }, [ellipticType]);\r\n  const reNew = () => {\r\n    setstate({} as EllipticType);\r\n    setEncodeType({});\r\n    setIsValid(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const { a, b, p } = ellipticType;\r\n\r\n    setPowY(getPowY(p, a, b, Q) as any);\r\n  }, [ellipticType, Q]);\r\n  useEffect(() => {\r\n    const { a, b, p } = ellipticType;\r\n\r\n    setDataDots(getPoints(powY as any) as any);\r\n  }, [powY]);\r\n\r\n  const demo = () => {\r\n    setstate({\r\n      a: \"4\",\r\n      b: \"2\",\r\n      p: \"43\",\r\n    });\r\n    setEncodeType({\r\n      P: { x: \"12\", y: \"12\" },\r\n      s: \"10\",\r\n      k: 14,\r\n      M: { x: \"18\", y: \"12\" },\r\n    });\r\n  };\r\n  const [IsValid, setIsValid] = useState(false);\r\n  const getValue = (label: \"a\" | \"b\" | \"p\") => {\r\n    return ellipticType[label];\r\n  };\r\n  useEffect(() => {\r\n    const { P, s, k } = encodeType;\r\n    const { p, a } = ellipticType;\r\n    if (P && s && s > 0 && p > 0 && a > 0) {\r\n      try {\r\n        let kPoint = multiplyPoint(P, s, p, a);\r\n        setB(kPoint);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n    if (P && k && k > 0 && p > 0 && a > 0) {\r\n      try {\r\n        let kPoint = multiplyPoint(P, k, p, a);\r\n        console.log(kPoint);\r\n\r\n        setM1(kPoint);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  }, [encodeType, ellipticType]);\r\n\r\n  const setValue = (label?: any) => (value: any) => {\r\n    value = Math.min(2281, value);\r\n    setstate({ ...ellipticType, [label]: value });\r\n    setEncodeType({});\r\n    setIsValid(false);\r\n  };\r\n  useEffect(() => {\r\n    demo();\r\n  }, []);\r\n  const inputValues = [\r\n    {\r\n      label: \"a\",\r\n      onChange: setValue(\"a\"),\r\n      placeholder: \"Nhập số \",\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"b\",\r\n      onChange: setValue(\"b\"),\r\n      placeholder: \"Nhập số b\",\r\n      type: \"number\",\r\n    },\r\n\r\n    {\r\n      label: \"p\",\r\n      onChange: setValue(\"p\"),\r\n      placeholder: \"Nhập số nguyên tố p (độ dài khoảng 160 bit) \",\r\n      type: \"number\",\r\n    },\r\n  ] as InputItem[];\r\n  const setValuePoint = (label: string, value: any) => {\r\n    setEncodeType({ ...encodeType, [label]: value });\r\n  };\r\n  useEffect(() => {\r\n    const { P, s, k, M } = encodeType;\r\n    const { p, a } = ellipticType;\r\n    if (M1 && P && M && s && s > 0 && p > 0 && a > 0) {\r\n      try {\r\n        // m = M2 - sM1\r\n        let sM1 = multiplyPoint(M1, s, p, a);\r\n        // console.log(sM1, s, M1);\r\n\r\n        let SM1_ = { x: sM1.x, y: bigInt(p).minus(sM1.y).toString() };\r\n\r\n        // console.log(M2, SM1_);\r\n\r\n        let kPoint = plusPoint(M2, SM1_, a, p);\r\n        setMDecode(kPoint);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  }, [M2, M1, encodeType, ellipticType]);\r\n  useEffect(() => {\r\n    // console.log(encodeType); const { P, s, k } = encodeType;\r\n    const { P, s, k, M } = encodeType;\r\n    const { p, a } = ellipticType;\r\n    if (M1 && P && M && s && s > 0 && p > 0 && a > 0 && B) {\r\n      try {\r\n        let kM1 = k;\r\n        let kM = getK(M, P, p, a);\r\n        // console.log(\"k\", kM);\r\n\r\n        let kM2 = Number(kM1) + kM * Number(s);\r\n        // let kPoint = multiplyPoint(P, kM2, p, a);\r\n        // m2 = m + kB\r\n        let KB = multiplyPoint(B, k, p, a);\r\n        // console.log(\"M\", M, KB);\r\n\r\n        let m2 = plusPoint(M, KB, a, p);\r\n\r\n        setM2(m2);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  }, [M1, encodeType, ellipticType, B]);\r\n  return (\r\n    <div className=\"Elliptic\">\r\n      <div className=\"input box\">\r\n        <div className=\"input-Elliptic \">\r\n          {inputValues.map((input, index) => (\r\n            <InputContainer\r\n              {...input}\r\n              key={index}\r\n              value={getValue(input.label as any)}\r\n            />\r\n          ))}\r\n          <div className=\"footer-input text-center\">\r\n            <div className=\"btn-options\">\r\n              <Button variant=\"outlined\" onClick={reNew}>\r\n                Tạo mới\r\n              </Button>\r\n            </div>\r\n            <div className=\"btn-options\">\r\n              <Button variant=\"outlined\" color=\"primary\">\r\n                Xây dựng\r\n              </Button>\r\n            </div>\r\n            <div className=\"btn-options\">\r\n              <Button variant=\"outlined\" color=\"primary\" onClick={demo}>\r\n                Demo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"input box\">\r\n        <ChartElliptic data={dataDots} />\r\n      </div>\r\n      <div className=\"input box\">\r\n        {dataDots && (\r\n          <DotList data={dataDots} a={ellipticType.a} b={ellipticType.b} />\r\n        )}\r\n      </div>\r\n      <div className=\"input box\">\r\n        <div className=\"genarate-key-rsa\">\r\n          <h4> Thực hiện mã hóa</h4>\r\n          <Divider />\r\n          <div className=\"item\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6 col-12\">\r\n                <SelectInput\r\n                  data={dataDots}\r\n                  label=\"Chọn điểm M để mã hóa\"\r\n                  onChange={(value) => setValuePoint(\"M\", value)}\r\n                  value={encodeType.M}\r\n                  key={1}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6 col-12\">\r\n                <SelectInput\r\n                  data={dataDots}\r\n                  key={2}\r\n                  label=\"Chọn khóa công khai P\"\r\n                  onChange={(value) => setValuePoint(\"P\", value)}\r\n                  value={encodeType.P}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6 col-12\">\r\n                <InputContainer\r\n                  placeholder=\"Nhập khóa bí mật s\"\r\n                  key={1}\r\n                  type=\"number\"\r\n                  onChange={(value) => setValuePoint(\"s\", value)}\r\n                  value={encodeType.s}\r\n                  label=\"s\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6 col-12\">\r\n                <InputContainer\r\n                  placeholder=\"Nhập hệ số k\"\r\n                  key={2}\r\n                  type=\"number\"\r\n                  onChange={(value) => setValuePoint(\"k\", value)}\r\n                  value={encodeType.k}\r\n                  label=\"k\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"input box\">\r\n        <GenarateKeyElliptic {...{ ...encodeType, ...ellipticType, B }} />\r\n      </div>\r\n      <div className=\"input box\">\r\n        <div className=\"genarate-key-rsa\">\r\n          <h4> Lập mã</h4>\r\n          <Divider />\r\n          <div className=\"item\">\r\n            <div className=\"label text-bold\">\r\n              <TemplateKatex\r\n                element={`$M_1 = kP\\\\pmod{p} = ${encodeType.k} * (${encodeType?.P?.x}, ${encodeType?.P?.y}) = (${M1?.x}, ${M1?.y})$`}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"item\">\r\n            <div className=\"label text-bold\">\r\n              <TemplateKatex\r\n                element={`$M_2 = (M + kB)\\\\pmod{p} = (${M2?.x},${M2?.y})$`}\r\n              />\r\n            </div>\r\n          </div>\r\n          <Divider />\r\n          <div className=\"item\">\r\n            <div className=\"label text-bold\">\r\n              <TemplateKatex\r\n                element={`$K = [M_1,M_2] = [(${M1?.x},${M1?.y}),(${M2?.x},${M2?.y})]$`}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"input box\">\r\n        <div className=\"genarate-key-rsa\">\r\n          <h4> Giải mã</h4>\r\n          <Divider />\r\n          <div className=\"item\">\r\n            <div className=\"label text-bold\">\r\n              <TemplateKatex\r\n                element={`$M = (M_2 - s M_1)\\\\pmod{p} = (${MDecode?.x} , ${MDecode?.y})   :$`}\r\n              />\r\n            </div>\r\n          </div>\r\n          <Divider />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"input box\">\r\n        <div className=\"genarate-key-rsa\">\r\n          <h4> Chữ ký số ECDSA</h4>\r\n          <Divider />\r\n          <EllipticSign {...{ ...ellipticType, points: dataDots }} />\r\n        </div>\r\n      </div>\r\n      <div className=\"input box\">\r\n        <div className=\"genarate-key-rsa\">\r\n          <h4> Kiểm tra chữ ký</h4>\r\n          <Divider />\r\n          <CheckSignElliptic {...{ ...ellipticType, points: dataDots }} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EllipticBuild;\r\n","import React from \"react\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport TimerIcon from \"@material-ui/icons/Timer\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\n\r\nimport WatchLaterIcon from \"@material-ui/icons/WatchLater\";\r\nimport { TabsRender } from \"../../../../components/common/Tab\";\r\nimport { LabelIcon } from \"../../../../components/common/icon\";\r\nimport EllipticBuild from \"../../../../components/Elliptic\";\r\n\r\ninterface Props {}\r\nconst apartmentTab = [\r\n  {\r\n    label: <LabelIcon label=\"Xây dựng hệ mật\" icon={<CheckCircleIcon />} />,\r\n\r\n    icon: CheckCircleIcon,\r\n    component: <EllipticBuild />,\r\n  },\r\n];\r\nexport const Elliptic = (props: Props) => {\r\n  return (\r\n    <>\r\n      <TabsRender input={apartmentTab} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Elliptic;\r\n","import {\r\n  BarChart as BarChartIcon,\r\n  ShoppingBag as ShoppingBagIcon,\r\n  User as UserIcon,\r\n} from \"react-feather\";\r\n\r\nimport ApartmentIcon from \"@material-ui/icons/Apartment\";\r\n\r\nimport { Redirect, Route, Router, Switch } from \"react-router-dom\";\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport { ElGamal } from \"./outlets/ElGamal\";\r\nimport RSA from \"./outlets/RSA\";\r\nimport Elliptic from \"./outlets/Elliptic\";\r\n\r\nexport const routes = [\r\n  {\r\n    href: \"/crypto-rsa-elgamal-elliptic/rsa\",\r\n    icon: BarChartIcon,\r\n    title: \"Hệ mật RSA\",\r\n    component: RSA,\r\n  },\r\n  {\r\n    href: \"/crypto-rsa-elgamal-elliptic/elgamal\",\r\n    icon: UserIcon,\r\n    title: \"Hệ mật ElGamal\",\r\n    component: ElGamal,\r\n  },\r\n  {\r\n    href: \"/crypto-rsa-elgamal-elliptic/elliptic\",\r\n    icon: ApartmentIcon,\r\n    title: \"Đường cong Elliptic\",\r\n    component: Elliptic,\r\n  },\r\n];\r\nconst RouteAdminItem = (route: any) => {\r\n  useEffect(() => {\r\n    console.log(\"aaag\");\r\n  }, []);\r\n  return <Route exact path={route.href} component={route.component}></Route>;\r\n};\r\nexport const RouteAdmin = () => {\r\n  useEffect(() => {\r\n    console.log(routes);\r\n  }, []);\r\n  return (\r\n    <Switch>\r\n      {routes.map((route, i) => (\r\n        <Route\r\n          exact\r\n          path={route.href}\r\n          component={route.component}\r\n          key={i}\r\n        ></Route>\r\n      ))}\r\n      <Redirect\r\n        path=\"/crypto-rsa-elgamal-elliptic\"\r\n        to=\"/crypto-rsa-elgamal-elliptic/rsa\"\r\n      />\r\n    </Switch>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { Link as RouterLink, useLocation } from \"react-router-dom\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Divider,\r\n  Drawer,\r\n  Hidden,\r\n  List,\r\n  Typography,\r\n  makeStyles,\r\n  withStyles,\r\n  Theme,\r\n  createStyles,\r\n} from \"@material-ui/core\";\r\n\r\nimport { role } from \"../../../settings/role\";\r\nimport NavItem from \"./navbarItem\";\r\nimport { routes } from \"../router\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  mobileDrawer: {\r\n    width: 256,\r\n  },\r\n  desktopDrawer: {\r\n    width: 256,\r\n    top: 64,\r\n    height: \"calc(100% - 64px)\",\r\n  },\r\n  avatar: {\r\n    cursor: \"pointer\",\r\n    width: 64,\r\n    height: 64,\r\n    // border: `2px solid gray`,\r\n    boxShadow:\r\n      \": 0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)\",\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\ninterface Props {\r\n  onMobileClose: () => void;\r\n  openMobile: boolean;\r\n}\r\nconst SmallAvatar = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: 22,\r\n      height: 22,\r\n      border: `2px solid ${theme.palette.background.paper}`,\r\n      cursor: \"pointer\",\r\n    },\r\n  })\r\n)(Avatar);\r\n\r\nconst NavBar = (props: Props) => {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n\r\n  const { onMobileClose, openMobile } = props;\r\n\r\n  useEffect(() => {\r\n    if (openMobile && onMobileClose) {\r\n      onMobileClose();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [location.pathname]);\r\n\r\n  const content = (\r\n    <Box height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n      <Box alignItems=\"center\" display=\"flex\" flexDirection=\"column\" p={2}>\r\n        {/* <Avatar className={classes.avatar} src={user?.avatar?.url} /> */}\r\n        <Badge\r\n          overlap=\"circle\"\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"right\",\r\n          }}\r\n          badgeContent={\r\n            <>\r\n              <input\r\n                type=\"file\"\r\n                className={classes.input}\r\n                id=\"icon-button-file\"\r\n              />\r\n              <label htmlFor=\"icon-button-file\">\r\n                <SmallAvatar\r\n                  alt=\"Remy Sharp\"\r\n                  src={process.env.PUBLIC_URL + \"/assets/edit-avatar.png\"}\r\n                />\r\n              </label>\r\n            </>\r\n          }\r\n        >\r\n          <Avatar className={classes.avatar} />\r\n        </Badge>\r\n        <Typography color=\"textPrimary\" variant=\"h5\">\r\n          {process.env.REACT_APP_NAME}\r\n        </Typography>\r\n        <Typography color=\"textSecondary\" variant=\"body2\">\r\n          {\"18021277\"}\r\n        </Typography>\r\n      </Box>\r\n      <Divider />\r\n      <Box p={2}>\r\n        <List>\r\n          {routes.map((item) => {\r\n            return (\r\n              <NavItem\r\n                href={item.href}\r\n                key={item.title}\r\n                title={item.title}\r\n                icon={item.icon}\r\n              />\r\n            );\r\n          })}\r\n        </List>\r\n      </Box>\r\n      <Box flexGrow={1} />\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Hidden lgUp>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.mobileDrawer }}\r\n          onClose={onMobileClose}\r\n          open={openMobile}\r\n          variant=\"temporary\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden mdDown>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.desktopDrawer }}\r\n          open\r\n          variant=\"persistent\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nimport { Redirect, Route, Switch, useHistory } from \"react-router\";\r\nimport TopBar from \"./topbar\";\r\nimport NavBar from \"./navbar\";\r\nimport { RouteAdmin, routes } from \"./router\";\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  root: {\r\n    backgroundColor: \"#F4F6F8\",\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n    overflow: \"hidden\",\r\n    width: \"100%\",\r\n  },\r\n  wrapper: {\r\n    display: \"flex\",\r\n    flex: \"1 1 auto\",\r\n    overflow: \"hidden\",\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      paddingLeft: 250,\r\n    },\r\n  },\r\n  contentContainer: {\r\n    display: \"flex\",\r\n    flex: \"1 1 auto\",\r\n    overflow: \"hidden\",\r\n    paddingTop: theme.spacing(2),\r\n  },\r\n  content: {\r\n    flex: \"1 1 auto\",\r\n    height: \"100%\",\r\n    overflow: \"auto\",\r\n  },\r\n}));\r\n\r\nconst DashboardLayout = () => {\r\n  const classes = useStyles();\r\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\r\n  const history = useHistory();\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TopBar onMobileNavOpen={() => setMobileNavOpen(true)} />\r\n      <NavBar\r\n        onMobileClose={() => setMobileNavOpen(false)}\r\n        openMobile={isMobileNavOpen}\r\n      />\r\n      <div className={classes.wrapper}>\r\n        <div className={classes.contentContainer}>\r\n          <div className={classes.content} style={{ minHeight: 850 }}>\r\n            <RouteAdmin />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardLayout;\r\n","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { role } from \"../../settings/role\";\r\nimport { NotFoundPage } from \"../pages/404\";\r\nimport { AboutPage } from \"../pages/about\";\r\nimport { AdminPage } from \"../pages/admin\";\r\nimport { HomePage } from \"../pages/home\";\r\n\r\n// todo\r\nconst nameApp = \"Nhập môn an toàn thông tin\";\r\nexport const routes = [\r\n  {\r\n    path: \"/crypto-rsa-elgamal-elliptic\",\r\n    roleDefine: [],\r\n    public: true,\r\n    component: AdminPage,\r\n    name: \"Nhập môn an toàn thông tin\",\r\n  },\r\n];\r\nconst setTitleDocument = (name?: string) => {\r\n  document.title = name || nameApp;\r\n};\r\n\r\nexport const RoutesApp = () => {\r\n  return (\r\n    <Switch>\r\n      {routes.map((route, index) => (\r\n        <RouteItem key={index} {...route} />\r\n      ))}\r\n\r\n      <Redirect to=\"/crypto-rsa-elgamal-elliptic\"></Redirect>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport const RouteItem = (props?: any) => {\r\n  return <Route {...props}>{setTitleDocument(props.name)}</Route>;\r\n};\r\n","import React from \"react\";\r\nimport DashboardLayout from \"../../../containers/admin\";\r\n\r\nexport const AdminPage = () => {\r\n  return (\r\n    <div>\r\n      <DashboardLayout />\r\n    </div>\r\n  );\r\n};\r\n","import { createBrowserHistory } from \"history\";\r\n\r\nexport const history = createBrowserHistory();\r\nexport const requireLogin = (path?: string) => {\r\n  return history.push({\r\n    pathname: \"/login\",\r\n    search: \"?\" + new URLSearchParams(path).toString(),\r\n  });\r\n};\r\nexport const backToHome = () => {\r\n  return history.push(\"/\");\r\n};\r\n","import { createBrowserHistory } from \"history\";\r\nimport React from \"react\";\r\nimport { Redirect, Route, Router, Switch, useLocation } from \"react-router-dom\";\r\nimport logo from \"../logo.svg\";\r\nimport \"./index.scss\";\r\n\r\nimport { routes, RoutesApp } from \"./router\";\r\nimport { history } from \"../service/history\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router history={history}>\r\n        <div className={\"HeaderItem\"}></div>\r\n        <div className=\"main-content\">\r\n          <RoutesApp />\r\n        </div>\r\n\r\n        <div className=\"footer\"></div>\r\n      </Router>\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport App from \"./app\";\r\nimport \"./index.scss\";\r\n\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { persistor, store } from \"./service/reduxStore\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}